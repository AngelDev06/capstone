/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2022, */
/*    Rot127 <unisono@quyllur.org> 2022-2023 */
/* Automatically generated file by Capstone's LLVM TableGen Disassembler Backend. */

/* LLVM-commit: 464bda7750a3ba9e23823fc707d7e7b6fc38438d */
/* LLVM-tag: llvmorg-16.0.2-5-g464bda7750a3 */

/* Do not edit. */

/* Capstone's LLVM TableGen Backends: */
/* https://github.com/capstone-engine/llvm-capstone */

#include <capstone/platform.h>
#include <assert.h>

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
static MnemonicBitsInfo getMnemonic(MCInst *MI, SStream *O) {
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ "#EH_SjLj_Setup\t\0"
  /* 16 */ "bdzla+ \0"
  /* 24 */ "bdnzla+ \0"
  /* 33 */ "bdza+ \0"
  /* 40 */ "bdnza+ \0"
  /* 48 */ "bdzl+ \0"
  /* 55 */ "bdnzl+ \0"
  /* 63 */ "bdz+ \0"
  /* 69 */ "bdnz+ \0"
  /* 76 */ "bcl 20, 31, \0"
  /* 89 */ "bctrl\n\tld 2, \0"
  /* 103 */ "bctrl\n\tlwz 2, \0"
  /* 118 */ "bc 12, \0"
  /* 126 */ "bcl 12, \0"
  /* 135 */ "bclrl 12, \0"
  /* 146 */ "bcctrl 12, \0"
  /* 158 */ "bclr 12, \0"
  /* 168 */ "bcctr 12, \0"
  /* 179 */ "mtspr 3, \0"
  /* 189 */ "bc 4, \0"
  /* 196 */ "bcl 4, \0"
  /* 204 */ "bclrl 4, \0"
  /* 214 */ "bcctrl 4, \0"
  /* 225 */ "bclr 4, \0"
  /* 234 */ "bcctr 4, \0"
  /* 244 */ "mtspr 256, \0"
  /* 256 */ "bdzla- \0"
  /* 264 */ "bdnzla- \0"
  /* 273 */ "bdza- \0"
  /* 280 */ "bdnza- \0"
  /* 288 */ "bdzl- \0"
  /* 295 */ "bdnzl- \0"
  /* 303 */ "bdz- \0"
  /* 309 */ "bdnz- \0"
  /* 316 */ "vcmpneb. \0"
  /* 326 */ "vcmpgtsb. \0"
  /* 337 */ "extsb. \0"
  /* 345 */ "vcmpequb. \0"
  /* 356 */ "bcdsub. \0"
  /* 365 */ "fsub. \0"
  /* 372 */ "fmsub. \0"
  /* 380 */ "fnmsub. \0"
  /* 389 */ "vcmpgtub. \0"
  /* 400 */ "vcmpnezb. \0"
  /* 411 */ "addc. \0"
  /* 418 */ "andc. \0"
  /* 425 */ "tabortdc. \0"
  /* 436 */ "subfc. \0"
  /* 444 */ "subic. \0"
  /* 452 */ "addic. \0"
  /* 460 */ "rldic. \0"
  /* 468 */ "bcdtrunc. \0"
  /* 479 */ "bcdutrunc. \0"
  /* 491 */ "orc. \0"
  /* 497 */ "tabortwc. \0"
  /* 508 */ "srad. \0"
  /* 515 */ "bcdadd. \0"
  /* 524 */ "fadd. \0"
  /* 531 */ "fmadd. \0"
  /* 539 */ "fnmadd. \0"
  /* 548 */ "mulhd. \0"
  /* 556 */ "fcfid. \0"
  /* 564 */ "fctid. \0"
  /* 572 */ "mulld. \0"
  /* 580 */ "sld. \0"
  /* 586 */ "nand. \0"
  /* 593 */ "tend. \0"
  /* 600 */ "srd. \0"
  /* 606 */ "vcmpgtsd. \0"
  /* 617 */ "vcmpequd. \0"
  /* 628 */ "vcmpgtud. \0"
  /* 639 */ "divd. \0"
  /* 646 */ "cntlzd. \0"
  /* 655 */ "cnttzd. \0"
  /* 664 */ "adde. \0"
  /* 671 */ "divde. \0"
  /* 679 */ "slbfee. \0"
  /* 688 */ "subfe. \0"
  /* 696 */ "addme. \0"
  /* 704 */ "subfme. \0"
  /* 713 */ "fre. \0"
  /* 719 */ "frsqrte. \0"
  /* 729 */ "paste. \0"
  /* 737 */ "divwe. \0"
  /* 745 */ "addze. \0"
  /* 753 */ "subfze. \0"
  /* 762 */ "subf. \0"
  /* 769 */ "mtfsf. \0"
  /* 777 */ "fneg. \0"
  /* 784 */ "vcmpneh. \0"
  /* 794 */ "vcmpgtsh. \0"
  /* 805 */ "extsh. \0"
  /* 813 */ "vcmpequh. \0"
  /* 824 */ "vcmpgtuh. \0"
  /* 835 */ "vcmpnezh. \0"
  /* 846 */ "tabortdci. \0"
  /* 858 */ "tabortwci. \0"
  /* 870 */ "sradi. \0"
  /* 878 */ "clrlsldi. \0"
  /* 889 */ "extldi. \0"
  /* 898 */ "andi. \0"
  /* 905 */ "clrrdi. \0"
  /* 914 */ "insrdi. \0"
  /* 923 */ "rotrdi. \0"
  /* 932 */ "extrdi. \0"
  /* 941 */ "mtfsfi. \0"
  /* 950 */ "extswsli. \0"
  /* 961 */ "rldimi. \0"
  /* 970 */ "rlwimi. \0"
  /* 979 */ "srawi. \0"
  /* 987 */ "clrlslwi. \0"
  /* 998 */ "inslwi. \0"
  /* 1007 */ "extlwi. \0"
  /* 1016 */ "clrrwi. \0"
  /* 1025 */ "insrwi. \0"
  /* 1034 */ "rotrwi. \0"
  /* 1043 */ "extrwi. \0"
  /* 1052 */ "vstribl. \0"
  /* 1062 */ "rldcl. \0"
  /* 1070 */ "rldicl. \0"
  /* 1079 */ "fsel. \0"
  /* 1086 */ "vstrihl. \0"
  /* 1096 */ "fmul. \0"
  /* 1103 */ "treclaim. \0"
  /* 1114 */ "frim. \0"
  /* 1121 */ "rlwinm. \0"
  /* 1130 */ "rlwnm. \0"
  /* 1138 */ "bcdcfn. \0"
  /* 1147 */ "bcdcpsgn. \0"
  /* 1158 */ "fcpsgn. \0"
  /* 1167 */ "bcdsetsgn. \0"
  /* 1179 */ "tbegin. \0"
  /* 1188 */ "frin. \0"
  /* 1195 */ "bcdctn. \0"
  /* 1204 */ "addco. \0"
  /* 1212 */ "subfco. \0"
  /* 1221 */ "addo. \0"
  /* 1228 */ "mulldo. \0"
  /* 1237 */ "divdo. \0"
  /* 1245 */ "addeo. \0"
  /* 1253 */ "divdeo. \0"
  /* 1262 */ "subfeo. \0"
  /* 1271 */ "addmeo. \0"
  /* 1280 */ "subfmeo. \0"
  /* 1290 */ "divweo. \0"
  /* 1299 */ "addzeo. \0"
  /* 1308 */ "subfzeo. \0"
  /* 1318 */ "subfo. \0"
  /* 1326 */ "nego. \0"
  /* 1333 */ "divduo. \0"
  /* 1342 */ "divdeuo. \0"
  /* 1352 */ "divweuo. \0"
  /* 1362 */ "divwuo. \0"
  /* 1371 */ "mullwo. \0"
  /* 1380 */ "divwo. \0"
  /* 1388 */ "xvcmpgedp. \0"
  /* 1400 */ "xvcmpeqdp. \0"
  /* 1412 */ "xvcmpgtdp. \0"
  /* 1424 */ "vcmpbfp. \0"
  /* 1434 */ "vcmpgefp. \0"
  /* 1445 */ "vcmpeqfp. \0"
  /* 1456 */ "vcmpgtfp. \0"
  /* 1467 */ "frip. \0"
  /* 1474 */ "xvcmpgesp. \0"
  /* 1486 */ "xvcmpeqsp. \0"
  /* 1498 */ "frsp. \0"
  /* 1505 */ "xvcmpgtsp. \0"
  /* 1517 */ "icblq. \0"
  /* 1525 */ "bcdcfsq. \0"
  /* 1535 */ "bcdctsq. \0"
  /* 1545 */ "vcmpgtsq. \0"
  /* 1556 */ "vcmpequq. \0"
  /* 1567 */ "vcmpgtuq. \0"
  /* 1578 */ "vstribr. \0"
  /* 1588 */ "rldcr. \0"
  /* 1596 */ "rldicr. \0"
  /* 1605 */ "vstrihr. \0"
  /* 1615 */ "fmr. \0"
  /* 1621 */ "nor. \0"
  /* 1627 */ "xor. \0"
  /* 1633 */ "bcdsr. \0"
  /* 1641 */ "tsr. \0"
  /* 1647 */ "fabs. \0"
  /* 1654 */ "fnabs. \0"
  /* 1662 */ "fsubs. \0"
  /* 1670 */ "fmsubs. \0"
  /* 1679 */ "fnmsubs. \0"
  /* 1689 */ "bcds. \0"
  /* 1696 */ "fadds. \0"
  /* 1704 */ "fmadds. \0"
  /* 1713 */ "fnmadds. \0"
  /* 1723 */ "fcfids. \0"
  /* 1732 */ "fres. \0"
  /* 1739 */ "frsqrtes. \0"
  /* 1750 */ "mffs. \0"
  /* 1757 */ "andis. \0"
  /* 1765 */ "fmuls. \0"
  /* 1773 */ "fsqrts. \0"
  /* 1782 */ "bcdus. \0"
  /* 1790 */ "fcfidus. \0"
  /* 1800 */ "subfus. \0"
  /* 1809 */ "fdivs. \0"
  /* 1817 */ "tabort. \0"
  /* 1826 */ "fsqrt. \0"
  /* 1834 */ "mulhdu. \0"
  /* 1843 */ "fcfidu. \0"
  /* 1852 */ "fctidu. \0"
  /* 1861 */ "divdu. \0"
  /* 1869 */ "divdeu. \0"
  /* 1878 */ "divweu. \0"
  /* 1887 */ "mulhwu. \0"
  /* 1896 */ "fctiwu. \0"
  /* 1905 */ "divwu. \0"
  /* 1913 */ "fdiv. \0"
  /* 1920 */ "eqv. \0"
  /* 1926 */ "sraw. \0"
  /* 1933 */ "vcmpnew. \0"
  /* 1943 */ "mulhw. \0"
  /* 1951 */ "fctiw. \0"
  /* 1959 */ "mullw. \0"
  /* 1967 */ "slw. \0"
  /* 1973 */ "srw. \0"
  /* 1979 */ "vcmpgtsw. \0"
  /* 1990 */ "extsw. \0"
  /* 1998 */ "vcmpequw. \0"
  /* 2009 */ "vcmpgtuw. \0"
  /* 2020 */ "divw. \0"
  /* 2027 */ "vcmpnezw. \0"
  /* 2038 */ "cntlzw. \0"
  /* 2047 */ "cnttzw. \0"
  /* 2056 */ "stbcx. \0"
  /* 2064 */ "stdcx. \0"
  /* 2072 */ "sthcx. \0"
  /* 2080 */ "stqcx. \0"
  /* 2088 */ "stwcx. \0"
  /* 2096 */ "tlbsx. \0"
  /* 2104 */ "fctidz. \0"
  /* 2113 */ "bcdcfz. \0"
  /* 2122 */ "friz. \0"
  /* 2129 */ "bcdctz. \0"
  /* 2138 */ "fctiduz. \0"
  /* 2148 */ "fctiwuz. \0"
  /* 2158 */ "fctiwz. \0"
  /* 2167 */ "mtfsb0 \0"
  /* 2175 */ "mtfsb1 \0"
  /* 2183 */ "dmxxinstfdmr512 \0"
  /* 2200 */ "dmxxextfdmr512 \0"
  /* 2216 */ "#ATOMIC_CMP_SWAP_I32 \0"
  /* 2238 */ "pmxvbf16ger2 \0"
  /* 2252 */ "pmxvf16ger2 \0"
  /* 2265 */ "pmxvi16ger2 \0"
  /* 2278 */ "pmxvi8ger4 \0"
  /* 2290 */ "#ATOMIC_CMP_SWAP_I16 \0"
  /* 2312 */ "xvcvspbf16 \0"
  /* 2324 */ "dmxxinstfdmr256 \0"
  /* 2341 */ "dmxxextfdmr256 \0"
  /* 2357 */ "#TC_RETURNa8 \0"
  /* 2371 */ "#TC_RETURNd8 \0"
  /* 2385 */ "#TC_RETURNr8 \0"
  /* 2399 */ "pmxvi4ger8 \0"
  /* 2411 */ "#BUILD_UACC \0"
  /* 2424 */ "#ADJCALLSTACKDOWN \0"
  /* 2443 */ "#ADJCALLSTACKUP \0"
  /* 2460 */ "#TC_RETURNa \0"
  /* 2473 */ "evmhegsmfaa \0"
  /* 2486 */ "evmhogsmfaa \0"
  /* 2499 */ "evmwsmfaa \0"
  /* 2510 */ "evmwssfaa \0"
  /* 2521 */ "evmhegsmiaa \0"
  /* 2534 */ "evmhogsmiaa \0"
  /* 2547 */ "evmwsmiaa \0"
  /* 2558 */ "evmhegumiaa \0"
  /* 2571 */ "evmhogumiaa \0"
  /* 2584 */ "evmwumiaa \0"
  /* 2595 */ "dcba \0"
  /* 2601 */ "bca \0"
  /* 2606 */ "evmhesmfa \0"
  /* 2617 */ "evmwhsmfa \0"
  /* 2628 */ "evmhosmfa \0"
  /* 2639 */ "evmwsmfa \0"
  /* 2649 */ "evmhessfa \0"
  /* 2660 */ "evmwhssfa \0"
  /* 2671 */ "evmhossfa \0"
  /* 2682 */ "evmwssfa \0"
  /* 2692 */ "plha \0"
  /* 2698 */ "evmhesmia \0"
  /* 2709 */ "evmwhsmia \0"
  /* 2720 */ "evmhosmia \0"
  /* 2731 */ "evmwsmia \0"
  /* 2741 */ "evmheumia \0"
  /* 2752 */ "evmwhumia \0"
  /* 2763 */ "evmwlumia \0"
  /* 2774 */ "evmhoumia \0"
  /* 2785 */ "evmwumia \0"
  /* 2795 */ "qvstfcdxia \0"
  /* 2807 */ "qvstfdxia \0"
  /* 2818 */ "qvstfcsxia \0"
  /* 2830 */ "qvstfsxia \0"
  /* 2841 */ "qvstfcduxia \0"
  /* 2854 */ "qvstfduxia \0"
  /* 2866 */ "qvstfcsuxia \0"
  /* 2879 */ "qvstfsuxia \0"
  /* 2891 */ "bla \0"
  /* 2896 */ "bcla \0"
  /* 2902 */ "bdzla \0"
  /* 2909 */ "bdnzla \0"
  /* 2917 */ "evmra \0"
  /* 2924 */ "plwa \0"
  /* 2930 */ "mtvsrwa \0"
  /* 2939 */ "qvlfiwaxa \0"
  /* 2950 */ "qvlfcdxa \0"
  /* 2960 */ "qvstfcdxa \0"
  /* 2971 */ "qvlfdxa \0"
  /* 2980 */ "qvstfdxa \0"
  /* 2990 */ "qvlfcsxa \0"
  /* 3000 */ "qvstfcsxa \0"
  /* 3011 */ "qvlfsxa \0"
  /* 3020 */ "qvstfsxa \0"
  /* 3030 */ "qvlfcduxa \0"
  /* 3041 */ "qvstfcduxa \0"
  /* 3053 */ "qvlfduxa \0"
  /* 3063 */ "qvstfduxa \0"
  /* 3074 */ "qvlfcsuxa \0"
  /* 3085 */ "qvstfcsuxa \0"
  /* 3097 */ "qvlfsuxa \0"
  /* 3107 */ "qvstfsuxa \0"
  /* 3118 */ "qvstfiwxa \0"
  /* 3129 */ "qvlfiwzxa \0"
  /* 3140 */ "bdza \0"
  /* 3146 */ "bdnza \0"
  /* 3153 */ "vsrab \0"
  /* 3160 */ "rfebb \0"
  /* 3167 */ "vcntmbb \0"
  /* 3176 */ "xvtlsbb \0"
  /* 3185 */ "vclzlsbb \0"
  /* 3195 */ "vctzlsbb \0"
  /* 3205 */ "vcmpneb \0"
  /* 3214 */ "vmrghb \0"
  /* 3222 */ "xxspltib \0"
  /* 3232 */ "vmrglb \0"
  /* 3240 */ "vclrlb \0"
  /* 3248 */ "vrlb \0"
  /* 3254 */ "vslb \0"
  /* 3260 */ "vpmsumb \0"
  /* 3269 */ "vgnb \0"
  /* 3275 */ "cmpb \0"
  /* 3281 */ "cmpeqb \0"
  /* 3289 */ "cmprb \0"
  /* 3296 */ "vclrrb \0"
  /* 3304 */ "vsrb \0"
  /* 3310 */ "vmulesb \0"
  /* 3319 */ "vavgsb \0"
  /* 3327 */ "vupkhsb \0"
  /* 3336 */ "vspltisb \0"
  /* 3346 */ "vupklsb \0"
  /* 3355 */ "vminsb \0"
  /* 3363 */ "vmulosb \0"
  /* 3372 */ "vcmpgtsb \0"
  /* 3382 */ "evextsb \0"
  /* 3391 */ "vmaxsb \0"
  /* 3399 */ "setb \0"
  /* 3405 */ "mftb \0"
  /* 3411 */ "vspltb \0"
  /* 3419 */ "vpopcntb \0"
  /* 3429 */ "vinsertb \0"
  /* 3439 */ "pstb \0"
  /* 3445 */ "vabsdub \0"
  /* 3454 */ "vmuleub \0"
  /* 3463 */ "vavgub \0"
  /* 3471 */ "vminub \0"
  /* 3479 */ "vmuloub \0"
  /* 3488 */ "vcmpequb \0"
  /* 3498 */ "efdsub \0"
  /* 3506 */ "qvfsub \0"
  /* 3514 */ "qvfmsub \0"
  /* 3523 */ "qvfnmsub \0"
  /* 3533 */ "efssub \0"
  /* 3541 */ "evfssub \0"
  /* 3550 */ "vextractub \0"
  /* 3562 */ "vcmpgtub \0"
  /* 3572 */ "vmaxub \0"
  /* 3580 */ "xxblendvb \0"
  /* 3591 */ "vcmpnezb \0"
  /* 3601 */ "vclzb \0"
  /* 3608 */ "vctzb \0"
  /* 3615 */ "setnbc \0"
  /* 3623 */ "setbc \0"
  /* 3630 */ "xxmfacc \0"
  /* 3639 */ "xxmtacc \0"
  /* 3648 */ "addc \0"
  /* 3654 */ "xxlandc \0"
  /* 3663 */ "crandc \0"
  /* 3671 */ "evandc \0"
  /* 3679 */ "subfc \0"
  /* 3686 */ "subic \0"
  /* 3693 */ "addic \0"
  /* 3700 */ "rldic \0"
  /* 3707 */ "subfic \0"
  /* 3715 */ "xsrdpic \0"
  /* 3724 */ "xvrdpic \0"
  /* 3733 */ "xvrspic \0"
  /* 3742 */ "icblc \0"
  /* 3749 */ "brinc \0"
  /* 3756 */ "sync \0"
  /* 3762 */ "xxlorc \0"
  /* 3770 */ "crorc \0"
  /* 3777 */ "evorc \0"
  /* 3784 */ "sc \0"
  /* 3788 */ "vextsb2d \0"
  /* 3798 */ "vextsh2d \0"
  /* 3808 */ "vextsw2d \0"
  /* 3818 */ "#TC_RETURNd \0"
  /* 3831 */ "vshasigmad \0"
  /* 3843 */ "vsrad \0"
  /* 3850 */ "vgbbd \0"
  /* 3857 */ "vcntmbd \0"
  /* 3866 */ "vprtybd \0"
  /* 3875 */ "efdadd \0"
  /* 3883 */ "qvfadd \0"
  /* 3891 */ "qvfmadd \0"
  /* 3900 */ "qvfnmadd \0"
  /* 3910 */ "qvfxxcpnmadd \0"
  /* 3924 */ "qvfxxnpmadd \0"
  /* 3937 */ "qvfxmadd \0"
  /* 3947 */ "qvfxxmadd \0"
  /* 3958 */ "efsadd \0"
  /* 3966 */ "evfsadd \0"
  /* 3975 */ "evldd \0"
  /* 3982 */ "mtvsrdd \0"
  /* 3991 */ "evstdd \0"
  /* 3999 */ "vcfuged \0"
  /* 4008 */ "efscfd \0"
  /* 4016 */ "plfd \0"
  /* 4022 */ "pstfd \0"
  /* 4029 */ "vnegd \0"
  /* 4036 */ "maddhd \0"
  /* 4044 */ "mulhd \0"
  /* 4051 */ "qvfcfid \0"
  /* 4060 */ "efdcfsid \0"
  /* 4070 */ "qvfctid \0"
  /* 4079 */ "efdcfuid \0"
  /* 4089 */ "tlbld \0"
  /* 4096 */ "maddld \0"
  /* 4104 */ "vmulld \0"
  /* 4112 */ "cmpld \0"
  /* 4119 */ "mfvsrld \0"
  /* 4128 */ "vrld \0"
  /* 4134 */ "vsld \0"
  /* 4140 */ "vbpermd \0"
  /* 4149 */ "vpmsumd \0"
  /* 4158 */ "xxland \0"
  /* 4166 */ "xxlnand \0"
  /* 4175 */ "crnand \0"
  /* 4183 */ "evnand \0"
  /* 4191 */ "crand \0"
  /* 4198 */ "evand \0"
  /* 4205 */ "vpdepd \0"
  /* 4213 */ "cmpd \0"
  /* 4219 */ "xxbrd \0"
  /* 4226 */ "mtmsrd \0"
  /* 4234 */ "mfvsrd \0"
  /* 4242 */ "mtvsrd \0"
  /* 4250 */ "vmodsd \0"
  /* 4258 */ "vmulesd \0"
  /* 4267 */ "vdivesd \0"
  /* 4276 */ "vmulhsd \0"
  /* 4285 */ "vminsd \0"
  /* 4293 */ "vinsd \0"
  /* 4300 */ "vmulosd \0"
  /* 4309 */ "vcmpgtsd \0"
  /* 4319 */ "vdivsd \0"
  /* 4327 */ "vmaxsd \0"
  /* 4335 */ "plxsd \0"
  /* 4342 */ "pstxsd \0"
  /* 4350 */ "vextractd \0"
  /* 4361 */ "vpopcntd \0"
  /* 4371 */ "vinsertd \0"
  /* 4381 */ "pstd \0"
  /* 4387 */ "vpextd \0"
  /* 4395 */ "vmsumcud \0"
  /* 4405 */ "vmodud \0"
  /* 4413 */ "vmuleud \0"
  /* 4422 */ "vdiveud \0"
  /* 4431 */ "vmulhud \0"
  /* 4440 */ "vminud \0"
  /* 4448 */ "vmuloud \0"
  /* 4457 */ "vcmpequd \0"
  /* 4467 */ "vcmpgtud \0"
  /* 4477 */ "vdivud \0"
  /* 4485 */ "vmaxud \0"
  /* 4493 */ "xxblendvd \0"
  /* 4504 */ "divd \0"
  /* 4510 */ "vclzd \0"
  /* 4517 */ "cntlzd \0"
  /* 4525 */ "vctzd \0"
  /* 4532 */ "cnttzd \0"
  /* 4540 */ "mfbhrbe \0"
  /* 4549 */ "mffsce \0"
  /* 4557 */ "adde \0"
  /* 4563 */ "divde \0"
  /* 4570 */ "slbmfee \0"
  /* 4579 */ "wrtee \0"
  /* 4586 */ "subfe \0"
  /* 4593 */ "evlwhe \0"
  /* 4601 */ "evstwhe \0"
  /* 4610 */ "slbie \0"
  /* 4617 */ "tlbie \0"
  /* 4624 */ "addme \0"
  /* 4631 */ "subfme \0"
  /* 4639 */ "tlbre \0"
  /* 4646 */ "qvfre \0"
  /* 4653 */ "slbmte \0"
  /* 4661 */ "qvfrsqrte \0"
  /* 4672 */ "tlbwe \0"
  /* 4679 */ "divwe \0"
  /* 4686 */ "evstwwe \0"
  /* 4695 */ "addze \0"
  /* 4702 */ "subfze \0"
  /* 4710 */ "dcbf \0"
  /* 4716 */ "subf \0"
  /* 4722 */ "evmhesmf \0"
  /* 4732 */ "evmwhsmf \0"
  /* 4742 */ "evmhosmf \0"
  /* 4752 */ "evmwsmf \0"
  /* 4761 */ "mcrf \0"
  /* 4767 */ "mfocrf \0"
  /* 4775 */ "mtocrf \0"
  /* 4783 */ "mtcrf \0"
  /* 4790 */ "efdcfsf \0"
  /* 4799 */ "efscfsf \0"
  /* 4808 */ "evfscfsf \0"
  /* 4818 */ "mtfsf \0"
  /* 4825 */ "evmhessf \0"
  /* 4835 */ "evmwhssf \0"
  /* 4845 */ "evmhossf \0"
  /* 4855 */ "evmwssf \0"
  /* 4864 */ "efdctsf \0"
  /* 4873 */ "efsctsf \0"
  /* 4882 */ "evfsctsf \0"
  /* 4892 */ "efdcfuf \0"
  /* 4901 */ "efscfuf \0"
  /* 4910 */ "evfscfuf \0"
  /* 4920 */ "efdctuf \0"
  /* 4929 */ "efsctuf \0"
  /* 4938 */ "slbieg \0"
  /* 4946 */ "efdneg \0"
  /* 4954 */ "qvfneg \0"
  /* 4962 */ "efsneg \0"
  /* 4970 */ "evfsneg \0"
  /* 4979 */ "evneg \0"
  /* 4986 */ "vsrah \0"
  /* 4993 */ "vcntmbh \0"
  /* 5002 */ "evldh \0"
  /* 5009 */ "evstdh \0"
  /* 5017 */ "vcmpneh \0"
  /* 5026 */ "vmrghh \0"
  /* 5034 */ "vmrglh \0"
  /* 5042 */ "vrlh \0"
  /* 5048 */ "vslh \0"
  /* 5054 */ "vpmsumh \0"
  /* 5063 */ "xxbrh \0"
  /* 5070 */ "vsrh \0"
  /* 5076 */ "vmulesh \0"
  /* 5085 */ "vavgsh \0"
  /* 5093 */ "vupkhsh \0"
  /* 5102 */ "vspltish \0"
  /* 5112 */ "vupklsh \0"
  /* 5121 */ "vminsh \0"
  /* 5129 */ "vmulosh \0"
  /* 5138 */ "vcmpgtsh \0"
  /* 5148 */ "evextsh \0"
  /* 5157 */ "vmaxsh \0"
  /* 5165 */ "vsplth \0"
  /* 5173 */ "vpopcnth \0"
  /* 5183 */ "vinserth \0"
  /* 5193 */ "psth \0"
  /* 5199 */ "vabsduh \0"
  /* 5208 */ "vmuleuh \0"
  /* 5217 */ "vavguh \0"
  /* 5225 */ "vminuh \0"
  /* 5233 */ "vmulouh \0"
  /* 5242 */ "vcmpequh \0"
  /* 5252 */ "vextractuh \0"
  /* 5264 */ "vcmpgtuh \0"
  /* 5274 */ "vmaxuh \0"
  /* 5282 */ "xxblendvh \0"
  /* 5293 */ "vcmpnezh \0"
  /* 5303 */ "vclzh \0"
  /* 5310 */ "vctzh \0"
  /* 5317 */ "dcbi \0"
  /* 5323 */ "icbi \0"
  /* 5329 */ "vsldbi \0"
  /* 5337 */ "vsrdbi \0"
  /* 5345 */ "subi \0"
  /* 5351 */ "dccci \0"
  /* 5358 */ "iccci \0"
  /* 5365 */ "qvgpci \0"
  /* 5373 */ "sradi \0"
  /* 5380 */ "paddi \0"
  /* 5387 */ "cmpldi \0"
  /* 5395 */ "clrlsldi \0"
  /* 5405 */ "extldi \0"
  /* 5413 */ "xxpermdi \0"
  /* 5423 */ "cmpdi \0"
  /* 5430 */ "clrrdi \0"
  /* 5438 */ "insrdi \0"
  /* 5446 */ "rotrdi \0"
  /* 5454 */ "extrdi \0"
  /* 5462 */ "tdi \0"
  /* 5467 */ "wrteei \0"
  /* 5475 */ "mtfsfi \0"
  /* 5483 */ "evsplatfi \0"
  /* 5494 */ "evmergehi \0"
  /* 5505 */ "evmergelohi \0"
  /* 5518 */ "tlbli \0"
  /* 5525 */ "mulli \0"
  /* 5532 */ "pli \0"
  /* 5537 */ "extswsli \0"
  /* 5547 */ "mtvsrbmi \0"
  /* 5557 */ "vrldmi \0"
  /* 5565 */ "rldimi \0"
  /* 5573 */ "rlwimi \0"
  /* 5581 */ "vrlqmi \0"
  /* 5589 */ "evmhesmi \0"
  /* 5599 */ "evmwhsmi \0"
  /* 5609 */ "evmhosmi \0"
  /* 5619 */ "evmwsmi \0"
  /* 5628 */ "evmheumi \0"
  /* 5638 */ "evmwhumi \0"
  /* 5648 */ "evmwlumi \0"
  /* 5658 */ "evmhoumi \0"
  /* 5668 */ "evmwumi \0"
  /* 5677 */ "vrlwmi \0"
  /* 5685 */ "qvaligni \0"
  /* 5695 */ "mffscrni \0"
  /* 5705 */ "mffscdrni \0"
  /* 5716 */ "vsldoi \0"
  /* 5724 */ "xsrdpi \0"
  /* 5732 */ "xvrdpi \0"
  /* 5740 */ "xsrqpi \0"
  /* 5748 */ "xvrspi \0"
  /* 5756 */ "xori \0"
  /* 5762 */ "efdcfsi \0"
  /* 5771 */ "efscfsi \0"
  /* 5780 */ "evfscfsi \0"
  /* 5790 */ "efdctsi \0"
  /* 5799 */ "efsctsi \0"
  /* 5808 */ "evfsctsi \0"
  /* 5818 */ "qvesplati \0"
  /* 5829 */ "evsplati \0"
  /* 5839 */ "efdcfui \0"
  /* 5848 */ "efscfui \0"
  /* 5857 */ "evfscfui \0"
  /* 5867 */ "efdctui \0"
  /* 5876 */ "efsctui \0"
  /* 5885 */ "evfsctui \0"
  /* 5895 */ "srawi \0"
  /* 5902 */ "xxsldwi \0"
  /* 5911 */ "cmplwi \0"
  /* 5919 */ "evrlwi \0"
  /* 5927 */ "clrlslwi \0"
  /* 5937 */ "inslwi \0"
  /* 5945 */ "evslwi \0"
  /* 5953 */ "extlwi \0"
  /* 5961 */ "cmpwi \0"
  /* 5968 */ "clrrwi \0"
  /* 5976 */ "insrwi \0"
  /* 5984 */ "rotrwi \0"
  /* 5992 */ "extrwi \0"
  /* 6000 */ "lswi \0"
  /* 6006 */ "stswi \0"
  /* 6013 */ "twi \0"
  /* 6018 */ "qvstfcdxi \0"
  /* 6029 */ "qvstfdxi \0"
  /* 6039 */ "qvstfcsxi \0"
  /* 6050 */ "qvstfsxi \0"
  /* 6060 */ "qvstfcduxi \0"
  /* 6072 */ "qvstfduxi \0"
  /* 6083 */ "qvstfcsuxi \0"
  /* 6095 */ "qvstfsuxi \0"
  /* 6106 */ "tcheck \0"
  /* 6114 */ "hashchk \0"
  /* 6123 */ "qvflogical \0"
  /* 6135 */ "xxeval \0"
  /* 6143 */ "vstribl \0"
  /* 6152 */ "bcl \0"
  /* 6157 */ "rldcl \0"
  /* 6164 */ "rldicl \0"
  /* 6172 */ "tlbiel \0"
  /* 6180 */ "qvfsel \0"
  /* 6188 */ "isel \0"
  /* 6194 */ "vsel \0"
  /* 6200 */ "xxsel \0"
  /* 6207 */ "dcbfl \0"
  /* 6214 */ "vstrihl \0"
  /* 6223 */ "lxvprll \0"
  /* 6232 */ "stxvprll \0"
  /* 6242 */ "lxvrll \0"
  /* 6250 */ "stxvrll \0"
  /* 6259 */ "lxvll \0"
  /* 6266 */ "stxvll \0"
  /* 6274 */ "bclrl \0"
  /* 6281 */ "lxvprl \0"
  /* 6289 */ "stxvprl \0"
  /* 6298 */ "bcctrl \0"
  /* 6306 */ "lxvrl \0"
  /* 6313 */ "stxvrl \0"
  /* 6321 */ "mffsl \0"
  /* 6328 */ "lvsl \0"
  /* 6334 */ "efdmul \0"
  /* 6342 */ "qvfmul \0"
  /* 6350 */ "efsmul \0"
  /* 6358 */ "evfsmul \0"
  /* 6367 */ "qvfxmul \0"
  /* 6376 */ "lxvl \0"
  /* 6382 */ "stxvl \0"
  /* 6389 */ "lvxl \0"
  /* 6395 */ "stvxl \0"
  /* 6402 */ "dcbzl \0"
  /* 6409 */ "bdzl \0"
  /* 6415 */ "bdnzl \0"
  /* 6422 */ "vexpandbm \0"
  /* 6433 */ "vmsummbm \0"
  /* 6443 */ "mtvsrbm \0"
  /* 6452 */ "vextractbm \0"
  /* 6464 */ "vsububm \0"
  /* 6473 */ "vaddubm \0"
  /* 6482 */ "vmsumubm \0"
  /* 6492 */ "xxgenpcvbm \0"
  /* 6504 */ "vexpanddm \0"
  /* 6515 */ "mtvsrdm \0"
  /* 6524 */ "vextractdm \0"
  /* 6536 */ "vsubudm \0"
  /* 6545 */ "vaddudm \0"
  /* 6554 */ "vmsumudm \0"
  /* 6564 */ "xxgenpcvdm \0"
  /* 6576 */ "vclzdm \0"
  /* 6584 */ "cntlzdm \0"
  /* 6593 */ "vctzdm \0"
  /* 6601 */ "cnttzdm \0"
  /* 6610 */ "vexpandhm \0"
  /* 6621 */ "mtvsrhm \0"
  /* 6630 */ "vmsumshm \0"
  /* 6640 */ "vextracthm \0"
  /* 6652 */ "vsubuhm \0"
  /* 6661 */ "vmladduhm \0"
  /* 6672 */ "vadduhm \0"
  /* 6681 */ "vmsumuhm \0"
  /* 6691 */ "xxgenpcvhm \0"
  /* 6703 */ "vrfim \0"
  /* 6710 */ "xsrdpim \0"
  /* 6719 */ "xvrdpim \0"
  /* 6728 */ "xvrspim \0"
  /* 6737 */ "qvfrim \0"
  /* 6745 */ "vrldnm \0"
  /* 6753 */ "rlwinm \0"
  /* 6761 */ "vrlqnm \0"
  /* 6769 */ "vrlwnm \0"
  /* 6777 */ "vexpandqm \0"
  /* 6788 */ "mtvsrqm \0"
  /* 6797 */ "vextractqm \0"
  /* 6809 */ "vsubuqm \0"
  /* 6818 */ "vadduqm \0"
  /* 6827 */ "vsubeuqm \0"
  /* 6837 */ "vaddeuqm \0"
  /* 6847 */ "qvfperm \0"
  /* 6856 */ "vperm \0"
  /* 6863 */ "xxperm \0"
  /* 6871 */ "vpkudum \0"
  /* 6880 */ "vpkuhum \0"
  /* 6889 */ "vpkuwum \0"
  /* 6898 */ "vexpandwm \0"
  /* 6909 */ "mtvsrwm \0"
  /* 6918 */ "vextractwm \0"
  /* 6930 */ "vsubuwm \0"
  /* 6939 */ "vadduwm \0"
  /* 6948 */ "vmuluwm \0"
  /* 6957 */ "xxgenpcvwm \0"
  /* 6969 */ "evmhegsmfan \0"
  /* 6982 */ "evmhogsmfan \0"
  /* 6995 */ "evmwsmfan \0"
  /* 7006 */ "evmwssfan \0"
  /* 7017 */ "evmhegsmian \0"
  /* 7030 */ "evmhogsmian \0"
  /* 7043 */ "evmwsmian \0"
  /* 7054 */ "evmhegumian \0"
  /* 7067 */ "evmhogumian \0"
  /* 7080 */ "evmwumian \0"
  /* 7091 */ "qvftstnan \0"
  /* 7102 */ "qvfcpsgn \0"
  /* 7112 */ "vrfin \0"
  /* 7119 */ "qvfrin \0"
  /* 7127 */ "mfsrin \0"
  /* 7135 */ "mtsrin \0"
  /* 7143 */ "pmxvbf16ger2nn \0"
  /* 7159 */ "pmxvf16ger2nn \0"
  /* 7174 */ "pmxvf32gernn \0"
  /* 7188 */ "pmxvf64gernn \0"
  /* 7202 */ "pmxvbf16ger2pn \0"
  /* 7218 */ "pmxvf16ger2pn \0"
  /* 7233 */ "xscvspdpn \0"
  /* 7244 */ "pmxvf32gerpn \0"
  /* 7258 */ "pmxvf64gerpn \0"
  /* 7272 */ "xvcvbf16spn \0"
  /* 7285 */ "xscvdpspn \0"
  /* 7296 */ "darn \0"
  /* 7302 */ "mffscrn \0"
  /* 7311 */ "mffscdrn \0"
  /* 7321 */ "addco \0"
  /* 7328 */ "subfco \0"
  /* 7336 */ "addo \0"
  /* 7342 */ "mulldo \0"
  /* 7350 */ "divdo \0"
  /* 7357 */ "addeo \0"
  /* 7364 */ "divdeo \0"
  /* 7372 */ "subfeo \0"
  /* 7380 */ "addmeo \0"
  /* 7388 */ "subfmeo \0"
  /* 7397 */ "divweo \0"
  /* 7405 */ "addzeo \0"
  /* 7413 */ "subfzeo \0"
  /* 7422 */ "subfo \0"
  /* 7429 */ "nego \0"
  /* 7435 */ "evstwho \0"
  /* 7444 */ "evmergelo \0"
  /* 7455 */ "evmergehilo \0"
  /* 7468 */ "vslo \0"
  /* 7474 */ "xscvqpdpo \0"
  /* 7485 */ "fcmpo \0"
  /* 7492 */ "xsnmsubqpo \0"
  /* 7504 */ "xsmsubqpo \0"
  /* 7515 */ "xssubqpo \0"
  /* 7525 */ "xsnmaddqpo \0"
  /* 7537 */ "xsmaddqpo \0"
  /* 7548 */ "xsaddqpo \0"
  /* 7558 */ "xsmulqpo \0"
  /* 7568 */ "xssqrtqpo \0"
  /* 7579 */ "xsdivqpo \0"
  /* 7589 */ "vsro \0"
  /* 7595 */ "divduo \0"
  /* 7603 */ "divdeuo \0"
  /* 7612 */ "divweuo \0"
  /* 7621 */ "divwuo \0"
  /* 7629 */ "mullwo \0"
  /* 7637 */ "divwo \0"
  /* 7644 */ "evstwwo \0"
  /* 7653 */ "xsnmsubadp \0"
  /* 7665 */ "xvnmsubadp \0"
  /* 7677 */ "xsmsubadp \0"
  /* 7688 */ "xvmsubadp \0"
  /* 7699 */ "xsnmaddadp \0"
  /* 7711 */ "xvnmaddadp \0"
  /* 7723 */ "xsmaddadp \0"
  /* 7734 */ "xvmaddadp \0"
  /* 7745 */ "xssubdp \0"
  /* 7754 */ "xvsubdp \0"
  /* 7763 */ "xststdcdp \0"
  /* 7774 */ "xvtstdcdp \0"
  /* 7785 */ "xsmincdp \0"
  /* 7795 */ "xsmaxcdp \0"
  /* 7805 */ "xsadddp \0"
  /* 7814 */ "xvadddp \0"
  /* 7823 */ "xscvsxddp \0"
  /* 7834 */ "xvcvsxddp \0"
  /* 7845 */ "xscvuxddp \0"
  /* 7856 */ "xvcvuxddp \0"
  /* 7867 */ "xscmpgedp \0"
  /* 7878 */ "xvcmpgedp \0"
  /* 7889 */ "xsredp \0"
  /* 7897 */ "xvredp \0"
  /* 7905 */ "xsrsqrtedp \0"
  /* 7917 */ "xvrsqrtedp \0"
  /* 7929 */ "xsnegdp \0"
  /* 7938 */ "xvnegdp \0"
  /* 7947 */ "xsxsigdp \0"
  /* 7957 */ "xvxsigdp \0"
  /* 7967 */ "xxspltidp \0"
  /* 7978 */ "xsminjdp \0"
  /* 7988 */ "xsmaxjdp \0"
  /* 7998 */ "xsmuldp \0"
  /* 8007 */ "xvmuldp \0"
  /* 8016 */ "xsnmsubmdp \0"
  /* 8028 */ "xvnmsubmdp \0"
  /* 8040 */ "xsmsubmdp \0"
  /* 8051 */ "xvmsubmdp \0"
  /* 8062 */ "xsnmaddmdp \0"
  /* 8074 */ "xvnmaddmdp \0"
  /* 8086 */ "xsmaddmdp \0"
  /* 8097 */ "xvmaddmdp \0"
  /* 8108 */ "xscpsgndp \0"
  /* 8119 */ "xvcpsgndp \0"
  /* 8130 */ "xsmindp \0"
  /* 8139 */ "xvmindp \0"
  /* 8148 */ "xscmpodp \0"
  /* 8158 */ "xscvhpdp \0"
  /* 8168 */ "xscvqpdp \0"
  /* 8178 */ "xscvspdp \0"
  /* 8188 */ "xvcvspdp \0"
  /* 8198 */ "xsiexpdp \0"
  /* 8208 */ "xviexpdp \0"
  /* 8218 */ "xscmpexpdp \0"
  /* 8230 */ "xsxexpdp \0"
  /* 8240 */ "xvxexpdp \0"
  /* 8250 */ "xscmpeqdp \0"
  /* 8261 */ "xvcmpeqdp \0"
  /* 8272 */ "xsnabsdp \0"
  /* 8282 */ "xvnabsdp \0"
  /* 8292 */ "xsabsdp \0"
  /* 8301 */ "xvabsdp \0"
  /* 8310 */ "xscmpgtdp \0"
  /* 8321 */ "xvcmpgtdp \0"
  /* 8332 */ "xssqrtdp \0"
  /* 8342 */ "xstsqrtdp \0"
  /* 8353 */ "xvtsqrtdp \0"
  /* 8364 */ "xvsqrtdp \0"
  /* 8374 */ "xscmpudp \0"
  /* 8384 */ "xsdivdp \0"
  /* 8393 */ "xstdivdp \0"
  /* 8403 */ "xvtdivdp \0"
  /* 8413 */ "xvdivdp \0"
  /* 8422 */ "xvcvsxwdp \0"
  /* 8433 */ "xvcvuxwdp \0"
  /* 8444 */ "xsmaxdp \0"
  /* 8453 */ "xvmaxdp \0"
  /* 8462 */ "dcbfep \0"
  /* 8470 */ "icbiep \0"
  /* 8478 */ "dcbzlep \0"
  /* 8487 */ "dcbtep \0"
  /* 8495 */ "dcbstep \0"
  /* 8504 */ "dcbtstep \0"
  /* 8514 */ "dcbzep \0"
  /* 8522 */ "vcmpbfp \0"
  /* 8531 */ "vnmsubfp \0"
  /* 8541 */ "vsubfp \0"
  /* 8549 */ "vmaddfp \0"
  /* 8558 */ "vaddfp \0"
  /* 8566 */ "vlogefp \0"
  /* 8575 */ "vcmpgefp \0"
  /* 8585 */ "vrefp \0"
  /* 8592 */ "vexptefp \0"
  /* 8602 */ "vrsqrtefp \0"
  /* 8613 */ "vminfp \0"
  /* 8621 */ "vcmpeqfp \0"
  /* 8631 */ "vcmpgtfp \0"
  /* 8641 */ "vmaxfp \0"
  /* 8649 */ "xscvdphp \0"
  /* 8659 */ "xvcvsphp \0"
  /* 8669 */ "vrfip \0"
  /* 8676 */ "xsrdpip \0"
  /* 8685 */ "xvrdpip \0"
  /* 8694 */ "xvrspip \0"
  /* 8703 */ "qvfrip \0"
  /* 8711 */ "hashchkp \0"
  /* 8721 */ "dcbflp \0"
  /* 8729 */ "pmxvbf16ger2np \0"
  /* 8745 */ "pmxvf16ger2np \0"
  /* 8760 */ "pmxvf32gernp \0"
  /* 8774 */ "pmxvf64gernp \0"
  /* 8788 */ "pmxvbf16ger2pp \0"
  /* 8804 */ "pmxvf16ger2pp \0"
  /* 8819 */ "pmxvi16ger2pp \0"
  /* 8834 */ "pmxvi8ger4pp \0"
  /* 8848 */ "pmxvi4ger8pp \0"
  /* 8862 */ "pmxvf32gerpp \0"
  /* 8876 */ "pmxvf64gerpp \0"
  /* 8890 */ "pmxvi16ger2spp \0"
  /* 8906 */ "pmxvi8ger4spp \0"
  /* 8921 */ "xsnmsubqp \0"
  /* 8932 */ "xsmsubqp \0"
  /* 8942 */ "xssubqp \0"
  /* 8951 */ "xststdcqp \0"
  /* 8962 */ "xsmincqp \0"
  /* 8972 */ "xsmaxcqp \0"
  /* 8982 */ "xsnmaddqp \0"
  /* 8993 */ "xsmaddqp \0"
  /* 9003 */ "xsaddqp \0"
  /* 9012 */ "xscvsdqp \0"
  /* 9022 */ "xscvudqp \0"
  /* 9032 */ "xscmpgeqp \0"
  /* 9043 */ "xsnegqp \0"
  /* 9052 */ "xsxsigqp \0"
  /* 9062 */ "xsmulqp \0"
  /* 9071 */ "xscpsgnqp \0"
  /* 9082 */ "xscmpoqp \0"
  /* 9092 */ "xscvdpqp \0"
  /* 9102 */ "xsiexpqp \0"
  /* 9112 */ "xscmpexpqp \0"
  /* 9124 */ "xsxexpqp \0"
  /* 9134 */ "xscmpeqqp \0"
  /* 9145 */ "xscvsqqp \0"
  /* 9155 */ "xscvuqqp \0"
  /* 9165 */ "xsnabsqp \0"
  /* 9175 */ "xsabsqp \0"
  /* 9184 */ "xscmpgtqp \0"
  /* 9195 */ "xssqrtqp \0"
  /* 9205 */ "xscmpuqp \0"
  /* 9215 */ "xsdivqp \0"
  /* 9224 */ "xsnmsubasp \0"
  /* 9236 */ "xvnmsubasp \0"
  /* 9248 */ "xsmsubasp \0"
  /* 9259 */ "xvmsubasp \0"
  /* 9270 */ "xsnmaddasp \0"
  /* 9282 */ "xvnmaddasp \0"
  /* 9294 */ "xsmaddasp \0"
  /* 9305 */ "xvmaddasp \0"
  /* 9316 */ "xssubsp \0"
  /* 9325 */ "xvsubsp \0"
  /* 9334 */ "xststdcsp \0"
  /* 9345 */ "xvtstdcsp \0"
  /* 9356 */ "xsaddsp \0"
  /* 9365 */ "xvaddsp \0"
  /* 9374 */ "xscvsxdsp \0"
  /* 9385 */ "xvcvsxdsp \0"
  /* 9396 */ "xscvuxdsp \0"
  /* 9407 */ "xvcvuxdsp \0"
  /* 9418 */ "xvcmpgesp \0"
  /* 9429 */ "xsresp \0"
  /* 9437 */ "xvresp \0"
  /* 9445 */ "xsrsqrtesp \0"
  /* 9457 */ "xvrsqrtesp \0"
  /* 9469 */ "xvnegsp \0"
  /* 9478 */ "xvxsigsp \0"
  /* 9488 */ "xsmulsp \0"
  /* 9497 */ "xvmulsp \0"
  /* 9506 */ "xsnmsubmsp \0"
  /* 9518 */ "xvnmsubmsp \0"
  /* 9530 */ "xsmsubmsp \0"
  /* 9541 */ "xvmsubmsp \0"
  /* 9552 */ "xsnmaddmsp \0"
  /* 9564 */ "xvnmaddmsp \0"
  /* 9576 */ "xsmaddmsp \0"
  /* 9587 */ "xvmaddmsp \0"
  /* 9598 */ "xvcpsgnsp \0"
  /* 9609 */ "xvminsp \0"
  /* 9618 */ "xscvdpsp \0"
  /* 9628 */ "xvcvdpsp \0"
  /* 9638 */ "xvcvhpsp \0"
  /* 9648 */ "xviexpsp \0"
  /* 9658 */ "xvxexpsp \0"
  /* 9668 */ "xvcmpeqsp \0"
  /* 9679 */ "qvfrsp \0"
  /* 9687 */ "xsrsp \0"
  /* 9694 */ "xvnabssp \0"
  /* 9704 */ "xvabssp \0"
  /* 9713 */ "plxssp \0"
  /* 9721 */ "pstxssp \0"
  /* 9730 */ "xvcmpgtsp \0"
  /* 9741 */ "xssqrtsp \0"
  /* 9751 */ "xvtsqrtsp \0"
  /* 9762 */ "xvsqrtsp \0"
  /* 9772 */ "xsdivsp \0"
  /* 9781 */ "xvtdivsp \0"
  /* 9791 */ "xvdivsp \0"
  /* 9800 */ "xvcvsxwsp \0"
  /* 9811 */ "xvcvuxwsp \0"
  /* 9822 */ "xvmaxsp \0"
  /* 9831 */ "hashstp \0"
  /* 9840 */ "plxvp \0"
  /* 9847 */ "pstxvp \0"
  /* 9855 */ "xsrqpxp \0"
  /* 9864 */ "vextsd2q \0"
  /* 9874 */ "vsraq \0"
  /* 9881 */ "vprtybq \0"
  /* 9890 */ "efdcmpeq \0"
  /* 9900 */ "qvfcmpeq \0"
  /* 9910 */ "efscmpeq \0"
  /* 9920 */ "evfscmpeq \0"
  /* 9931 */ "evcmpeq \0"
  /* 9940 */ "efdtsteq \0"
  /* 9950 */ "efststeq \0"
  /* 9960 */ "evfststeq \0"
  /* 9971 */ "lxvkq \0"
  /* 9978 */ "vrlq \0"
  /* 9984 */ "vslq \0"
  /* 9990 */ "vbpermq \0"
  /* 9999 */ "xxbrq \0"
  /* 10006 */ "vsrq \0"
  /* 10012 */ "vmodsq \0"
  /* 10020 */ "vdivesq \0"
  /* 10029 */ "vcmpsq \0"
  /* 10037 */ "vcmpgtsq \0"
  /* 10047 */ "vdivsq \0"
  /* 10055 */ "stq \0"
  /* 10060 */ "vmul10uq \0"
  /* 10070 */ "vmul10cuq \0"
  /* 10081 */ "vsubcuq \0"
  /* 10090 */ "vaddcuq \0"
  /* 10099 */ "vmul10ecuq \0"
  /* 10111 */ "vsubecuq \0"
  /* 10121 */ "vaddecuq \0"
  /* 10131 */ "vmoduq \0"
  /* 10139 */ "vmul10euq \0"
  /* 10150 */ "vdiveuq \0"
  /* 10159 */ "vcmpuq \0"
  /* 10167 */ "vcmpequq \0"
  /* 10177 */ "vcmpgtuq \0"
  /* 10187 */ "vdivuq \0"
  /* 10195 */ "#TC_RETURNr \0"
  /* 10208 */ "mbar \0"
  /* 10214 */ "vstribr \0"
  /* 10223 */ "setnbcr \0"
  /* 10232 */ "setbcr \0"
  /* 10240 */ "mfdcr \0"
  /* 10247 */ "rldcr \0"
  /* 10254 */ "mtdcr \0"
  /* 10261 */ "mfcr \0"
  /* 10267 */ "rldicr \0"
  /* 10275 */ "mfvscr \0"
  /* 10283 */ "mtvscr \0"
  /* 10291 */ "pmxvf32ger \0"
  /* 10303 */ "pmxvf64ger \0"
  /* 10315 */ "vncipher \0"
  /* 10325 */ "vcipher \0"
  /* 10334 */ "vstrihr \0"
  /* 10343 */ "bclr \0"
  /* 10349 */ "mflr \0"
  /* 10355 */ "mtlr \0"
  /* 10361 */ "qvfmr \0"
  /* 10368 */ "dmmr \0"
  /* 10374 */ "mfpmr \0"
  /* 10381 */ "mtpmr \0"
  /* 10388 */ "vpermr \0"
  /* 10396 */ "xxpermr \0"
  /* 10405 */ "xxlor \0"
  /* 10412 */ "xxlnor \0"
  /* 10420 */ "crnor \0"
  /* 10427 */ "evnor \0"
  /* 10434 */ "cror \0"
  /* 10440 */ "evor \0"
  /* 10446 */ "xxlxor \0"
  /* 10454 */ "dmxor \0"
  /* 10461 */ "vpermxor \0"
  /* 10471 */ "crxor \0"
  /* 10478 */ "evxor \0"
  /* 10485 */ "mfspr \0"
  /* 10492 */ "mtspr \0"
  /* 10499 */ "mfsr \0"
  /* 10505 */ "mfmsr \0"
  /* 10512 */ "mtmsr \0"
  /* 10519 */ "mtsr \0"
  /* 10525 */ "lvsr \0"
  /* 10531 */ "bcctr \0"
  /* 10538 */ "mfctr \0"
  /* 10545 */ "mtctr \0"
  /* 10552 */ "pmxvi16ger2s \0"
  /* 10566 */ "efdabs \0"
  /* 10574 */ "qvfabs \0"
  /* 10582 */ "efdnabs \0"
  /* 10591 */ "qvfnabs \0"
  /* 10600 */ "efsnabs \0"
  /* 10609 */ "evfsnabs \0"
  /* 10619 */ "efsabs \0"
  /* 10627 */ "evfsabs \0"
  /* 10636 */ "evabs \0"
  /* 10643 */ "vsum4sbs \0"
  /* 10653 */ "vsubsbs \0"
  /* 10662 */ "vaddsbs \0"
  /* 10671 */ "vsum4ubs \0"
  /* 10681 */ "vsububs \0"
  /* 10690 */ "vaddubs \0"
  /* 10699 */ "qvfsubs \0"
  /* 10708 */ "qvfmsubs \0"
  /* 10718 */ "qvfnmsubs \0"
  /* 10729 */ "qvfadds \0"
  /* 10738 */ "qvfmadds \0"
  /* 10748 */ "qvfnmadds \0"
  /* 10759 */ "qvfxxcpnmadds \0"
  /* 10774 */ "qvfxxnpmadds \0"
  /* 10788 */ "qvfxmadds \0"
  /* 10799 */ "qvfxxmadds \0"
  /* 10811 */ "qvfcfids \0"
  /* 10821 */ "dcbtds \0"
  /* 10829 */ "dcbtstds \0"
  /* 10839 */ "xscvdpsxds \0"
  /* 10851 */ "xvcvdpsxds \0"
  /* 10863 */ "xvcvspsxds \0"
  /* 10875 */ "xscvdpuxds \0"
  /* 10887 */ "xvcvdpuxds \0"
  /* 10899 */ "xvcvspuxds \0"
  /* 10911 */ "qvfres \0"
  /* 10919 */ "qvfrsqrtes \0"
  /* 10931 */ "efdcfs \0"
  /* 10939 */ "mffs \0"
  /* 10945 */ "plfs \0"
  /* 10951 */ "mcrfs \0"
  /* 10958 */ "pstfs \0"
  /* 10965 */ "vsum4shs \0"
  /* 10975 */ "vsubshs \0"
  /* 10984 */ "vmhaddshs \0"
  /* 10995 */ "vmhraddshs \0"
  /* 11007 */ "vaddshs \0"
  /* 11016 */ "vmsumshs \0"
  /* 11026 */ "vsubuhs \0"
  /* 11035 */ "vadduhs \0"
  /* 11044 */ "vmsumuhs \0"
  /* 11054 */ "subis \0"
  /* 11061 */ "subpcis \0"
  /* 11070 */ "addpcis \0"
  /* 11079 */ "addis \0"
  /* 11086 */ "lis \0"
  /* 11091 */ "xoris \0"
  /* 11098 */ "evsrwis \0"
  /* 11107 */ "icbtls \0"
  /* 11115 */ "qvfmuls \0"
  /* 11124 */ "qvfxmuls \0"
  /* 11134 */ "evlwhos \0"
  /* 11143 */ "dcbfps \0"
  /* 11151 */ "dcbstps \0"
  /* 11160 */ "vpksdss \0"
  /* 11169 */ "vpkshss \0"
  /* 11178 */ "vpkswss \0"
  /* 11187 */ "evcmpgts \0"
  /* 11197 */ "evcmplts \0"
  /* 11207 */ "fsqrts \0"
  /* 11215 */ "qvfcfidus \0"
  /* 11226 */ "vpksdus \0"
  /* 11235 */ "vpkudus \0"
  /* 11244 */ "subfus \0"
  /* 11252 */ "vpkshus \0"
  /* 11261 */ "vpkuhus \0"
  /* 11270 */ "vpkswus \0"
  /* 11279 */ "vpkuwus \0"
  /* 11288 */ "fdivs \0"
  /* 11295 */ "evsrws \0"
  /* 11303 */ "mtvsrws \0"
  /* 11312 */ "vsum2sws \0"
  /* 11322 */ "vsubsws \0"
  /* 11331 */ "vaddsws \0"
  /* 11340 */ "vsumsws \0"
  /* 11349 */ "vsubuws \0"
  /* 11358 */ "vadduws \0"
  /* 11367 */ "evdivws \0"
  /* 11376 */ "xscvdpsxws \0"
  /* 11388 */ "xvcvdpsxws \0"
  /* 11400 */ "xvcvspsxws \0"
  /* 11412 */ "xscvdpuxws \0"
  /* 11424 */ "xvcvdpuxws \0"
  /* 11436 */ "xvcvspuxws \0"
  /* 11448 */ "vctsxs \0"
  /* 11456 */ "vctuxs \0"
  /* 11464 */ "ldat \0"
  /* 11470 */ "stdat \0"
  /* 11477 */ "evlhhesplat \0"
  /* 11490 */ "evlwhsplat \0"
  /* 11502 */ "evlhhossplat \0"
  /* 11516 */ "evlhhousplat \0"
  /* 11530 */ "evlwwsplat \0"
  /* 11542 */ "lwat \0"
  /* 11548 */ "stwat \0"
  /* 11555 */ "dcbt \0"
  /* 11561 */ "icbt \0"
  /* 11567 */ "dcbtct \0"
  /* 11575 */ "dcbtstct \0"
  /* 11585 */ "efdcmpgt \0"
  /* 11595 */ "qvfcmpgt \0"
  /* 11605 */ "efscmpgt \0"
  /* 11615 */ "evfscmpgt \0"
  /* 11626 */ "efdtstgt \0"
  /* 11636 */ "efststgt \0"
  /* 11646 */ "evfststgt \0"
  /* 11657 */ "wait \0"
  /* 11663 */ "efdcmplt \0"
  /* 11673 */ "qvfcmplt \0"
  /* 11683 */ "efscmplt \0"
  /* 11693 */ "evfscmplt \0"
  /* 11704 */ "efdtstlt \0"
  /* 11714 */ "efststlt \0"
  /* 11724 */ "evfststlt \0"
  /* 11735 */ "crnot \0"
  /* 11742 */ "fsqrt \0"
  /* 11749 */ "ftsqrt \0"
  /* 11757 */ "vncipherlast \0"
  /* 11771 */ "vcipherlast \0"
  /* 11784 */ "dcbst \0"
  /* 11791 */ "dst \0"
  /* 11796 */ "hashst \0"
  /* 11804 */ "dcbtst \0"
  /* 11812 */ "dstst \0"
  /* 11819 */ "dcbtt \0"
  /* 11826 */ "dstt \0"
  /* 11832 */ "dcbtstt \0"
  /* 11841 */ "dststt \0"
  /* 11849 */ "lhau \0"
  /* 11855 */ "stbu \0"
  /* 11861 */ "lfdu \0"
  /* 11867 */ "stfdu \0"
  /* 11874 */ "maddhdu \0"
  /* 11883 */ "mulhdu \0"
  /* 11891 */ "qvfcfidu \0"
  /* 11901 */ "qvfctidu \0"
  /* 11911 */ "ldu \0"
  /* 11916 */ "stdu \0"
  /* 11922 */ "divdu \0"
  /* 11929 */ "divdeu \0"
  /* 11937 */ "divweu \0"
  /* 11945 */ "sthu \0"
  /* 11951 */ "evsrwiu \0"
  /* 11960 */ "evlwhou \0"
  /* 11969 */ "fcmpu \0"
  /* 11976 */ "lfsu \0"
  /* 11982 */ "stfsu \0"
  /* 11989 */ "evcmpgtu \0"
  /* 11999 */ "evcmpltu \0"
  /* 12009 */ "mulhwu \0"
  /* 12017 */ "qvfctiwu \0"
  /* 12027 */ "evsrwu \0"
  /* 12035 */ "stwu \0"
  /* 12041 */ "evdivwu \0"
  /* 12050 */ "lbzu \0"
  /* 12056 */ "lhzu \0"
  /* 12062 */ "lwzu \0"
  /* 12068 */ "slbmfev \0"
  /* 12077 */ "efddiv \0"
  /* 12085 */ "fdiv \0"
  /* 12091 */ "efsdiv \0"
  /* 12099 */ "evfsdiv \0"
  /* 12108 */ "ftdiv \0"
  /* 12115 */ "vslv \0"
  /* 12121 */ "xxleqv \0"
  /* 12129 */ "creqv \0"
  /* 12136 */ "eveqv \0"
  /* 12143 */ "vsrv \0"
  /* 12149 */ "plxv \0"
  /* 12155 */ "pstxv \0"
  /* 12162 */ "vextsb2w \0"
  /* 12172 */ "vextsh2w \0"
  /* 12182 */ "evmhesmfaaw \0"
  /* 12195 */ "evmhosmfaaw \0"
  /* 12208 */ "evmhessfaaw \0"
  /* 12221 */ "evmhossfaaw \0"
  /* 12234 */ "evaddsmiaaw \0"
  /* 12247 */ "evmhesmiaaw \0"
  /* 12260 */ "evsubfsmiaaw \0"
  /* 12274 */ "evmwlsmiaaw \0"
  /* 12287 */ "evmhosmiaaw \0"
  /* 12300 */ "evaddumiaaw \0"
  /* 12313 */ "evmheumiaaw \0"
  /* 12326 */ "evsubfumiaaw \0"
  /* 12340 */ "evmwlumiaaw \0"
  /* 12353 */ "evmhoumiaaw \0"
  /* 12366 */ "evaddssiaaw \0"
  /* 12379 */ "evmhessiaaw \0"
  /* 12392 */ "evsubfssiaaw \0"
  /* 12406 */ "evmwlssiaaw \0"
  /* 12419 */ "evmhossiaaw \0"
  /* 12432 */ "evaddusiaaw \0"
  /* 12445 */ "evmheusiaaw \0"
  /* 12458 */ "evsubfusiaaw \0"
  /* 12472 */ "evmwlusiaaw \0"
  /* 12485 */ "evmhousiaaw \0"
  /* 12498 */ "vshasigmaw \0"
  /* 12510 */ "vsraw \0"
  /* 12517 */ "vcntmbw \0"
  /* 12526 */ "vprtybw \0"
  /* 12535 */ "evaddw \0"
  /* 12543 */ "evldw \0"
  /* 12550 */ "evrndw \0"
  /* 12558 */ "evstdw \0"
  /* 12566 */ "vmrgew \0"
  /* 12574 */ "vcmpnew \0"
  /* 12583 */ "evsubfw \0"
  /* 12592 */ "evsubifw \0"
  /* 12602 */ "vnegw \0"
  /* 12609 */ "vmrghw \0"
  /* 12617 */ "xxmrghw \0"
  /* 12626 */ "mulhw \0"
  /* 12633 */ "evaddiw \0"
  /* 12642 */ "qvfctiw \0"
  /* 12651 */ "xxspltiw \0"
  /* 12661 */ "vmrglw \0"
  /* 12669 */ "xxmrglw \0"
  /* 12678 */ "mullw \0"
  /* 12685 */ "cmplw \0"
  /* 12692 */ "evrlw \0"
  /* 12699 */ "evslw \0"
  /* 12706 */ "lmw \0"
  /* 12711 */ "stmw \0"
  /* 12717 */ "vpmsumw \0"
  /* 12726 */ "evmhesmfanw \0"
  /* 12739 */ "evmhosmfanw \0"
  /* 12752 */ "evmhessfanw \0"
  /* 12765 */ "evmhossfanw \0"
  /* 12778 */ "evmhesmianw \0"
  /* 12791 */ "evmwlsmianw \0"
  /* 12804 */ "evmhosmianw \0"
  /* 12817 */ "evmheumianw \0"
  /* 12830 */ "evmwlumianw \0"
  /* 12843 */ "evmhoumianw \0"
  /* 12856 */ "evmhessianw \0"
  /* 12869 */ "evmwlssianw \0"
  /* 12882 */ "evmhossianw \0"
  /* 12895 */ "evmheusianw \0"
  /* 12908 */ "evmwlusianw \0"
  /* 12921 */ "evmhousianw \0"
  /* 12934 */ "vmrgow \0"
  /* 12942 */ "cmpw \0"
  /* 12948 */ "xxbrw \0"
  /* 12955 */ "vsrw \0"
  /* 12961 */ "vmodsw \0"
  /* 12969 */ "vmulesw \0"
  /* 12978 */ "vdivesw \0"
  /* 12987 */ "vavgsw \0"
  /* 12995 */ "vupkhsw \0"
  /* 13004 */ "vmulhsw \0"
  /* 13013 */ "vspltisw \0"
  /* 13023 */ "vupklsw \0"
  /* 13032 */ "evcntlsw \0"
  /* 13042 */ "vminsw \0"
  /* 13050 */ "vinsw \0"
  /* 13057 */ "vmulosw \0"
  /* 13066 */ "vcmpgtsw \0"
  /* 13076 */ "extsw \0"
  /* 13083 */ "vdivsw \0"
  /* 13091 */ "vmaxsw \0"
  /* 13099 */ "vspltw \0"
  /* 13107 */ "xxspltw \0"
  /* 13116 */ "vpopcntw \0"
  /* 13126 */ "vinsertw \0"
  /* 13136 */ "xxinsertw \0"
  /* 13147 */ "pstw \0"
  /* 13153 */ "vsubcuw \0"
  /* 13162 */ "vaddcuw \0"
  /* 13171 */ "vmoduw \0"
  /* 13179 */ "vabsduw \0"
  /* 13188 */ "vmuleuw \0"
  /* 13197 */ "vdiveuw \0"
  /* 13206 */ "vavguw \0"
  /* 13214 */ "vmulhuw \0"
  /* 13223 */ "vminuw \0"
  /* 13231 */ "vmulouw \0"
  /* 13240 */ "vcmpequw \0"
  /* 13250 */ "vextractuw \0"
  /* 13262 */ "xxextractuw \0"
  /* 13275 */ "vcmpgtuw \0"
  /* 13285 */ "vdivuw \0"
  /* 13293 */ "vmaxuw \0"
  /* 13301 */ "xxblendvw \0"
  /* 13312 */ "divw \0"
  /* 13318 */ "vcmpnezw \0"
  /* 13328 */ "vclzw \0"
  /* 13335 */ "evcntlzw \0"
  /* 13345 */ "vctzw \0"
  /* 13352 */ "cnttzw \0"
  /* 13360 */ "lxvd2x \0"
  /* 13368 */ "stxvd2x \0"
  /* 13377 */ "lxvw4x \0"
  /* 13385 */ "stxvw4x \0"
  /* 13394 */ "lxvb16x \0"
  /* 13403 */ "stxvb16x \0"
  /* 13413 */ "lxvh8x \0"
  /* 13421 */ "stxvh8x \0"
  /* 13430 */ "lhax \0"
  /* 13436 */ "tlbivax \0"
  /* 13445 */ "qvlfiwax \0"
  /* 13455 */ "lxsiwax \0"
  /* 13464 */ "lwax \0"
  /* 13470 */ "lvebx \0"
  /* 13477 */ "stvebx \0"
  /* 13485 */ "stxsibx \0"
  /* 13494 */ "lxvrbx \0"
  /* 13502 */ "stxvrbx \0"
  /* 13511 */ "stbx \0"
  /* 13517 */ "xxsplti32dx \0"
  /* 13530 */ "qvlfcdx \0"
  /* 13539 */ "qvstfcdx \0"
  /* 13549 */ "evlddx \0"
  /* 13557 */ "evstddx \0"
  /* 13566 */ "qvlfdx \0"
  /* 13574 */ "qvstfdx \0"
  /* 13583 */ "qvlpcldx \0"
  /* 13593 */ "qvlpcrdx \0"
  /* 13603 */ "lxvrdx \0"
  /* 13611 */ "stxvrdx \0"
  /* 13620 */ "lxsdx \0"
  /* 13627 */ "stxsdx \0"
  /* 13635 */ "stdx \0"
  /* 13641 */ "addex \0"
  /* 13648 */ "evlwhex \0"
  /* 13657 */ "evstwhex \0"
  /* 13667 */ "evstwwex \0"
  /* 13677 */ "evldhx \0"
  /* 13685 */ "evstdhx \0"
  /* 13694 */ "lvehx \0"
  /* 13701 */ "stvehx \0"
  /* 13709 */ "stxsihx \0"
  /* 13718 */ "lxvrhx \0"
  /* 13726 */ "stxvrhx \0"
  /* 13735 */ "sthx \0"
  /* 13741 */ "stbcix \0"
  /* 13749 */ "ldcix \0"
  /* 13756 */ "stdcix \0"
  /* 13764 */ "sthcix \0"
  /* 13772 */ "stwcix \0"
  /* 13780 */ "lbzcix \0"
  /* 13788 */ "lhzcix \0"
  /* 13796 */ "lwzcix \0"
  /* 13804 */ "xsrqpix \0"
  /* 13813 */ "vinsblx \0"
  /* 13822 */ "vextublx \0"
  /* 13832 */ "vinsdlx \0"
  /* 13841 */ "vinshlx \0"
  /* 13850 */ "vextuhlx \0"
  /* 13860 */ "vinsbvlx \0"
  /* 13870 */ "vextdubvlx \0"
  /* 13882 */ "vextddvlx \0"
  /* 13893 */ "vinshvlx \0"
  /* 13903 */ "vextduhvlx \0"
  /* 13915 */ "vinswvlx \0"
  /* 13925 */ "vextduwvlx \0"
  /* 13937 */ "vinswlx \0"
  /* 13946 */ "vextuwlx \0"
  /* 13956 */ "xxpermx \0"
  /* 13965 */ "vsbox \0"
  /* 13972 */ "evstwhox \0"
  /* 13982 */ "evstwwox \0"
  /* 13992 */ "lbepx \0"
  /* 13999 */ "stbepx \0"
  /* 14007 */ "lfdepx \0"
  /* 14015 */ "stfdepx \0"
  /* 14024 */ "lhepx \0"
  /* 14031 */ "sthepx \0"
  /* 14039 */ "lwepx \0"
  /* 14046 */ "stwepx \0"
  /* 14054 */ "vupkhpx \0"
  /* 14063 */ "vpkpx \0"
  /* 14070 */ "vupklpx \0"
  /* 14079 */ "lxsspx \0"
  /* 14087 */ "stxsspx \0"
  /* 14096 */ "lxvpx \0"
  /* 14103 */ "stxvpx \0"
  /* 14111 */ "lbarx \0"
  /* 14118 */ "ldarx \0"
  /* 14125 */ "lharx \0"
  /* 14132 */ "lqarx \0"
  /* 14139 */ "lwarx \0"
  /* 14146 */ "ldbrx \0"
  /* 14153 */ "stdbrx \0"
  /* 14161 */ "lhbrx \0"
  /* 14168 */ "sthbrx \0"
  /* 14176 */ "vinsbrx \0"
  /* 14185 */ "vextubrx \0"
  /* 14195 */ "lwbrx \0"
  /* 14202 */ "stwbrx \0"
  /* 14210 */ "vinsdrx \0"
  /* 14219 */ "vinshrx \0"
  /* 14228 */ "vextuhrx \0"
  /* 14238 */ "vinsbvrx \0"
  /* 14248 */ "vextdubvrx \0"
  /* 14260 */ "vextddvrx \0"
  /* 14271 */ "vinshvrx \0"
  /* 14281 */ "vextduhvrx \0"
  /* 14293 */ "vinswvrx \0"
  /* 14303 */ "vextduwvrx \0"
  /* 14315 */ "vinswrx \0"
  /* 14324 */ "vextuwrx \0"
  /* 14334 */ "mcrxrx \0"
  /* 14342 */ "tlbsx \0"
  /* 14349 */ "qvlfcsx \0"
  /* 14358 */ "qvstfcsx \0"
  /* 14368 */ "lxvdsx \0"
  /* 14376 */ "vcfsx \0"
  /* 14383 */ "qvlfsx \0"
  /* 14391 */ "qvstfsx \0"
  /* 14400 */ "qvlpclsx \0"
  /* 14410 */ "evlwhosx \0"
  /* 14420 */ "qvlpcrsx \0"
  /* 14430 */ "lxvwsx \0"
  /* 14438 */ "evlhhesplatx \0"
  /* 14452 */ "evlwhsplatx \0"
  /* 14465 */ "evlhhossplatx \0"
  /* 14480 */ "evlhhousplatx \0"
  /* 14495 */ "evlwwsplatx \0"
  /* 14508 */ "lhaux \0"
  /* 14515 */ "lwaux \0"
  /* 14522 */ "stbux \0"
  /* 14529 */ "qvlfcdux \0"
  /* 14539 */ "qvstfcdux \0"
  /* 14550 */ "qvlfdux \0"
  /* 14559 */ "qvstfdux \0"
  /* 14569 */ "ldux \0"
  /* 14575 */ "stdux \0"
  /* 14582 */ "vcfux \0"
  /* 14589 */ "sthux \0"
  /* 14596 */ "evlwhoux \0"
  /* 14606 */ "qvlfcsux \0"
  /* 14616 */ "qvstfcsux \0"
  /* 14627 */ "qvlfsux \0"
  /* 14636 */ "qvstfsux \0"
  /* 14646 */ "stwux \0"
  /* 14653 */ "lbzux \0"
  /* 14660 */ "lhzux \0"
  /* 14667 */ "lwzux \0"
  /* 14674 */ "lvx \0"
  /* 14679 */ "stvx \0"
  /* 14685 */ "lxvx \0"
  /* 14691 */ "stxvx \0"
  /* 14698 */ "evldwx \0"
  /* 14706 */ "evstdwx \0"
  /* 14715 */ "lvewx \0"
  /* 14722 */ "stvewx \0"
  /* 14730 */ "qvstfiwx \0"
  /* 14740 */ "stxsiwx \0"
  /* 14749 */ "lxvrwx \0"
  /* 14757 */ "stxvrwx \0"
  /* 14766 */ "stwx \0"
  /* 14772 */ "lxsibzx \0"
  /* 14781 */ "lbzx \0"
  /* 14787 */ "lxsihzx \0"
  /* 14796 */ "lhzx \0"
  /* 14802 */ "qvlfiwzx \0"
  /* 14812 */ "lxsiwzx \0"
  /* 14821 */ "lwzx \0"
  /* 14827 */ "copy \0"
  /* 14833 */ "dcbz \0"
  /* 14839 */ "plbz \0"
  /* 14845 */ "xxsetaccz \0"
  /* 14856 */ "bdz \0"
  /* 14861 */ "efdctsidz \0"
  /* 14872 */ "qvfctidz \0"
  /* 14882 */ "efdctuidz \0"
  /* 14893 */ "xscvqpsdz \0"
  /* 14904 */ "xscvqpudz \0"
  /* 14915 */ "plhz \0"
  /* 14921 */ "vrfiz \0"
  /* 14928 */ "xsrdpiz \0"
  /* 14937 */ "xvrdpiz \0"
  /* 14946 */ "xvrspiz \0"
  /* 14955 */ "qvfriz \0"
  /* 14963 */ "efdctsiz \0"
  /* 14973 */ "efsctsiz \0"
  /* 14983 */ "evfsctsiz \0"
  /* 14994 */ "efdctuiz \0"
  /* 15004 */ "efsctuiz \0"
  /* 15014 */ "bdnz \0"
  /* 15020 */ "xscvqpsqz \0"
  /* 15031 */ "xscvqpuqz \0"
  /* 15042 */ "dmsetdmrz \0"
  /* 15053 */ "qvfctiduz \0"
  /* 15064 */ "qvfctiwuz \0"
  /* 15075 */ "qvfctiwz \0"
  /* 15085 */ "plwz \0"
  /* 15091 */ "mfvsrwz \0"
  /* 15100 */ "mtvsrwz \0"
  /* 15109 */ "xscvqpswz \0"
  /* 15120 */ "xscvqpuwz \0"
  /* 15131 */ "bdzlrl+\0"
  /* 15139 */ "bdnzlrl+\0"
  /* 15148 */ "bdzlr+\0"
  /* 15155 */ "bdnzlr+\0"
  /* 15163 */ "evsel crD,\0"
  /* 15174 */ "bdzlrl-\0"
  /* 15182 */ "bdnzlrl-\0"
  /* 15191 */ "bdzlr-\0"
  /* 15198 */ "bdnzlr-\0"
  /* 15206 */ "# XRay Function Patchable RET.\0"
  /* 15237 */ "# XRay Typed Event Log.\0"
  /* 15261 */ "# XRay Custom Event Log.\0"
  /* 15286 */ "# XRay Function Enter.\0"
  /* 15309 */ "# XRay Tail Call Exit.\0"
  /* 15332 */ "# XRay Function Exit.\0"
  /* 15354 */ "trechkpt.\0"
  /* 15364 */ "ori 1, 1, 0\0"
  /* 15376 */ "ori 2, 2, 0\0"
  /* 15388 */ "#ADDISdtprelHA32\0"
  /* 15405 */ "#ATOMIC_LOAD_SUB_I32\0"
  /* 15426 */ "#ATOMIC_LOAD_ADD_I32\0"
  /* 15447 */ "#ATOMIC_LOAD_NAND_I32\0"
  /* 15469 */ "#ATOMIC_LOAD_AND_I32\0"
  /* 15490 */ "#ATOMIC_LOAD_UMIN_I32\0"
  /* 15512 */ "#ATOMIC_LOAD_MIN_I32\0"
  /* 15533 */ "#ATOMIC_SWAP_I32\0"
  /* 15550 */ "#ATOMIC_LOAD_XOR_I32\0"
  /* 15571 */ "#ATOMIC_LOAD_OR_I32\0"
  /* 15591 */ "#ATOMIC_LOAD_UMAX_I32\0"
  /* 15613 */ "#ATOMIC_LOAD_MAX_I32\0"
  /* 15634 */ "#ADDItlsgdL32\0"
  /* 15648 */ "#ADDItlsldL32\0"
  /* 15662 */ "#LDgotTprelL32\0"
  /* 15677 */ "#ADDIdtprelL32\0"
  /* 15692 */ "#EH_SJLJ_LONGJMP32\0"
  /* 15711 */ "#EH_SJLJ_SETJMP32\0"
  /* 15729 */ "#ADDItlsgdLADDR32\0"
  /* 15747 */ "#ADDItlsldLADDR32\0"
  /* 15765 */ "GETtlsldADDR32\0"
  /* 15780 */ "GETtlsADDR32\0"
  /* 15793 */ "#PROBED_ALLOCA_32\0"
  /* 15811 */ "#PREPARE_PROBED_ALLOCA_32\0"
  /* 15837 */ "#PROBED_STACKALLOC_32\0"
  /* 15859 */ "#PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32\0"
  /* 15902 */ "#DFLOADf32\0"
  /* 15913 */ "#XFLOADf32\0"
  /* 15924 */ "#DFSTOREf32\0"
  /* 15936 */ "#XFSTOREf32\0"
  /* 15948 */ "#ATOMIC_LOAD_SUB_I64\0"
  /* 15969 */ "#ATOMIC_LOAD_ADD_I64\0"
  /* 15990 */ "#ATOMIC_LOAD_NAND_I64\0"
  /* 16012 */ "#ATOMIC_LOAD_UMIN_I64\0"
  /* 16034 */ "#ATOMIC_LOAD_MIN_I64\0"
  /* 16055 */ "#ATOMIC_SWAP_I64\0"
  /* 16072 */ "#ATOMIC_CMP_SWAP_I64\0"
  /* 16093 */ "#ATOMIC_LOAD_XOR_I64\0"
  /* 16114 */ "#ATOMIC_LOAD_OR_I64\0"
  /* 16134 */ "#ATOMIC_LOAD_UMAX_I64\0"
  /* 16156 */ "#ATOMIC_LOAD_MAX_I64\0"
  /* 16177 */ "#EH_SJLJ_LONGJMP64\0"
  /* 16196 */ "#EH_SJLJ_SETJMP64\0"
  /* 16214 */ "#PROBED_ALLOCA_64\0"
  /* 16232 */ "#PREPARE_PROBED_ALLOCA_64\0"
  /* 16258 */ "#PROBED_STACKALLOC_64\0"
  /* 16280 */ "#PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64\0"
  /* 16323 */ "#DFLOADf64\0"
  /* 16334 */ "#XFLOADf64\0"
  /* 16345 */ "#DFSTOREf64\0"
  /* 16357 */ "#XFSTOREf64\0"
  /* 16369 */ "#ATOMIC_LOAD_AND_i64\0"
  /* 16390 */ "#SELECT_CC_SPE4\0"
  /* 16406 */ "#SELECT_SPE4\0"
  /* 16419 */ "#SELECT_CC_F4\0"
  /* 16433 */ "#SELECT_F4\0"
  /* 16444 */ "#SELECT_CC_I4\0"
  /* 16458 */ "#SELECT_I4\0"
  /* 16469 */ "crxor 6, 6, 6\0"
  /* 16483 */ "creqv 6, 6, 6\0"
  /* 16497 */ "#SELECT_CC_F16\0"
  /* 16512 */ "#SELECT_F16\0"
  /* 16524 */ "#ATOMIC_LOAD_SUB_I16\0"
  /* 16545 */ "#ATOMIC_LOAD_ADD_I16\0"
  /* 16566 */ "#ATOMIC_LOAD_NAND_I16\0"
  /* 16588 */ "#ATOMIC_LOAD_AND_I16\0"
  /* 16609 */ "#ATOMIC_LOAD_UMIN_I16\0"
  /* 16631 */ "#ATOMIC_LOAD_MIN_I16\0"
  /* 16652 */ "#ATOMIC_SWAP_I16\0"
  /* 16669 */ "#ATOMIC_LOAD_XOR_I16\0"
  /* 16690 */ "#ATOMIC_LOAD_OR_I16\0"
  /* 16710 */ "#ATOMIC_LOAD_UMAX_I16\0"
  /* 16732 */ "#ATOMIC_LOAD_MAX_I16\0"
  /* 16753 */ "#ATOMIC_LOAD_SUB_I128\0"
  /* 16775 */ "#ATOMIC_LOAD_ADD_I128\0"
  /* 16797 */ "#ATOMIC_LOAD_NAND_I128\0"
  /* 16820 */ "#ATOMIC_LOAD_AND_I128\0"
  /* 16842 */ "#ATOMIC_SWAP_I128\0"
  /* 16860 */ "#ATOMIC_CMP_SWAP_I128\0"
  /* 16882 */ "#ATOMIC_LOAD_XOR_I128\0"
  /* 16904 */ "#ATOMIC_LOAD_OR_I128\0"
  /* 16925 */ "#ADDIStocHA8\0"
  /* 16938 */ "#DYNALLOC8\0"
  /* 16949 */ "#CFENCE8\0"
  /* 16958 */ "#SELECT_CC_F8\0"
  /* 16972 */ "#SELECT_F8\0"
  /* 16983 */ "#ATOMIC_LOAD_SUB_I8\0"
  /* 17003 */ "#SELECT_CC_I8\0"
  /* 17017 */ "#ATOMIC_LOAD_ADD_I8\0"
  /* 17037 */ "#ATOMIC_LOAD_NAND_I8\0"
  /* 17058 */ "#ATOMIC_LOAD_AND_I8\0"
  /* 17078 */ "#ATOMIC_LOAD_UMIN_I8\0"
  /* 17099 */ "#ATOMIC_LOAD_MIN_I8\0"
  /* 17119 */ "#ATOMIC_CMP_SWAP_I8\0"
  /* 17139 */ "ATOMIC_LOAD_XOR_I8\0"
  /* 17158 */ "#ATOMIC_LOAD_OR_I8\0"
  /* 17177 */ "#SELECT_I8\0"
  /* 17188 */ "#ATOMIC_LOAD_UMAX_I8\0"
  /* 17209 */ "#ATOMIC_LOAD_MAX_I8\0"
  /* 17229 */ "#MovePCtoLR8\0"
  /* 17242 */ "#DYNAREAOFFSET8\0"
  /* 17258 */ "#ANDI_rec_1_EQ_BIT8\0"
  /* 17278 */ "#ANDI_rec_1_GT_BIT8\0"
  /* 17298 */ "#TLSGDAIX8\0"
  /* 17309 */ "#ADDItoc8\0"
  /* 17319 */ "#ATOMIC_SWAP_i8\0"
  /* 17335 */ "#ADDIStocHA\0"
  /* 17347 */ "#ADDIStlsgdHA\0"
  /* 17361 */ "#ADDIStlsldHA\0"
  /* 17375 */ "#ADDISgotTprelHA\0"
  /* 17392 */ "#ADDISdtprelHA\0"
  /* 17407 */ "#ReadTB\0"
  /* 17415 */ "#RESTORE_UACC\0"
  /* 17429 */ "#SPILL_UACC\0"
  /* 17441 */ "#RESTORE_WACC\0"
  /* 17455 */ "#SPILL_WACC\0"
  /* 17467 */ "#RESTORE_ACC\0"
  /* 17480 */ "#SPILL_ACC\0"
  /* 17491 */ "#DYNALLOC\0"
  /* 17501 */ "#SELECT_CC_QBRC\0"
  /* 17517 */ "#SELECT_QBRC\0"
  /* 17530 */ "#SELECT_CC_QFRC\0"
  /* 17546 */ "#SELECT_QFRC\0"
  /* 17559 */ "#SELECT_CC_VSFRC\0"
  /* 17576 */ "#SELECT_VSFRC\0"
  /* 17590 */ "#SELECT_CC_VRRC\0"
  /* 17606 */ "#SELECT_VRRC\0"
  /* 17619 */ "#SELECT_CC_QSRC\0"
  /* 17635 */ "#SELECT_QSRC\0"
  /* 17648 */ "#SELECT_CC_VSSRC\0"
  /* 17665 */ "#SELECT_VSSRC\0"
  /* 17679 */ "#SELECT_CC_VSRC\0"
  /* 17695 */ "#SELECT_VSRC\0"
  /* 17708 */ "#SPILLTOVSR_LD\0"
  /* 17723 */ "LIFETIME_END\0"
  /* 17736 */ "#SETRND\0"
  /* 17744 */ "#BUILD_QUADWORD\0"
  /* 17760 */ "#RESTORE_QUADWORD\0"
  /* 17778 */ "#SPILL_QUADWORD\0"
  /* 17794 */ "#SPLIT_QUADWORD\0"
  /* 17810 */ "PSEUDO_PROBE\0"
  /* 17823 */ "BUNDLE\0"
  /* 17830 */ "#SELECT_CC_SPE\0"
  /* 17845 */ "#SELECT_SPE\0"
  /* 17857 */ "DBG_VALUE\0"
  /* 17867 */ "DBG_INSTR_REF\0"
  /* 17881 */ "DBG_PHI\0"
  /* 17889 */ "#LDtocJTI\0"
  /* 17899 */ "DBG_LABEL\0"
  /* 17909 */ "#GETtlsldADDRPCREL\0"
  /* 17928 */ "#GETtlsADDRPCREL\0"
  /* 17945 */ "#LDtocL\0"
  /* 17953 */ "#ADDItocL\0"
  /* 17963 */ "#LWZtocL\0"
  /* 17972 */ "#ADDItlsgdL\0"
  /* 17984 */ "#ADDItlsldL\0"
  /* 17996 */ "#LDgotTprelL\0"
  /* 18009 */ "#ADDIdtprelL\0"
  /* 18022 */ "#SETFLM\0"
  /* 18030 */ "#LQX_PSEUDO\0"
  /* 18042 */ "#STQX_PSEUDO\0"
  /* 18055 */ "#PPCEIEIO\0"
  /* 18065 */ "#UNENCODED_NOP\0"
  /* 18080 */ "#UpdateGBR\0"
  /* 18091 */ "#RESTORE_CR\0"
  /* 18103 */ "#SPILL_CR\0"
  /* 18113 */ "#ADDItlsgdLADDR\0"
  /* 18129 */ "#ADDItlsldLADDR\0"
  /* 18145 */ "#GETtlsldADDR\0"
  /* 18159 */ "#GETtlsADDR\0"
  /* 18171 */ "#KILL_PAIR\0"
  /* 18182 */ "#MovePCtoLR\0"
  /* 18194 */ "#MoveGOTtoLR\0"
  /* 18207 */ "#TCHECK_RET\0"
  /* 18219 */ "#TBEGIN_RET\0"
  /* 18231 */ "#DYNAREAOFFSET\0"
  /* 18246 */ "#RESTORE_CRBIT\0"
  /* 18261 */ "#SPILL_CRBIT\0"
  /* 18274 */ "#ANDI_rec_1_EQ_BIT\0"
  /* 18293 */ "#ANDI_rec_1_GT_BIT\0"
  /* 18312 */ "#PPC32GOT\0"
  /* 18322 */ "#PPC32PICGOT\0"
  /* 18335 */ "#LDtocCPT\0"
  /* 18345 */ "LIFETIME_START\0"
  /* 18360 */ "DBG_VALUE_LIST\0"
  /* 18375 */ "#SPILLTOVSR_ST\0"
  /* 18390 */ "#LIWAX\0"
  /* 18397 */ "#SPILLTOVSR_LDX\0"
  /* 18413 */ "GETtlsADDR32AIX\0"
  /* 18429 */ "GETtlsADDR64AIX\0"
  /* 18445 */ "#TLSGDAIX\0"
  /* 18455 */ "#SPILLTOVSR_STX\0"
  /* 18471 */ "#STIWX\0"
  /* 18478 */ "#LIWZX\0"
  /* 18485 */ "bca\0"
  /* 18489 */ "slbia\0"
  /* 18495 */ "tlbia\0"
  /* 18501 */ "bcla\0"
  /* 18506 */ "clrbhrb\0"
  /* 18514 */ "bc\0"
  /* 18517 */ "slbsync\0"
  /* 18525 */ "tlbsync\0"
  /* 18533 */ "msgsync\0"
  /* 18541 */ "isync\0"
  /* 18547 */ "msync\0"
  /* 18553 */ "#LDtoc\0"
  /* 18560 */ "#ADDItoc\0"
  /* 18569 */ "#LWZtoc\0"
  /* 18577 */ "hrfid\0"
  /* 18583 */ "tlbre\0"
  /* 18589 */ "tlbwe\0"
  /* 18595 */ "#SETRNDi\0"
  /* 18604 */ "rfci\0"
  /* 18609 */ "rfmci\0"
  /* 18615 */ "rfdi\0"
  /* 18620 */ "rfi\0"
  /* 18624 */ "bcl\0"
  /* 18628 */ "#PADDIdtprel\0"
  /* 18641 */ "# FEntry call\0"
  /* 18655 */ "dssall\0"
  /* 18662 */ "blrl\0"
  /* 18667 */ "bdzlrl\0"
  /* 18674 */ "bdnzlrl\0"
  /* 18682 */ "bctrl\0"
  /* 18688 */ "attn\0"
  /* 18693 */ "eieio\0"
  /* 18699 */ "nap\0"
  /* 18703 */ "trap\0"
  /* 18708 */ "nop\0"
  /* 18712 */ "#DecreaseCTR8loop\0"
  /* 18730 */ "#DecreaseCTRloop\0"
  /* 18747 */ "stop\0"
  /* 18752 */ "blr\0"
  /* 18756 */ "bdzlr\0"
  /* 18762 */ "bdnzlr\0"
  /* 18769 */ "bctr\0"
  /* 18774 */ "cpabort\0"
};
#endif // CAPSTONE_DIET

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    17858U,	// DBG_VALUE
    18361U,	// DBG_VALUE_LIST
    17868U,	// DBG_INSTR_REF
    17882U,	// DBG_PHI
    17900U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    17824U,	// BUNDLE
    18346U,	// LIFETIME_START
    17724U,	// LIFETIME_END
    17811U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    18642U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    15287U,	// PATCHABLE_FUNCTION_ENTER
    15207U,	// PATCHABLE_RET
    15333U,	// PATCHABLE_FUNCTION_EXIT
    15310U,	// PATCHABLE_TAIL_CALL
    15262U,	// PATCHABLE_EVENT_CALL
    15238U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    16861U,	// ATOMIC_CMP_SWAP_I128
    16776U,	// ATOMIC_LOAD_ADD_I128
    16821U,	// ATOMIC_LOAD_AND_I128
    16798U,	// ATOMIC_LOAD_NAND_I128
    16905U,	// ATOMIC_LOAD_OR_I128
    16754U,	// ATOMIC_LOAD_SUB_I128
    16883U,	// ATOMIC_LOAD_XOR_I128
    16843U,	// ATOMIC_SWAP_I128
    17745U,	// BUILD_QUADWORD
    35180U,	// BUILD_UACC
    16950U,	// CFENCE8
    1073779988U,	// CLRLSLDI
    1073775471U,	// CLRLSLDI_rec
    1073780520U,	// CLRLSLWI
    1073775580U,	// CLRLSLWI_rec
    1073780023U,	// CLRRDI
    1073775498U,	// CLRRDI_rec
    1073780561U,	// CLRRWI
    1073775609U,	// CLRRWI_rec
    1120320U,	// DCBFL
    1122834U,	// DCBFLP
    1125256U,	// DCBFPS
    1118823U,	// DCBFx
    1125264U,	// DCBSTPS
    33631536U,	// DCBTCT
    33630790U,	// DCBTDS
    33631544U,	// DCBTSTCT
    33630798U,	// DCBTSTDS
    1125945U,	// DCBTSTT
    1125917U,	// DCBTSTx
    1125932U,	// DCBTT
    1125668U,	// DCBTx
    15903U,	// DFLOADf32
    16324U,	// DFLOADf64
    15925U,	// DFSTOREf32
    16346U,	// DFSTOREf64
    1073779998U,	// EXTLDI
    1073775482U,	// EXTLDI_rec
    1073780546U,	// EXTLWI
    1073775600U,	// EXTLWI_rec
    1073780047U,	// EXTRDI
    1073775525U,	// EXTRDI_rec
    1073780585U,	// EXTRWI
    1073775636U,	// EXTRWI_rec
    1073780530U,	// INSLWI
    1073775591U,	// INSLWI_rec
    1073780031U,	// INSRDI
    1073775507U,	// INSRDI_rec
    1073780569U,	// INSRWI
    1073775618U,	// INSRWI_rec
    18172U,	// KILL_PAIR
    67144525U,	// LAx
    18391U,	// LIWAX
    18479U,	// LIWZX
    1073780166U,	// RLWIMIbm
    1073775563U,	// RLWIMIbm_rec
    1073781346U,	// RLWINMbm
    1073775714U,	// RLWINMbm_rec
    1073781363U,	// RLWNMbm
    1073775723U,	// RLWNMbm_rec
    1073780039U,	// ROTRDI
    1073775516U,	// ROTRDI_rec
    1073780577U,	// ROTRWI
    1073775627U,	// ROTRWI_rec
    1073779992U,	// SLDI
    1073775475U,	// SLDI_rec
    1073780524U,	// SLWI
    1073775584U,	// SLWI_rec
    17709U,	// SPILLTOVSR_LD
    18398U,	// SPILLTOVSR_LDX
    18376U,	// SPILLTOVSR_ST
    18456U,	// SPILLTOVSR_STX
    1073780033U,	// SRDI
    1073775509U,	// SRDI_rec
    1073780571U,	// SRWI
    1073775620U,	// SRWI_rec
    18472U,	// STIWX
    1073779938U,	// SUBI
    1073778279U,	// SUBIC
    1073775037U,	// SUBIC_rec
    1073785647U,	// SUBIS
    100707126U,	// SUBPCIS
    15914U,	// XFLOADf32
    16335U,	// XFLOADf64
    15937U,	// XFSTOREf32
    16358U,	// XFSTOREf64
    1073778471U,	// ADD4
    1073781929U,	// ADD4O
    1073775814U,	// ADD4O_rec
    1073778471U,	// ADD4TLS
    1073775111U,	// ADD4_rec
    1073778471U,	// ADD8
    1073781929U,	// ADD8O
    1073775814U,	// ADD8O_rec
    1073778471U,	// ADD8TLS
    1073778471U,	// ADD8TLS_
    1073775111U,	// ADD8_rec
    1073778241U,	// ADDC
    1073778241U,	// ADDC8
    1073781914U,	// ADDC8O
    1073775797U,	// ADDC8O_rec
    1073775004U,	// ADDC8_rec
    1073781914U,	// ADDCO
    1073775797U,	// ADDCO_rec
    1073775004U,	// ADDC_rec
    1073779150U,	// ADDE
    1073779150U,	// ADDE8
    1073781950U,	// ADDE8O
    1073775838U,	// ADDE8O_rec
    1073775257U,	// ADDE8_rec
    1073781950U,	// ADDEO
    1073775838U,	// ADDEO_rec
    1073788234U,	// ADDEX
    1073788234U,	// ADDEX8
    1073775257U,	// ADDE_rec
    1073779974U,	// ADDI
    1073779974U,	// ADDI8
    1073778286U,	// ADDIC
    1073778286U,	// ADDIC8
    1073775045U,	// ADDIC_rec
    1073785672U,	// ADDIS
    1073785672U,	// ADDIS8
    17393U,	// ADDISdtprelHA
    15389U,	// ADDISdtprelHA32
    17376U,	// ADDISgotTprelHA
    17348U,	// ADDIStlsgdHA
    17362U,	// ADDIStlsldHA
    17336U,	// ADDIStocHA
    16926U,	// ADDIStocHA8
    18010U,	// ADDIdtprelL
    15678U,	// ADDIdtprelL32
    17973U,	// ADDItlsgdL
    15635U,	// ADDItlsgdL32
    18114U,	// ADDItlsgdLADDR
    15730U,	// ADDItlsgdLADDR32
    17985U,	// ADDItlsldL
    15649U,	// ADDItlsldL32
    18130U,	// ADDItlsldLADDR
    15748U,	// ADDItlsldLADDR32
    18561U,	// ADDItoc
    17310U,	// ADDItoc8
    17954U,	// ADDItocL
    37393U,	// ADDME
    37393U,	// ADDME8
    40149U,	// ADDME8O
    34040U,	// ADDME8O_rec
    33465U,	// ADDME8_rec
    40149U,	// ADDMEO
    34040U,	// ADDMEO_rec
    33465U,	// ADDME_rec
    43839U,	// ADDPCIS
    37464U,	// ADDZE
    37464U,	// ADDZE8
    40174U,	// ADDZE8O
    34068U,	// ADDZE8O_rec
    33514U,	// ADDZE8_rec
    40174U,	// ADDZEO
    34068U,	// ADDZEO_rec
    33514U,	// ADDZE_rec
    100729U,	// ADJCALLSTACKDOWN
    100748U,	// ADJCALLSTACKUP
    1073778754U,	// AND
    1073778754U,	// AND8
    1073775180U,	// AND8_rec
    1073778250U,	// ANDC
    1073778250U,	// ANDC8
    1073775011U,	// ANDC8_rec
    1073775011U,	// ANDC_rec
    1073775491U,	// ANDI8_rec
    1073776350U,	// ANDIS8_rec
    1073776350U,	// ANDIS_rec
    1073775491U,	// ANDI_rec
    18275U,	// ANDI_rec_1_EQ_BIT
    17259U,	// ANDI_rec_1_EQ_BIT8
    18294U,	// ANDI_rec_1_GT_BIT
    17279U,	// ANDI_rec_1_GT_BIT8
    1073775180U,	// AND_rec
    2283833587U,	// ATOMIC_CMP_SWAP_I16
    2283833513U,	// ATOMIC_CMP_SWAP_I32
    16073U,	// ATOMIC_CMP_SWAP_I64
    17120U,	// ATOMIC_CMP_SWAP_I8
    16546U,	// ATOMIC_LOAD_ADD_I16
    15427U,	// ATOMIC_LOAD_ADD_I32
    15970U,	// ATOMIC_LOAD_ADD_I64
    17018U,	// ATOMIC_LOAD_ADD_I8
    16589U,	// ATOMIC_LOAD_AND_I16
    15470U,	// ATOMIC_LOAD_AND_I32
    16370U,	// ATOMIC_LOAD_AND_I64
    17059U,	// ATOMIC_LOAD_AND_I8
    16733U,	// ATOMIC_LOAD_MAX_I16
    15614U,	// ATOMIC_LOAD_MAX_I32
    16157U,	// ATOMIC_LOAD_MAX_I64
    17210U,	// ATOMIC_LOAD_MAX_I8
    16632U,	// ATOMIC_LOAD_MIN_I16
    15513U,	// ATOMIC_LOAD_MIN_I32
    16035U,	// ATOMIC_LOAD_MIN_I64
    17100U,	// ATOMIC_LOAD_MIN_I8
    16567U,	// ATOMIC_LOAD_NAND_I16
    15448U,	// ATOMIC_LOAD_NAND_I32
    15991U,	// ATOMIC_LOAD_NAND_I64
    17038U,	// ATOMIC_LOAD_NAND_I8
    16691U,	// ATOMIC_LOAD_OR_I16
    15572U,	// ATOMIC_LOAD_OR_I32
    16115U,	// ATOMIC_LOAD_OR_I64
    17159U,	// ATOMIC_LOAD_OR_I8
    16525U,	// ATOMIC_LOAD_SUB_I16
    15406U,	// ATOMIC_LOAD_SUB_I32
    15949U,	// ATOMIC_LOAD_SUB_I64
    16984U,	// ATOMIC_LOAD_SUB_I8
    16711U,	// ATOMIC_LOAD_UMAX_I16
    15592U,	// ATOMIC_LOAD_UMAX_I32
    16135U,	// ATOMIC_LOAD_UMAX_I64
    17189U,	// ATOMIC_LOAD_UMAX_I8
    16610U,	// ATOMIC_LOAD_UMIN_I16
    15491U,	// ATOMIC_LOAD_UMIN_I32
    16013U,	// ATOMIC_LOAD_UMIN_I64
    17079U,	// ATOMIC_LOAD_UMIN_I8
    16670U,	// ATOMIC_LOAD_XOR_I16
    15551U,	// ATOMIC_LOAD_XOR_I32
    16094U,	// ATOMIC_LOAD_XOR_I64
    17140U,	// ATOMIC_LOAD_XOR_I8
    16653U,	// ATOMIC_SWAP_I16
    15534U,	// ATOMIC_SWAP_I32
    16056U,	// ATOMIC_SWAP_I64
    17320U,	// ATOMIC_SWAP_I8
    18689U,	// ATTN
    1182806U,	// B
    1215014U,	// BA
    167805047U,	// BC
    3360849U,	// BCC
    4409425U,	// BCCA
    5458001U,	// BCCCTR
    5458001U,	// BCCCTR8
    6506577U,	// BCCCTRL
    6506577U,	// BCCCTRL8
    7555153U,	// BCCL
    8603729U,	// BCCLA
    9652305U,	// BCCLR
    10700881U,	// BCCLRL
    11567273U,	// BCCTR
    11567273U,	// BCCTR8
    11567339U,	// BCCTR8n
    11567251U,	// BCCTRL
    11567251U,	// BCCTRL8
    11567319U,	// BCCTRL8n
    11567319U,	// BCCTRLn
    11567339U,	// BCCTRn
    1073775108U,	// BCDADD_rec
    1073775731U,	// BCDCFN_rec
    1073776118U,	// BCDCFSQ_rec
    1073776706U,	// BCDCFZ_rec
    1073775740U,	// BCDCPSGN_rec
    33964U,	// BCDCTN_rec
    34304U,	// BCDCTSQ_rec
    1073776722U,	// BCDCTZ_rec
    1073775760U,	// BCDSETSGN_rec
    1073776226U,	// BCDSR_rec
    1073774949U,	// BCDSUB_rec
    1073776282U,	// BCDS_rec
    1073775061U,	// BCDTRUNC_rec
    1073776375U,	// BCDUS_rec
    1073775072U,	// BCDUTRUNC_rec
    167805055U,	// BCL
    11567263U,	// BCLR
    11567240U,	// BCLRL
    11567309U,	// BCLRLn
    11567330U,	// BCLRn
    1179725U,	// BCLalways
    167805125U,	// BCLn
    18770U,	// BCTR
    18770U,	// BCTR8
    18683U,	// BCTRL
    18683U,	// BCTRL8
    229466U,	// BCTRL8_LDinto_toc
    229466U,	// BCTRL8_LDinto_toc_RM
    18683U,	// BCTRL8_RM
    229480U,	// BCTRL_LWZinto_toc
    229480U,	// BCTRL_LWZinto_toc_RM
    18683U,	// BCTRL_RM
    167805118U,	// BCn
    1194663U,	// BDNZ
    1194663U,	// BDNZ8
    1215563U,	// BDNZA
    1212697U,	// BDNZAm
    1212457U,	// BDNZAp
    1186064U,	// BDNZL
    1215326U,	// BDNZLA
    1212681U,	// BDNZLAm
    1212441U,	// BDNZLAp
    18763U,	// BDNZLR
    18763U,	// BDNZLR8
    18675U,	// BDNZLRL
    15183U,	// BDNZLRLm
    15140U,	// BDNZLRLp
    15199U,	// BDNZLRm
    15156U,	// BDNZLRp
    1179944U,	// BDNZLm
    1179704U,	// BDNZLp
    1179958U,	// BDNZm
    1179718U,	// BDNZp
    1194505U,	// BDZ
    1194505U,	// BDZ8
    1215557U,	// BDZA
    1212690U,	// BDZAm
    1212450U,	// BDZAp
    1186058U,	// BDZL
    1215319U,	// BDZLA
    1212673U,	// BDZLAm
    1212433U,	// BDZLAp
    18757U,	// BDZLR
    18757U,	// BDZLR8
    18668U,	// BDZLRL
    15175U,	// BDZLRLm
    15132U,	// BDZLRLp
    15192U,	// BDZLRm
    15149U,	// BDZLRp
    1179937U,	// BDZLm
    1179697U,	// BDZLp
    1179952U,	// BDZm
    1179712U,	// BDZp
    1185797U,	// BL
    1185797U,	// BL8
    12720133U,	// BL8_NOP
    12720133U,	// BL8_NOP_RM
    12851205U,	// BL8_NOP_TLS
    1185797U,	// BL8_NOTOC
    1185797U,	// BL8_NOTOC_RM
    1316869U,	// BL8_NOTOC_TLS
    1185797U,	// BL8_RM
    1316869U,	// BL8_TLS
    1316869U,	// BL8_TLS_
    1215308U,	// BLA
    1215308U,	// BLA8
    12749644U,	// BLA8_NOP
    12749644U,	// BLA8_NOP_RM
    1215308U,	// BLA8_RM
    1215308U,	// BLA_RM
    18753U,	// BLR
    18753U,	// BLR8
    18663U,	// BLRL
    12720133U,	// BL_NOP
    12720133U,	// BL_NOP_RM
    1185797U,	// BL_RM
    1316869U,	// BL_TLS
    1073778734U,	// BPERMD
    36990U,	// BRD
    37834U,	// BRH
    37834U,	// BRH8
    1073778342U,	// BRINC
    45719U,	// BRW
    45719U,	// BRW8
    1073778593U,	// CFUGED
    18507U,	// CLRBHRB
    1073777868U,	// CMPB
    1073777868U,	// CMPB8
    1073778806U,	// CMPD
    1073780016U,	// CMPDI
    1073777874U,	// CMPEQB
    1073778705U,	// CMPLD
    1073779980U,	// CMPLDI
    1073787278U,	// CMPLW
    1073780504U,	// CMPLWI
    1275104474U,	// CMPRB
    1275104474U,	// CMPRB8
    1073787535U,	// CMPW
    1073780554U,	// CMPWI
    37286U,	// CNTLZD
    1073781177U,	// CNTLZDM
    33415U,	// CNTLZD_rec
    46106U,	// CNTLZW
    46106U,	// CNTLZW8
    34807U,	// CNTLZW8_rec
    34807U,	// CNTLZW_rec
    37301U,	// CNTTZD
    1073781194U,	// CNTTZDM
    33424U,	// CNTTZD_rec
    46121U,	// CNTTZW
    46121U,	// CNTTZW8
    34816U,	// CNTTZW8_rec
    34816U,	// CNTTZW_rec
    18775U,	// CP_ABORT
    47596U,	// CP_COPY
    47596U,	// CP_COPY8
    1073775322U,	// CP_PASTE8_rec
    1073775322U,	// CP_PASTE_rec
    16484U,	// CR6SET
    16470U,	// CR6UNSET
    1073778784U,	// CRAND
    1073778256U,	// CRANDC
    1073786722U,	// CREQV
    1073778768U,	// CRNAND
    1073785013U,	// CRNOR
    44504U,	// CRNOT
    1073785027U,	// CROR
    1073778363U,	// CRORC
    1308667746U,	// CRSET
    1308666088U,	// CRUNSET
    1073785064U,	// CRXOR
    3360849U,	// CTRL_DEP
    268475521U,	// DARN
    1116708U,	// DCBA
    13931111U,	// DCBF
    1122575U,	// DCBFEP
    1119430U,	// DCBI
    1125897U,	// DCBST
    1122608U,	// DCBSTEP
    14986532U,	// DCBT
    336168U,	// DCBTEP
    14986781U,	// DCBTST
    336185U,	// DCBTSTEP
    1128946U,	// DCBZ
    1122627U,	// DCBZEP
    1120515U,	// DCBZL
    1122591U,	// DCBZLEP
    38120U,	// DCCCI
    1073779097U,	// DIVD
    1073779156U,	// DIVDE
    1073781957U,	// DIVDEO
    1073775846U,	// DIVDEO_rec
    1073786522U,	// DIVDEU
    1073782196U,	// DIVDEUO
    1073775935U,	// DIVDEUO_rec
    1073776462U,	// DIVDEU_rec
    1073775264U,	// DIVDE_rec
    1073781943U,	// DIVDO
    1073775830U,	// DIVDO_rec
    1073786515U,	// DIVDU
    1073782188U,	// DIVDUO
    1073775926U,	// DIVDUO_rec
    1073776454U,	// DIVDU_rec
    1073775232U,	// DIVD_rec
    1073787905U,	// DIVW
    1073779272U,	// DIVWE
    1073781990U,	// DIVWEO
    1073775883U,	// DIVWEO_rec
    1073786530U,	// DIVWEU
    1073782205U,	// DIVWEUO
    1073775945U,	// DIVWEUO_rec
    1073776471U,	// DIVWEU_rec
    1073775330U,	// DIVWE_rec
    1073782230U,	// DIVWO
    1073775973U,	// DIVWO_rec
    1073786636U,	// DIVWU
    1073782214U,	// DIVWUO
    1073775955U,	// DIVWUO_rec
    1073776498U,	// DIVWU_rec
    1073776613U,	// DIVW_rec
    43137U,	// DMMR
    1096387U,	// DMSETDMRZ
    302033111U,	// DMXOR
    1308985638U,	// DMXXEXTFDMR256
    11929753U,	// DMXXEXTFDMR512
    16124057U,	// DMXXEXTFDMR512_HI
    1073776917U,	// DMXXINSTFDMR256
    1073776776U,	// DMXXINSTFDMR512
    1073776776U,	// DMXXINSTFDMR512_HI
    1485725U,	// DSS
    18656U,	// DSSALL
    1376103952U,	// DST
    1376103952U,	// DST64
    1376103973U,	// DSTST
    1376103973U,	// DSTST64
    1376104002U,	// DSTSTT
    1376104002U,	// DSTSTT64
    1376103987U,	// DSTT
    1376103987U,	// DSTT64
    17492U,	// DYNALLOC
    16939U,	// DYNALLOC8
    18232U,	// DYNAREAOFFSET
    17243U,	// DYNAREAOFFSET8
    18713U,	// DecreaseCTR8loop
    18731U,	// DecreaseCTRloop
    43335U,	// EFDABS
    1073778468U,	// EFDADD
    43700U,	// EFDCFS
    37559U,	// EFDCFSF
    38531U,	// EFDCFSI
    36829U,	// EFDCFSID
    37661U,	// EFDCFUF
    38608U,	// EFDCFUI
    36848U,	// EFDCFUID
    1073784483U,	// EFDCMPEQ
    1073786178U,	// EFDCMPGT
    1073786256U,	// EFDCMPLT
    37633U,	// EFDCTSF
    38559U,	// EFDCTSI
    47630U,	// EFDCTSIDZ
    47732U,	// EFDCTSIZ
    37689U,	// EFDCTUF
    38636U,	// EFDCTUI
    47651U,	// EFDCTUIDZ
    47763U,	// EFDCTUIZ
    1073786670U,	// EFDDIV
    1073780927U,	// EFDMUL
    43351U,	// EFDNABS
    37715U,	// EFDNEG
    1073778091U,	// EFDSUB
    1073784533U,	// EFDTSTEQ
    1073786219U,	// EFDTSTGT
    1073786297U,	// EFDTSTLT
    43388U,	// EFSABS
    1073778551U,	// EFSADD
    36777U,	// EFSCFD
    37568U,	// EFSCFSF
    38540U,	// EFSCFSI
    37670U,	// EFSCFUF
    38617U,	// EFSCFUI
    1073784503U,	// EFSCMPEQ
    1073786198U,	// EFSCMPGT
    1073786276U,	// EFSCMPLT
    37642U,	// EFSCTSF
    38568U,	// EFSCTSI
    47742U,	// EFSCTSIZ
    37698U,	// EFSCTUF
    38645U,	// EFSCTUI
    47773U,	// EFSCTUIZ
    1073786684U,	// EFSDIV
    1073780943U,	// EFSMUL
    43369U,	// EFSNABS
    37731U,	// EFSNEG
    1073778126U,	// EFSSUB
    1073784543U,	// EFSTSTEQ
    1073786229U,	// EFSTSTGT
    1073786307U,	// EFSTSTLT
    15693U,	// EH_SjLj_LongJmp32
    16178U,	// EH_SjLj_LongJmp64
    15712U,	// EH_SjLj_SetJmp32
    16197U,	// EH_SjLj_SetJmp64
    1179649U,	// EH_SjLj_Setup
    1073786717U,	// EQV
    1073786717U,	// EQV8
    1073776513U,	// EQV8_rec
    1073776513U,	// EQV_rec
    43405U,	// EVABS
    1107341658U,	// EVADDIW
    45003U,	// EVADDSMIAAW
    45135U,	// EVADDSSIAAW
    45069U,	// EVADDUMIAAW
    45201U,	// EVADDUSIAAW
    1073787128U,	// EVADDW
    1073778791U,	// EVAND
    1073778264U,	// EVANDC
    1073784524U,	// EVCMPEQ
    1073785780U,	// EVCMPGTS
    1073786582U,	// EVCMPGTU
    1073785790U,	// EVCMPLTS
    1073786592U,	// EVCMPLTU
    45801U,	// EVCNTLSW
    46104U,	// EVCNTLZW
    1073785960U,	// EVDIVWS
    1073786634U,	// EVDIVWU
    1073786729U,	// EVEQV
    36151U,	// EVEXTSB
    37917U,	// EVEXTSH
    43396U,	// EVFSABS
    1073778559U,	// EVFSADD
    37577U,	// EVFSCFSF
    38549U,	// EVFSCFSI
    37679U,	// EVFSCFUF
    38626U,	// EVFSCFUI
    1073784513U,	// EVFSCMPEQ
    1073786208U,	// EVFSCMPGT
    1073786286U,	// EVFSCMPLT
    37651U,	// EVFSCTSF
    38577U,	// EVFSCTSI
    47752U,	// EVFSCTSIZ
    37651U,	// EVFSCTUF
    38654U,	// EVFSCTUI
    47752U,	// EVFSCTUIZ
    1073786692U,	// EVFSDIV
    1073780951U,	// EVFSMUL
    43378U,	// EVFSNABS
    37739U,	// EVFSNEG
    1073778134U,	// EVFSSUB
    1073784553U,	// EVFSTSTEQ
    1073786239U,	// EVFSTSTGT
    1073786317U,	// EVFSTSTLT
    67145608U,	// EVLDD
    134264046U,	// EVLDDX
    67146635U,	// EVLDH
    134264174U,	// EVLDHX
    67154176U,	// EVLDW
    134265195U,	// EVLDWX
    67153110U,	// EVLHHESPLAT
    134264935U,	// EVLHHESPLATX
    67153135U,	// EVLHHOSSPLAT
    134264962U,	// EVLHHOSSPLATX
    67153149U,	// EVLHHOUSPLAT
    134264977U,	// EVLHHOUSPLATX
    67146226U,	// EVLWHE
    134264145U,	// EVLWHEX
    67152767U,	// EVLWHOS
    134264907U,	// EVLWHOSX
    67153593U,	// EVLWHOU
    134265093U,	// EVLWHOUX
    67153123U,	// EVLWHSPLAT
    134264949U,	// EVLWHSPLATX
    67153163U,	// EVLWWSPLAT
    134264992U,	// EVLWWSPLATX
    1073780087U,	// EVMERGEHI
    1073782048U,	// EVMERGEHILO
    1073782037U,	// EVMERGELO
    1073780098U,	// EVMERGELOHI
    1073777066U,	// EVMHEGSMFAA
    1073781562U,	// EVMHEGSMFAN
    1073777114U,	// EVMHEGSMIAA
    1073781610U,	// EVMHEGSMIAN
    1073777151U,	// EVMHEGUMIAA
    1073781647U,	// EVMHEGUMIAN
    1073779315U,	// EVMHESMF
    1073777199U,	// EVMHESMFA
    1073786775U,	// EVMHESMFAAW
    1073787319U,	// EVMHESMFANW
    1073780182U,	// EVMHESMI
    1073777291U,	// EVMHESMIA
    1073786840U,	// EVMHESMIAAW
    1073787371U,	// EVMHESMIANW
    1073779418U,	// EVMHESSF
    1073777242U,	// EVMHESSFA
    1073786801U,	// EVMHESSFAAW
    1073787345U,	// EVMHESSFANW
    1073786972U,	// EVMHESSIAAW
    1073787449U,	// EVMHESSIANW
    1073780221U,	// EVMHEUMI
    1073777334U,	// EVMHEUMIA
    1073786906U,	// EVMHEUMIAAW
    1073787410U,	// EVMHEUMIANW
    1073787038U,	// EVMHEUSIAAW
    1073787488U,	// EVMHEUSIANW
    1073777079U,	// EVMHOGSMFAA
    1073781575U,	// EVMHOGSMFAN
    1073777127U,	// EVMHOGSMIAA
    1073781623U,	// EVMHOGSMIAN
    1073777164U,	// EVMHOGUMIAA
    1073781660U,	// EVMHOGUMIAN
    1073779335U,	// EVMHOSMF
    1073777221U,	// EVMHOSMFA
    1073786788U,	// EVMHOSMFAAW
    1073787332U,	// EVMHOSMFANW
    1073780202U,	// EVMHOSMI
    1073777313U,	// EVMHOSMIA
    1073786880U,	// EVMHOSMIAAW
    1073787397U,	// EVMHOSMIANW
    1073779438U,	// EVMHOSSF
    1073777264U,	// EVMHOSSFA
    1073786814U,	// EVMHOSSFAAW
    1073787358U,	// EVMHOSSFANW
    1073787012U,	// EVMHOSSIAAW
    1073787475U,	// EVMHOSSIANW
    1073780251U,	// EVMHOUMI
    1073777367U,	// EVMHOUMIA
    1073786946U,	// EVMHOUMIAAW
    1073787436U,	// EVMHOUMIANW
    1073787078U,	// EVMHOUSIAAW
    1073787514U,	// EVMHOUSIANW
    35686U,	// EVMRA
    1073779325U,	// EVMWHSMF
    1073777210U,	// EVMWHSMFA
    1073780192U,	// EVMWHSMI
    1073777302U,	// EVMWHSMIA
    1073779428U,	// EVMWHSSF
    1073777253U,	// EVMWHSSFA
    1073780231U,	// EVMWHUMI
    1073777345U,	// EVMWHUMIA
    1073786867U,	// EVMWLSMIAAW
    1073787384U,	// EVMWLSMIANW
    1073786999U,	// EVMWLSSIAAW
    1073787462U,	// EVMWLSSIANW
    1073780241U,	// EVMWLUMI
    1073777356U,	// EVMWLUMIA
    1073786933U,	// EVMWLUMIAAW
    1073787423U,	// EVMWLUMIANW
    1073787065U,	// EVMWLUSIAAW
    1073787501U,	// EVMWLUSIANW
    1073779345U,	// EVMWSMF
    1073777232U,	// EVMWSMFA
    1073777092U,	// EVMWSMFAA
    1073781588U,	// EVMWSMFAN
    1073780212U,	// EVMWSMI
    1073777324U,	// EVMWSMIA
    1073777140U,	// EVMWSMIAA
    1073781636U,	// EVMWSMIAN
    1073779448U,	// EVMWSSF
    1073777275U,	// EVMWSSFA
    1073777103U,	// EVMWSSFAA
    1073781599U,	// EVMWSSFAN
    1073780261U,	// EVMWUMI
    1073777378U,	// EVMWUMIA
    1073777177U,	// EVMWUMIAA
    1073781673U,	// EVMWUMIAN
    1073778776U,	// EVNAND
    37748U,	// EVNEG
    1073785020U,	// EVNOR
    1073785033U,	// EVOR
    1073778370U,	// EVORC
    1073787285U,	// EVRLW
    1073780512U,	// EVRLWI
    45319U,	// EVRNDW
    3238050620U,	// EVSEL
    1073787292U,	// EVSLW
    1073780538U,	// EVSLWI
    335582572U,	// EVSPLATFI
    335582918U,	// EVSPLATI
    1073785691U,	// EVSRWIS
    1073786544U,	// EVSRWIU
    1073785888U,	// EVSRWS
    1073786620U,	// EVSRWU
    67145624U,	// EVSTDD
    134264054U,	// EVSTDDX
    67146642U,	// EVSTDH
    134264182U,	// EVSTDHX
    67154191U,	// EVSTDW
    134265203U,	// EVSTDWX
    67146234U,	// EVSTWHE
    134264154U,	// EVSTWHEX
    67149068U,	// EVSTWHO
    134264469U,	// EVSTWHOX
    67146319U,	// EVSTWWE
    134264164U,	// EVSTWWEX
    67149277U,	// EVSTWWO
    134264479U,	// EVSTWWOX
    45029U,	// EVSUBFSMIAAW
    45161U,	// EVSUBFSSIAAW
    45095U,	// EVSUBFUMIAAW
    45227U,	// EVSUBFUSIAAW
    1073787176U,	// EVSUBFW
    1442885937U,	// EVSUBIFW
    1073785071U,	// EVXOR
    36153U,	// EXTSB
    36153U,	// EXTSB8
    36153U,	// EXTSB8_32_64
    33106U,	// EXTSB8_rec
    33106U,	// EXTSB_rec
    37919U,	// EXTSH
    37919U,	// EXTSH8
    37919U,	// EXTSH8_32_64
    33574U,	// EXTSH8_rec
    33574U,	// EXTSH_rec
    45845U,	// EXTSW
    1073780130U,	// EXTSWSLI
    1073780130U,	// EXTSWSLI_32_64
    1073775543U,	// EXTSWSLI_32_64_rec
    1073775543U,	// EXTSWSLI_rec
    45845U,	// EXTSW_32
    45845U,	// EXTSW_32_64
    34759U,	// EXTSW_32_64_rec
    34759U,	// EXTSW_rec
    18694U,	// EnforceIEIO
    43345U,	// FABSD
    34416U,	// FABSD_rec
    43345U,	// FABSS
    34416U,	// FABSS_rec
    1073778478U,	// FADD
    1073785324U,	// FADDS
    1073776289U,	// FADDS_rec
    1073775117U,	// FADD_rec
    0U,	// FADDrtz
    36822U,	// FCFID
    43582U,	// FCFIDS
    34492U,	// FCFIDS_rec
    44662U,	// FCFIDU
    43986U,	// FCFIDUS
    34559U,	// FCFIDUS_rec
    34612U,	// FCFIDU_rec
    33325U,	// FCFID_rec
    1073782078U,	// FCMPOD
    1073782078U,	// FCMPOS
    1073786562U,	// FCMPUD
    1073786562U,	// FCMPUS
    1073781697U,	// FCPSGND
    1073775751U,	// FCPSGND_rec
    1073781697U,	// FCPSGNS
    1073775751U,	// FCPSGNS_rec
    36841U,	// FCTID
    44672U,	// FCTIDU
    47824U,	// FCTIDUZ
    34907U,	// FCTIDUZ_rec
    34621U,	// FCTIDU_rec
    47643U,	// FCTIDZ
    34873U,	// FCTIDZ_rec
    33333U,	// FCTID_rec
    45413U,	// FCTIW
    44788U,	// FCTIWU
    47835U,	// FCTIWUZ
    34917U,	// FCTIWUZ_rec
    34665U,	// FCTIWU_rec
    47846U,	// FCTIWZ
    34927U,	// FCTIWZ_rec
    34720U,	// FCTIW_rec
    1073786678U,	// FDIV
    1073785881U,	// FDIVS
    1073776402U,	// FDIVS_rec
    1073776506U,	// FDIV_rec
    1073778486U,	// FMADD
    1073785333U,	// FMADDS
    1073776297U,	// FMADDS_rec
    1073775124U,	// FMADD_rec
    43132U,	// FMR
    34384U,	// FMR_rec
    1073778109U,	// FMSUB
    1073785303U,	// FMSUBS
    1073776263U,	// FMSUBS_rec
    1073774965U,	// FMSUB_rec
    1073780937U,	// FMUL
    1073785710U,	// FMULS
    1073776358U,	// FMULS_rec
    1073775689U,	// FMUL_rec
    43362U,	// FNABSD
    34423U,	// FNABSD_rec
    43362U,	// FNABSS
    34423U,	// FNABSS_rec
    37725U,	// FNEGD
    33546U,	// FNEGD_rec
    37725U,	// FNEGS
    33546U,	// FNEGS_rec
    1073778495U,	// FNMADD
    1073785343U,	// FNMADDS
    1073776306U,	// FNMADDS_rec
    1073775132U,	// FNMADD_rec
    1073778118U,	// FNMSUB
    1073785313U,	// FNMSUBS
    1073776272U,	// FNMSUBS_rec
    1073774973U,	// FNMSUB_rec
    37417U,	// FRE
    43682U,	// FRES
    34501U,	// FRES_rec
    33482U,	// FRE_rec
    39508U,	// FRIMD
    33883U,	// FRIMD_rec
    39508U,	// FRIMS
    33883U,	// FRIMS_rec
    39890U,	// FRIND
    33957U,	// FRIND_rec
    39890U,	// FRINS
    33957U,	// FRINS_rec
    41474U,	// FRIPD
    34236U,	// FRIPD_rec
    41474U,	// FRIPS
    34236U,	// FRIPS_rec
    47726U,	// FRIZD
    34891U,	// FRIZD_rec
    47726U,	// FRIZS
    34891U,	// FRIZS_rec
    42450U,	// FRSP
    34267U,	// FRSP_rec
    37432U,	// FRSQRTE
    43690U,	// FRSQRTES
    34508U,	// FRSQRTES_rec
    33488U,	// FRSQRTE_rec
    1073780775U,	// FSELD
    1073775672U,	// FSELD_rec
    1073780775U,	// FSELS
    1073775672U,	// FSELS_rec
    44511U,	// FSQRT
    43976U,	// FSQRTS
    34542U,	// FSQRTS_rec
    34595U,	// FSQRT_rec
    1073778101U,	// FSUB
    1073785294U,	// FSUBS
    1073776255U,	// FSUBS_rec
    1073774958U,	// FSUB_rec
    1073786701U,	// FTDIV
    44518U,	// FTSQRT
    18160U,	// GETtlsADDR
    15781U,	// GETtlsADDR32
    18414U,	// GETtlsADDR32AIX
    18430U,	// GETtlsADDR64AIX
    17929U,	// GETtlsADDRPCREL
    18146U,	// GETtlsldADDR
    15766U,	// GETtlsldADDR32
    17910U,	// GETtlsldADDRPCREL
    402692067U,	// HASHCHK
    402692067U,	// HASHCHK8
    402694664U,	// HASHCHKP
    402694664U,	// HASHCHKP8
    402697749U,	// HASHST
    402697749U,	// HASHST8
    402695784U,	// HASHSTP
    402695784U,	// HASHSTP8
    18578U,	// HRFID
    1119436U,	// ICBI
    1122583U,	// ICBIEP
    462495U,	// ICBLC
    460270U,	// ICBLQ
    470314U,	// ICBT
    469860U,	// ICBTLS
    38127U,	// ICCCI
    1073780781U,	// ISEL
    1073780781U,	// ISEL8
    18542U,	// ISYNC
    436243277U,	// LA
    436243277U,	// LA8
    134264608U,	// LBARX
    134264608U,	// LBARXL
    134264489U,	// LBEPX
    67156473U,	// LBZ
    67156473U,	// LBZ8
    1073788373U,	// LBZCIX
    469806867U,	// LBZU
    469806867U,	// LBZU8
    503363902U,	// LBZUX
    503363902U,	// LBZUX8
    134265278U,	// LBZX
    134265278U,	// LBZX8
    1073789374U,	// LBZXTLS
    1073789374U,	// LBZXTLS_
    1073789374U,	// LBZXTLS_32
    67145725U,	// LD
    134264615U,	// LDARX
    134264615U,	// LDARXL
    1073786057U,	// LDAT
    134264643U,	// LDBRX
    1073788342U,	// LDCIX
    469806728U,	// LDU
    503363818U,	// LDUX
    134264085U,	// LDX
    1073788181U,	// LDXTLS
    1073788181U,	// LDXTLS_
    17997U,	// LDgotTprelL
    15663U,	// LDgotTprelL32
    18554U,	// LDtoc
    18336U,	// LDtocBA
    18336U,	// LDtocCPT
    17890U,	// LDtocJTI
    17946U,	// LDtocL
    67145650U,	// LFD
    134264504U,	// LFDEPX
    469806678U,	// LFDU
    503363801U,	// LFDUX
    134264065U,	// LFDX
    134263944U,	// LFIWAX
    134265301U,	// LFIWZX
    67152579U,	// LFS
    469806793U,	// LFSU
    503363878U,	// LFSUX
    134264882U,	// LFSX
    67144326U,	// LHA
    67144326U,	// LHA8
    134264622U,	// LHARX
    134264622U,	// LHARXL
    469806666U,	// LHAU
    469806666U,	// LHAU8
    503363757U,	// LHAUX
    503363757U,	// LHAUX8
    134263927U,	// LHAX
    134263927U,	// LHAX8
    134264658U,	// LHBRX
    134264658U,	// LHBRX8
    134264521U,	// LHEPX
    67156549U,	// LHZ
    67156549U,	// LHZ8
    1073788381U,	// LHZCIX
    469806873U,	// LHZU
    469806873U,	// LHZU8
    503363909U,	// LHZUX
    503363909U,	// LHZUX8
    134265293U,	// LHZX
    134265293U,	// LHZX8
    1073789389U,	// LHZXTLS
    1073789389U,	// LHZXTLS_
    1073789389U,	// LHZXTLS_32
    100701586U,	// LI
    100701586U,	// LI8
    100707151U,	// LIS
    100707151U,	// LIS8
    67154339U,	// LMW
    67151613U,	// LQ
    134264629U,	// LQARX
    134264629U,	// LQARXL
    18031U,	// LQX_PSEUDO
    1073780593U,	// LSWI
    134263967U,	// LVEBX
    134264191U,	// LVEHX
    134265212U,	// LVEWX
    134256825U,	// LVSL
    134261022U,	// LVSR
    134265171U,	// LVX
    134256886U,	// LVXL
    67144558U,	// LWA
    134264636U,	// LWARX
    134264636U,	// LWARXL
    1073786135U,	// LWAT
    503363764U,	// LWAUX
    134263961U,	// LWAX
    134263961U,	// LWAX_32
    67144558U,	// LWA_32
    134264692U,	// LWBRX
    134264692U,	// LWBRX8
    134264536U,	// LWEPX
    67156719U,	// LWZ
    67156719U,	// LWZ8
    1073788389U,	// LWZCIX
    469806879U,	// LWZU
    469806879U,	// LWZU8
    503363916U,	// LWZUX
    503363916U,	// LWZUX8
    134265318U,	// LWZX
    134265318U,	// LWZX8
    1073789414U,	// LWZXTLS
    1073789414U,	// LWZXTLS_
    1073789414U,	// LWZXTLS_32
    18570U,	// LWZtoc
    17964U,	// LWZtocL
    67145969U,	// LXSD
    134264117U,	// LXSDX
    134265269U,	// LXSIBZX
    134265284U,	// LXSIHZX
    134263952U,	// LXSIWAX
    134265309U,	// LXSIWZX
    67151347U,	// LXSSP
    134264576U,	// LXSSPX
    67153783U,	// LXV
    134263891U,	// LXVB16X
    134263857U,	// LXVD2X
    134264865U,	// LXVDSX
    134263910U,	// LXVH8X
    369141492U,	// LXVKQ
    1073780969U,	// LXVL
    1073780852U,	// LXVLL
    67151474U,	// LXVP
    1073780874U,	// LXVPRL
    1073780816U,	// LXVPRLL
    134264593U,	// LXVPX
    134263991U,	// LXVRBX
    134264100U,	// LXVRDX
    134264215U,	// LXVRHX
    1073780899U,	// LXVRL
    1073780835U,	// LXVRLL
    134265246U,	// LXVRWX
    134263874U,	// LXVW4X
    134264927U,	// LXVWSX
    134265182U,	// LXVX
    1073778629U,	// MADDHD
    1073786467U,	// MADDHDU
    1073778689U,	// MADDLD
    1073778689U,	// MADDLD8
    1484769U,	// MBAR
    37530U,	// MCRF
    43720U,	// MCRFS
    1095679U,	// MCRXRX
    536908221U,	// MFBHRBE
    1091606U,	// MFCR
    1091606U,	// MFCR8
    1091883U,	// MFCTR
    1091883U,	// MFCTR8
    43009U,	// MFDCR
    1092284U,	// MFFS
    40080U,	// MFFSCDRN
    570463818U,	// MFFSCDRNI
    1085894U,	// MFFSCE
    40071U,	// MFFSCRN
    268473920U,	// MFFSCRNI
    1087666U,	// MFFSL
    1083095U,	// MFFS_rec
    1091694U,	// MFLR
    1091694U,	// MFLR8
    1091850U,	// MFMSR
    604017312U,	// MFOCRF
    604017312U,	// MFOCRF8
    43143U,	// MFPMR
    43254U,	// MFSPR
    43254U,	// MFSPR8
    637577476U,	// MFSR
    39896U,	// MFSRIN
    36174U,	// MFTB
    17869046U,	// MFTB8
    18917622U,	// MFUDSCR
    37003U,	// MFVRD
    19966198U,	// MFVRSAVE
    19966198U,	// MFVRSAVEv
    47860U,	// MFVRWZ
    1091620U,	// MFVSCR
    37003U,	// MFVSRD
    36888U,	// MFVSRLD
    47860U,	// MFVSRWZ
    1073778844U,	// MODSD
    1073787555U,	// MODSW
    1073778999U,	// MODUD
    1073787765U,	// MODUW
    18534U,	// MSGSYNC
    18548U,	// MSYNC
    37552U,	// MTCRF
    37552U,	// MTCRF8
    1091890U,	// MTCTR
    1091890U,	// MTCTR8
    1091890U,	// MTCTR8loop
    1091890U,	// MTCTRloop
    235251727U,	// MTDCR
    1476728U,	// MTFSB0
    1476736U,	// MTFSB1
    1073779411U,	// MTFSF
    302486884U,	// MTFSFI
    671581102U,	// MTFSFI_rec
    1545572U,	// MTFSFIb
    1073775362U,	// MTFSF_rec
    37587U,	// MTFSFb
    1091700U,	// MTLR
    1091700U,	// MTLR8
    201369873U,	// MTMSR
    201363587U,	// MTMSRD
    529064U,	// MTOCRF
    529064U,	// MTOCRF8
    43150U,	// MTPMR
    43261U,	// MTSPR
    43261U,	// MTSPR8
    567576U,	// MTSR
    39904U,	// MTSRIN
    1081524U,	// MTUDSCR
    37011U,	// MTVRD
    1081589U,	// MTVRSAVE
    1409269U,	// MTVRSAVEv
    35699U,	// MTVRWA
    47869U,	// MTVRWZ
    1091628U,	// MTVSCR
    39212U,	// MTVSRBM
    704681388U,	// MTVSRBMI
    37011U,	// MTVSRD
    1073778575U,	// MTVSRDD
    39284U,	// MTVSRDM
    39390U,	// MTVSRHM
    39557U,	// MTVSRQM
    35699U,	// MTVSRWA
    39678U,	// MTVSRWM
    44072U,	// MTVSRWS
    47869U,	// MTVSRWZ
    1073778637U,	// MULHD
    1073786476U,	// MULHDU
    1073776427U,	// MULHDU_rec
    1073775141U,	// MULHD_rec
    1073787219U,	// MULHW
    1073786602U,	// MULHWU
    1073776480U,	// MULHWU_rec
    1073776536U,	// MULHW_rec
    1073778698U,	// MULLD
    1073781935U,	// MULLDO
    1073775821U,	// MULLDO_rec
    1073775165U,	// MULLD_rec
    1073780118U,	// MULLI
    1073780118U,	// MULLI8
    1073787271U,	// MULLW
    1073782222U,	// MULLWO
    1073775964U,	// MULLWO_rec
    1073776552U,	// MULLW_rec
    18195U,	// MoveGOTtoLR
    18183U,	// MovePCtoLR
    17230U,	// MovePCtoLR8
    1073778762U,	// NAND
    1073778762U,	// NAND8
    1073775179U,	// NAND8_rec
    1073775179U,	// NAND_rec
    18700U,	// NAP
    37718U,	// NEG
    37718U,	// NEG8
    40198U,	// NEG8O
    34095U,	// NEG8O_rec
    33547U,	// NEG8_rec
    40198U,	// NEGO
    34095U,	// NEGO_rec
    33547U,	// NEG_rec
    18709U,	// NOP
    15365U,	// NOP_GT_PWR6
    15377U,	// NOP_GT_PWR7
    1073785008U,	// NOR
    1073785008U,	// NOR8
    1073776214U,	// NOR8_rec
    1073776214U,	// NOR_rec
    1073785001U,	// OR
    1073785001U,	// OR8
    1073776215U,	// OR8_rec
    1073778358U,	// ORC
    1073778358U,	// ORC8
    1073775084U,	// ORC8_rec
    1073775084U,	// ORC_rec
    1073780350U,	// ORI
    1073780350U,	// ORI8
    1073785685U,	// ORIS
    1073785685U,	// ORIS8
    1073776215U,	// OR_rec
    1073779973U,	// PADDI
    1073779973U,	// PADDI8
    738235653U,	// PADDI8pc
    18629U,	// PADDIdtprel
    738235653U,	// PADDIpc
    1073778799U,	// PDEPD
    1073778981U,	// PEXTD
    771799544U,	// PLBZ
    771799544U,	// PLBZ8
    805353976U,	// PLBZ8pc
    805353976U,	// PLBZpc
    771788819U,	// PLD
    805343251U,	// PLDpc
    771788721U,	// PLFD
    805343153U,	// PLFDpc
    771795650U,	// PLFS
    805350082U,	// PLFSpc
    771787397U,	// PLHA
    771787397U,	// PLHA8
    805341829U,	// PLHA8pc
    805341829U,	// PLHApc
    771799620U,	// PLHZ
    771799620U,	// PLHZ8
    805354052U,	// PLHZ8pc
    805354052U,	// PLHZpc
    838899101U,	// PLI
    838899101U,	// PLI8
    771787629U,	// PLWA
    771787629U,	// PLWA8
    805342061U,	// PLWA8pc
    805342061U,	// PLWApc
    771799790U,	// PLWZ
    771799790U,	// PLWZ8
    805354222U,	// PLWZ8pc
    805354222U,	// PLWZpc
    771789040U,	// PLXSD
    805343472U,	// PLXSDpc
    771794418U,	// PLXSSP
    805348850U,	// PLXSSPpc
    771796854U,	// PLXV
    771794545U,	// PLXVP
    805348977U,	// PLXVPpc
    805351286U,	// PLXVpc
    1073776831U,	// PMXVBF16GER2
    1375771624U,	// PMXVBF16GER2NN
    1375773210U,	// PMXVBF16GER2NP
    1375771683U,	// PMXVBF16GER2PN
    1375773269U,	// PMXVBF16GER2PP
    1073776831U,	// PMXVBF16GER2W
    1375771624U,	// PMXVBF16GER2WNN
    1375773210U,	// PMXVBF16GER2WNP
    1375771683U,	// PMXVBF16GER2WPN
    1375773269U,	// PMXVBF16GER2WPP
    1073776845U,	// PMXVF16GER2
    1375771640U,	// PMXVF16GER2NN
    1375773226U,	// PMXVF16GER2NP
    1375771699U,	// PMXVF16GER2PN
    1375773285U,	// PMXVF16GER2PP
    1073776845U,	// PMXVF16GER2W
    1375771640U,	// PMXVF16GER2WNN
    1375773226U,	// PMXVF16GER2WNP
    1375771699U,	// PMXVF16GER2WPN
    1375773285U,	// PMXVF16GER2WPP
    1073784884U,	// PMXVF32GER
    1375771655U,	// PMXVF32GERNN
    1375773241U,	// PMXVF32GERNP
    1375771725U,	// PMXVF32GERPN
    1375773343U,	// PMXVF32GERPP
    1073784884U,	// PMXVF32GERW
    1375771655U,	// PMXVF32GERWNN
    1375773241U,	// PMXVF32GERWNP
    1375771725U,	// PMXVF32GERWPN
    1375773343U,	// PMXVF32GERWPP
    1073784896U,	// PMXVF64GER
    1375771669U,	// PMXVF64GERNN
    1375773255U,	// PMXVF64GERNP
    1375771739U,	// PMXVF64GERPN
    1375773357U,	// PMXVF64GERPP
    1073784896U,	// PMXVF64GERW
    1375771669U,	// PMXVF64GERWNN
    1375773255U,	// PMXVF64GERWNP
    1375771739U,	// PMXVF64GERWPN
    1375773357U,	// PMXVF64GERWPP
    1073776858U,	// PMXVI16GER2
    1375773300U,	// PMXVI16GER2PP
    1073785145U,	// PMXVI16GER2S
    1375773371U,	// PMXVI16GER2SPP
    1073785145U,	// PMXVI16GER2SW
    1375773371U,	// PMXVI16GER2SWPP
    1073776858U,	// PMXVI16GER2W
    1375773300U,	// PMXVI16GER2WPP
    1073776992U,	// PMXVI4GER8
    1375773329U,	// PMXVI4GER8PP
    1073776992U,	// PMXVI4GER8W
    1375773329U,	// PMXVI4GER8WPP
    1073776871U,	// PMXVI8GER4
    1375773315U,	// PMXVI8GER4PP
    1375773387U,	// PMXVI8GER4SPP
    1073776871U,	// PMXVI8GER4W
    1375773315U,	// PMXVI8GER4WPP
    1375773387U,	// PMXVI8GER4WSPP
    36189U,	// POPCNTB
    36189U,	// POPCNTB8
    37131U,	// POPCNTD
    45886U,	// POPCNTW
    18313U,	// PPC32GOT
    18323U,	// PPC32PICGOT
    15812U,	// PREPARE_PROBED_ALLOCA_32
    16233U,	// PREPARE_PROBED_ALLOCA_64
    15860U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    16281U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    15794U,	// PROBED_ALLOCA_32
    16215U,	// PROBED_ALLOCA_64
    15838U,	// PROBED_STACKALLOC_32
    16259U,	// PROBED_STACKALLOC_64
    771788144U,	// PSTB
    771788144U,	// PSTB8
    805342576U,	// PSTB8pc
    805342576U,	// PSTBpc
    771789086U,	// PSTD
    805343518U,	// PSTDpc
    771788727U,	// PSTFD
    805343159U,	// PSTFDpc
    771795663U,	// PSTFS
    805350095U,	// PSTFSpc
    771789898U,	// PSTH
    771789898U,	// PSTH8
    805344330U,	// PSTH8pc
    805344330U,	// PSTHpc
    771797852U,	// PSTW
    771797852U,	// PSTW8
    805352284U,	// PSTW8pc
    805352284U,	// PSTWpc
    771789047U,	// PSTXSD
    805343479U,	// PSTXSDpc
    771794426U,	// PSTXSSP
    805348858U,	// PSTXSSPpc
    771796860U,	// PSTXV
    771794552U,	// PSTXVP
    805348984U,	// PSTXVPpc
    805351292U,	// PSTXVpc
    18056U,	// PseudoEIEIO
    1073780278U,	// QVALIGNI
    1073780278U,	// QVALIGNIb
    1073780278U,	// QVALIGNIs
    1073780411U,	// QVESPLATI
    1073780411U,	// QVESPLATIb
    1073780411U,	// QVESPLATIs
    43343U,	// QVFABS
    43343U,	// QVFABSs
    1073778476U,	// QVFADD
    1073785322U,	// QVFADDS
    1073785322U,	// QVFADDSs
    36820U,	// QVFCFID
    43580U,	// QVFCFIDS
    44660U,	// QVFCFIDU
    43984U,	// QVFCFIDUS
    36820U,	// QVFCFIDb
    1073784493U,	// QVFCMPEQ
    1073784493U,	// QVFCMPEQb
    1073784493U,	// QVFCMPEQbs
    1073786188U,	// QVFCMPGT
    1073786188U,	// QVFCMPGTb
    1073786188U,	// QVFCMPGTbs
    1073786266U,	// QVFCMPLT
    1073786266U,	// QVFCMPLTb
    1073786266U,	// QVFCMPLTbs
    1073781695U,	// QVFCPSGN
    1073781695U,	// QVFCPSGNs
    36839U,	// QVFCTID
    44670U,	// QVFCTIDU
    47822U,	// QVFCTIDUZ
    47641U,	// QVFCTIDZ
    36839U,	// QVFCTIDb
    45411U,	// QVFCTIW
    44786U,	// QVFCTIWU
    47833U,	// QVFCTIWUZ
    47844U,	// QVFCTIWZ
    1073780716U,	// QVFLOGICAL
    1073780716U,	// QVFLOGICALb
    1073780716U,	// QVFLOGICALs
    1073778484U,	// QVFMADD
    1073785331U,	// QVFMADDS
    1073785331U,	// QVFMADDSs
    43130U,	// QVFMR
    43130U,	// QVFMRb
    43130U,	// QVFMRs
    1073778107U,	// QVFMSUB
    1073785301U,	// QVFMSUBS
    1073785301U,	// QVFMSUBSs
    1073780935U,	// QVFMUL
    1073785708U,	// QVFMULS
    1073785708U,	// QVFMULSs
    43360U,	// QVFNABS
    43360U,	// QVFNABSs
    37723U,	// QVFNEG
    37723U,	// QVFNEGs
    1073778493U,	// QVFNMADD
    1073785341U,	// QVFNMADDS
    1073785341U,	// QVFNMADDSs
    1073778116U,	// QVFNMSUB
    1073785311U,	// QVFNMSUBS
    1073785311U,	// QVFNMSUBSs
    1073781440U,	// QVFPERM
    1073781440U,	// QVFPERMs
    37415U,	// QVFRE
    43680U,	// QVFRES
    43680U,	// QVFRESs
    39506U,	// QVFRIM
    39506U,	// QVFRIMs
    39888U,	// QVFRIN
    39888U,	// QVFRINs
    41472U,	// QVFRIP
    41472U,	// QVFRIPs
    47724U,	// QVFRIZ
    47724U,	// QVFRIZs
    42448U,	// QVFRSP
    42448U,	// QVFRSPs
    37430U,	// QVFRSQRTE
    43688U,	// QVFRSQRTES
    43688U,	// QVFRSQRTESs
    1073780773U,	// QVFSEL
    1073780773U,	// QVFSELb
    1073780773U,	// QVFSELbb
    1073780773U,	// QVFSELbs
    1073778099U,	// QVFSUB
    1073785292U,	// QVFSUBS
    1073785292U,	// QVFSUBSs
    1073781684U,	// QVFTSTNAN
    1073781684U,	// QVFTSTNANb
    1073781684U,	// QVFTSTNANbs
    1073778530U,	// QVFXMADD
    1073785381U,	// QVFXMADDS
    1073780960U,	// QVFXMUL
    1073785717U,	// QVFXMULS
    1073778503U,	// QVFXXCPNMADD
    1073785352U,	// QVFXXCPNMADDS
    1073778540U,	// QVFXXMADD
    1073785392U,	// QVFXXMADDS
    1073778517U,	// QVFXXNPMADD
    1073785367U,	// QVFXXNPMADDS
    872453366U,	// QVGPCI
    134265026U,	// QVLFCDUX
    134253527U,	// QVLFCDUXA
    134264027U,	// QVLFCDX
    134253447U,	// QVLFCDXA
    134265103U,	// QVLFCSUX
    134253571U,	// QVLFCSUXA
    134264846U,	// QVLFCSX
    134253487U,	// QVLFCSXA
    134264846U,	// QVLFCSXs
    503363799U,	// QVLFDUX
    134253550U,	// QVLFDUXA
    134264063U,	// QVLFDX
    134253468U,	// QVLFDXA
    134264063U,	// QVLFDXb
    134263942U,	// QVLFIWAX
    134253436U,	// QVLFIWAXA
    134265299U,	// QVLFIWZX
    134253626U,	// QVLFIWZXA
    503363876U,	// QVLFSUX
    134253594U,	// QVLFSUXA
    134264880U,	// QVLFSX
    134253508U,	// QVLFSXA
    134264880U,	// QVLFSXb
    134264880U,	// QVLFSXs
    134264080U,	// QVLPCLDX
    134264897U,	// QVLPCLSX
    21018689U,	// QVLPCLSXint
    134264090U,	// QVLPCRDX
    134264917U,	// QVLPCRSX
    134265036U,	// QVSTFCDUX
    134253538U,	// QVSTFCDUXA
    134256557U,	// QVSTFCDUXI
    134253338U,	// QVSTFCDUXIA
    134264036U,	// QVSTFCDX
    134253457U,	// QVSTFCDXA
    134256515U,	// QVSTFCDXI
    134253292U,	// QVSTFCDXIA
    134265113U,	// QVSTFCSUX
    134253582U,	// QVSTFCSUXA
    134256580U,	// QVSTFCSUXI
    134253363U,	// QVSTFCSUXIA
    134264855U,	// QVSTFCSX
    134253497U,	// QVSTFCSXA
    134256536U,	// QVSTFCSXI
    134253315U,	// QVSTFCSXIA
    134264855U,	// QVSTFCSXs
    503691488U,	// QVSTFDUX
    134253560U,	// QVSTFDUXA
    134256569U,	// QVSTFDUXI
    134253351U,	// QVSTFDUXIA
    134264071U,	// QVSTFDX
    134253477U,	// QVSTFDXA
    134256526U,	// QVSTFDXI
    134253304U,	// QVSTFDXIA
    134264071U,	// QVSTFDXb
    134265227U,	// QVSTFIWX
    134253615U,	// QVSTFIWXA
    503691565U,	// QVSTFSUX
    134253604U,	// QVSTFSUXA
    134256592U,	// QVSTFSUXI
    134253376U,	// QVSTFSUXIA
    503691565U,	// QVSTFSUXs
    134264888U,	// QVSTFSX
    134253517U,	// QVSTFSXA
    134256547U,	// QVSTFSXI
    134253327U,	// QVSTFSXIA
    134264888U,	// QVSTFSXs
    17468U,	// RESTORE_ACC
    18092U,	// RESTORE_CR
    18247U,	// RESTORE_CRBIT
    17761U,	// RESTORE_QUADWORD
    17416U,	// RESTORE_UACC
    17442U,	// RESTORE_WACC
    18605U,	// RFCI
    18616U,	// RFDI
    592985U,	// RFEBB
    18621U,	// RFI
    18579U,	// RFID
    18610U,	// RFMCI
    1073780750U,	// RLDCL
    1073775655U,	// RLDCL_rec
    1073784840U,	// RLDCR
    1073776181U,	// RLDCR_rec
    1073778293U,	// RLDIC
    1073780757U,	// RLDICL
    1073780757U,	// RLDICL_32
    1073780757U,	// RLDICL_32_64
    1073775663U,	// RLDICL_32_rec
    1073775663U,	// RLDICL_rec
    1073784860U,	// RLDICR
    1073784860U,	// RLDICR_32
    1073776189U,	// RLDICR_rec
    1073775053U,	// RLDIC_rec
    1375770046U,	// RLDIMI
    1375765442U,	// RLDIMI_rec
    1375770054U,	// RLWIMI
    1375770054U,	// RLWIMI8
    1375765451U,	// RLWIMI8_rec
    1375765451U,	// RLWIMI_rec
    1073781346U,	// RLWINM
    1073781346U,	// RLWINM8
    1073775714U,	// RLWINM8_rec
    1073775714U,	// RLWINM_rec
    1073781363U,	// RLWNM
    1073781363U,	// RLWNM8
    1073775723U,	// RLWNM8_rec
    1073775723U,	// RLWNM_rec
    17408U,	// ReadTB
    1085129U,	// SC
    16498U,	// SELECT_CC_F16
    16420U,	// SELECT_CC_F4
    16959U,	// SELECT_CC_F8
    16445U,	// SELECT_CC_I4
    17004U,	// SELECT_CC_I8
    17502U,	// SELECT_CC_QBRC
    17531U,	// SELECT_CC_QFRC
    17620U,	// SELECT_CC_QSRC
    17831U,	// SELECT_CC_SPE
    16391U,	// SELECT_CC_SPE4
    17591U,	// SELECT_CC_VRRC
    17560U,	// SELECT_CC_VSFRC
    17680U,	// SELECT_CC_VSRC
    17649U,	// SELECT_CC_VSSRC
    16513U,	// SELECT_F16
    16434U,	// SELECT_F4
    16973U,	// SELECT_F8
    16459U,	// SELECT_I4
    17178U,	// SELECT_I8
    17518U,	// SELECT_QBRC
    17547U,	// SELECT_QFRC
    17636U,	// SELECT_QSRC
    17846U,	// SELECT_SPE
    16407U,	// SELECT_SPE4
    17607U,	// SELECT_VRRC
    17577U,	// SELECT_VSFRC
    17696U,	// SELECT_VSRC
    17666U,	// SELECT_VSSRC
    36168U,	// SETB
    36168U,	// SETB8
    36392U,	// SETBC
    36392U,	// SETBC8
    43001U,	// SETBCR
    43001U,	// SETBCR8
    18023U,	// SETFLM
    36384U,	// SETNBC
    36384U,	// SETNBC8
    42992U,	// SETNBCR
    42992U,	// SETNBCR8
    17737U,	// SETRND
    18596U,	// SETRNDi
    33448U,	// SLBFEE_rec
    18490U,	// SLBIA
    1085955U,	// SLBIE
    37707U,	// SLBIEG
    37339U,	// SLBMFEE
    44837U,	// SLBMFEV
    37422U,	// SLBMTE
    18518U,	// SLBSYNC
    1073778728U,	// SLD
    1073775173U,	// SLD_rec
    1073787294U,	// SLW
    1073787294U,	// SLW8
    1073776560U,	// SLW8_rec
    1073776560U,	// SLW_rec
    67156719U,	// SPELWZ
    134265318U,	// SPELWZX
    67154781U,	// SPESTW
    134265263U,	// SPESTWX
    17481U,	// SPILL_ACC
    18104U,	// SPILL_CR
    18262U,	// SPILL_CRBIT
    17779U,	// SPILL_QUADWORD
    17430U,	// SPILL_UACC
    17456U,	// SPILL_WACC
    17795U,	// SPLIT_QUADWORD
    1073778437U,	// SRAD
    1073779966U,	// SRADI
    1073779966U,	// SRADI_32
    1073775463U,	// SRADI_rec
    1073775101U,	// SRAD_rec
    1073787104U,	// SRAW
    1073780488U,	// SRAWI
    1073775572U,	// SRAWI_rec
    1073776519U,	// SRAW_rec
    1073778822U,	// SRD
    1073775193U,	// SRD_rec
    1073787549U,	// SRW
    1073787549U,	// SRW8
    1073776566U,	// SRW8_rec
    1073776566U,	// SRW_rec
    67145073U,	// STB
    67145073U,	// STB8
    1073788334U,	// STBCIX
    134252553U,	// STBCX
    134264496U,	// STBEPX
    470134352U,	// STBU
    470134352U,	// STBU8
    503691451U,	// STBUX
    503691451U,	// STBUX8
    134264008U,	// STBX
    134264008U,	// STBX8
    1073788104U,	// STBXTLS
    1073788104U,	// STBXTLS_
    1073788104U,	// STBXTLS_32
    67146015U,	// STD
    1073786063U,	// STDAT
    134264650U,	// STDBRX
    1073788349U,	// STDCIX
    134252561U,	// STDCX
    470134413U,	// STDU
    503691504U,	// STDUX
    134264132U,	// STDX
    1073788228U,	// STDXTLS
    1073788228U,	// STDXTLS_
    67145656U,	// STFD
    134264512U,	// STFDEPX
    470134364U,	// STFDU
    503691490U,	// STFDUX
    134264073U,	// STFDX
    134265229U,	// STFIWX
    67152592U,	// STFS
    470134479U,	// STFSU
    503691567U,	// STFSUX
    134264890U,	// STFSX
    67146827U,	// STH
    67146827U,	// STH8
    134264665U,	// STHBRX
    1073788357U,	// STHCIX
    134252569U,	// STHCX
    134264528U,	// STHEPX
    470134442U,	// STHU
    470134442U,	// STHU8
    503691518U,	// STHUX
    503691518U,	// STHUX8
    134264232U,	// STHX
    134264232U,	// STHX8
    1073788328U,	// STHXTLS
    1073788328U,	// STHXTLS_
    1073788328U,	// STHXTLS_32
    67154344U,	// STMW
    18748U,	// STOP
    67151688U,	// STQ
    134252577U,	// STQCX
    18043U,	// STQX_PSEUDO
    1073780599U,	// STSWI
    134263974U,	// STVEBX
    134264198U,	// STVEHX
    134265219U,	// STVEWX
    134265176U,	// STVX
    134256892U,	// STVXL
    67154781U,	// STW
    67154781U,	// STW8
    1073786141U,	// STWAT
    134264699U,	// STWBRX
    1073788365U,	// STWCIX
    134252585U,	// STWCX
    134264543U,	// STWEPX
    470134532U,	// STWU
    470134532U,	// STWU8
    503691575U,	// STWUX
    503691575U,	// STWUX8
    134265263U,	// STWX
    134265263U,	// STWX8
    1073789359U,	// STWXTLS
    1073789359U,	// STWXTLS_
    1073789359U,	// STWXTLS_32
    67145976U,	// STXSD
    134264124U,	// STXSDX
    134263982U,	// STXSIBX
    134263982U,	// STXSIBXv
    134264206U,	// STXSIHX
    134264206U,	// STXSIHXv
    134265237U,	// STXSIWX
    67151355U,	// STXSSP
    134264584U,	// STXSSPX
    67153789U,	// STXV
    134263900U,	// STXVB16X
    134263865U,	// STXVD2X
    134263918U,	// STXVH8X
    1073780975U,	// STXVL
    1073780859U,	// STXVLL
    67151481U,	// STXVP
    1073780882U,	// STXVPRL
    1073780825U,	// STXVPRLL
    134264600U,	// STXVPX
    134263999U,	// STXVRBX
    134264108U,	// STXVRDX
    134264223U,	// STXVRHX
    1073780906U,	// STXVRL
    1073780843U,	// STXVRLL
    134265254U,	// STXVRWX
    134263882U,	// STXVW4X
    134265188U,	// STXVX
    1073779309U,	// SUBF
    1073779309U,	// SUBF8
    1073782015U,	// SUBF8O
    1073775911U,	// SUBF8O_rec
    1073775355U,	// SUBF8_rec
    1073778272U,	// SUBFC
    1073778272U,	// SUBFC8
    1073781921U,	// SUBFC8O
    1073775805U,	// SUBFC8O_rec
    1073775029U,	// SUBFC8_rec
    1073781921U,	// SUBFCO
    1073775805U,	// SUBFCO_rec
    1073775029U,	// SUBFC_rec
    1073779179U,	// SUBFE
    1073779179U,	// SUBFE8
    1073781965U,	// SUBFE8O
    1073775855U,	// SUBFE8O_rec
    1073775281U,	// SUBFE8_rec
    1073781965U,	// SUBFEO
    1073775855U,	// SUBFEO_rec
    1073775281U,	// SUBFE_rec
    1073778300U,	// SUBFIC
    1073778300U,	// SUBFIC8
    37400U,	// SUBFME
    37400U,	// SUBFME8
    40157U,	// SUBFME8O
    34049U,	// SUBFME8O_rec
    33473U,	// SUBFME8_rec
    40157U,	// SUBFMEO
    34049U,	// SUBFMEO_rec
    33473U,	// SUBFME_rec
    1073782015U,	// SUBFO
    1073775911U,	// SUBFO_rec
    906013677U,	// SUBFUS
    906004233U,	// SUBFUS_rec
    37471U,	// SUBFZE
    37471U,	// SUBFZE8
    40182U,	// SUBFZE8O
    34077U,	// SUBFZE8O_rec
    33522U,	// SUBFZE8_rec
    40182U,	// SUBFZEO
    34077U,	// SUBFZEO_rec
    33522U,	// SUBFZE_rec
    1073775355U,	// SUBF_rec
    626349U,	// SYNC
    1083162U,	// TABORT
    1074168234U,	// TABORTDC
    1074168655U,	// TABORTDCI
    1074168306U,	// TABORTWC
    1074168667U,	// TABORTWCI
    1182806U,	// TAILB
    1182806U,	// TAILB8
    1215014U,	// TAILBA
    1215014U,	// TAILBA8
    18770U,	// TAILBCTR
    18770U,	// TAILBCTR8
    591004U,	// TBEGIN
    18220U,	// TBEGIN_RET
    1087451U,	// TCHECK
    18208U,	// TCHECK_RET
    2263453U,	// TCRETURNai
    2263350U,	// TCRETURNai8
    2232043U,	// TCRETURNdi
    2230596U,	// TCRETURNdi8
    2140116U,	// TCRETURNri
    2132306U,	// TCRETURNri8
    1074172166U,	// TD
    1074173271U,	// TDI
    590418U,	// TEND
    18496U,	// TLBIA
    252023306U,	// TLBIE
    1087517U,	// TLBIEL
    46205U,	// TLBIVAX
    1085434U,	// TLBLD
    1086863U,	// TLBLI
    18584U,	// TLBRE
    1073779232U,	// TLBRE2
    47111U,	// TLBSX
    1073788935U,	// TLBSX2
    1073776689U,	// TLBSX2D
    18526U,	// TLBSYNC
    18590U,	// TLBWE
    1073779265U,	// TLBWE2
    18446U,	// TLSGDAIX
    17299U,	// TLSGDAIX8
    18704U,	// TRAP
    15355U,	// TRECHKPT
    1082448U,	// TRECLAIM
    591466U,	// TSR
    1074180912U,	// TW
    1074173822U,	// TWI
    18066U,	// UNENCODED_NOP
    18081U,	// UpdateGBR
    1073778038U,	// VABSDUB
    1073779792U,	// VABSDUH
    1073787772U,	// VABSDUW
    1073784683U,	// VADDCUQ
    1073787755U,	// VADDCUW
    1073784714U,	// VADDECUQ
    1073781430U,	// VADDEUQM
    1073783151U,	// VADDFP
    1073785255U,	// VADDSBS
    1073785600U,	// VADDSHS
    1073785924U,	// VADDSWS
    1073781066U,	// VADDUBM
    1073785283U,	// VADDUBS
    1073781138U,	// VADDUDM
    1073781265U,	// VADDUHM
    1073785628U,	// VADDUHS
    1073781411U,	// VADDUQM
    1073781532U,	// VADDUWM
    1073785951U,	// VADDUWS
    1073778792U,	// VAND
    1073778265U,	// VANDC
    1073777912U,	// VAVGSB
    1073779678U,	// VAVGSH
    1073787580U,	// VAVGSW
    1073778056U,	// VAVGUB
    1073779810U,	// VAVGUH
    1073787799U,	// VAVGUW
    1073778733U,	// VBPERMD
    1073784583U,	// VBPERMQ
    1375778857U,	// VCFSX
    1073788969U,	// VCFSX_0
    1073778592U,	// VCFUGED
    1375779063U,	// VCFUX
    1073789175U,	// VCFUX_0
    1073784918U,	// VCIPHER
    1073786364U,	// VCIPHERLAST
    1073777833U,	// VCLRLB
    1073777889U,	// VCLRRB
    36370U,	// VCLZB
    37279U,	// VCLZD
    1073781169U,	// VCLZDM
    38072U,	// VCLZH
    35954U,	// VCLZLSBB
    46097U,	// VCLZW
    1073783115U,	// VCMPBFP
    1073776017U,	// VCMPBFP_rec
    1073783214U,	// VCMPEQFP
    1073776038U,	// VCMPEQFP_rec
    1073778081U,	// VCMPEQUB
    1073774938U,	// VCMPEQUB_rec
    1073779050U,	// VCMPEQUD
    1073775210U,	// VCMPEQUD_rec
    1073779835U,	// VCMPEQUH
    1073775406U,	// VCMPEQUH_rec
    1073784760U,	// VCMPEQUQ
    1073776149U,	// VCMPEQUQ_rec
    1073787833U,	// VCMPEQUW
    1073776591U,	// VCMPEQUW_rec
    1073783168U,	// VCMPGEFP
    1073776027U,	// VCMPGEFP_rec
    1073783224U,	// VCMPGTFP
    1073776049U,	// VCMPGTFP_rec
    1073777965U,	// VCMPGTSB
    1073774919U,	// VCMPGTSB_rec
    1073778902U,	// VCMPGTSD
    1073775199U,	// VCMPGTSD_rec
    1073779731U,	// VCMPGTSH
    1073775387U,	// VCMPGTSH_rec
    1073784630U,	// VCMPGTSQ
    1073776138U,	// VCMPGTSQ_rec
    1073787659U,	// VCMPGTSW
    1073776572U,	// VCMPGTSW_rec
    1073778155U,	// VCMPGTUB
    1073774982U,	// VCMPGTUB_rec
    1073779060U,	// VCMPGTUD
    1073775221U,	// VCMPGTUD_rec
    1073779857U,	// VCMPGTUH
    1073775417U,	// VCMPGTUH_rec
    1073784770U,	// VCMPGTUQ
    1073776160U,	// VCMPGTUQ_rec
    1073787868U,	// VCMPGTUW
    1073776602U,	// VCMPGTUW_rec
    1073777798U,	// VCMPNEB
    1073774909U,	// VCMPNEB_rec
    1073779610U,	// VCMPNEH
    1073775377U,	// VCMPNEH_rec
    1073787167U,	// VCMPNEW
    1073776526U,	// VCMPNEW_rec
    1073778184U,	// VCMPNEZB
    1073774993U,	// VCMPNEZB_rec
    1073779886U,	// VCMPNEZH
    1073775428U,	// VCMPNEZH_rec
    1073787911U,	// VCMPNEZW
    1073776620U,	// VCMPNEZW_rec
    1073784622U,	// VCMPSQ
    1073784752U,	// VCMPUQ
    1073777760U,	// VCNTMBB
    1073778450U,	// VCNTMBD
    1073779586U,	// VCNTMBH
    1073787110U,	// VCNTMBW
    1375775929U,	// VCTSXS
    1073786041U,	// VCTSXS_0
    1375775937U,	// VCTUXS
    1073786049U,	// VCTUXS_0
    36377U,	// VCTZB
    37294U,	// VCTZD
    1073781186U,	// VCTZDM
    38079U,	// VCTZH
    35964U,	// VCTZLSBB
    46114U,	// VCTZW
    1073778860U,	// VDIVESD
    1073784613U,	// VDIVESQ
    1073787571U,	// VDIVESW
    1073779015U,	// VDIVEUD
    1073784743U,	// VDIVEUQ
    1073787790U,	// VDIVEUW
    1073778912U,	// VDIVSD
    1073784640U,	// VDIVSQ
    1073787676U,	// VDIVSW
    1073779070U,	// VDIVUD
    1073784780U,	// VDIVUQ
    1073787878U,	// VDIVUW
    1073786730U,	// VEQV
    39191U,	// VEXPANDBM
    39273U,	// VEXPANDDM
    39379U,	// VEXPANDHM
    39546U,	// VEXPANDQM
    39667U,	// VEXPANDWM
    41361U,	// VEXPTEFP
    1073788475U,	// VEXTDDVLX
    1073788853U,	// VEXTDDVRX
    1073788463U,	// VEXTDUBVLX
    1073788841U,	// VEXTDUBVRX
    1073788496U,	// VEXTDUHVLX
    1073788874U,	// VEXTDUHVRX
    1073788518U,	// VEXTDUWVLX
    1073788896U,	// VEXTDUWVRX
    39221U,	// VEXTRACTBM
    1375768831U,	// VEXTRACTD
    39293U,	// VEXTRACTDM
    39409U,	// VEXTRACTHM
    39566U,	// VEXTRACTQM
    1375768031U,	// VEXTRACTUB
    1375769733U,	// VEXTRACTUH
    1375777731U,	// VEXTRACTUW
    39687U,	// VEXTRACTWM
    36557U,	// VEXTSB2D
    36557U,	// VEXTSB2Ds
    44931U,	// VEXTSB2W
    44931U,	// VEXTSB2Ws
    42633U,	// VEXTSD2Q
    36567U,	// VEXTSH2D
    36567U,	// VEXTSH2Ds
    44941U,	// VEXTSH2W
    44941U,	// VEXTSH2Ws
    36577U,	// VEXTSW2D
    36577U,	// VEXTSW2Ds
    1073788415U,	// VEXTUBLX
    1073788778U,	// VEXTUBRX
    1073788443U,	// VEXTUHLX
    1073788821U,	// VEXTUHRX
    1073788539U,	// VEXTUWLX
    1073788917U,	// VEXTUWRX
    36619U,	// VGBBD
    1073777862U,	// VGNB
    1375778294U,	// VINSBLX
    1375778657U,	// VINSBRX
    1375778341U,	// VINSBVLX
    1375778719U,	// VINSBVRX
    939561158U,	// VINSD
    1375778313U,	// VINSDLX
    1375778691U,	// VINSDRX
    939560294U,	// VINSERTB
    1375768852U,	// VINSERTD
    939562048U,	// VINSERTH
    1375777607U,	// VINSERTW
    1375778322U,	// VINSHLX
    1375778700U,	// VINSHRX
    1375778374U,	// VINSHVLX
    1375778752U,	// VINSHVRX
    939569915U,	// VINSW
    1375778418U,	// VINSWLX
    1375778796U,	// VINSWRX
    1375778396U,	// VINSWVLX
    1375778774U,	// VINSWVRX
    41335U,	// VLOGEFP
    1073783142U,	// VMADDFP
    1073783234U,	// VMAXFP
    1073777984U,	// VMAXSB
    1073778920U,	// VMAXSD
    1073779750U,	// VMAXSH
    1073787684U,	// VMAXSW
    1073778165U,	// VMAXUB
    1073779078U,	// VMAXUD
    1073779867U,	// VMAXUH
    1073787886U,	// VMAXUW
    1073785577U,	// VMHADDSHS
    1073785588U,	// VMHRADDSHS
    1073783206U,	// VMINFP
    1073777948U,	// VMINSB
    1073778878U,	// VMINSD
    1073779714U,	// VMINSH
    1073787635U,	// VMINSW
    1073778064U,	// VMINUB
    1073779033U,	// VMINUD
    1073779818U,	// VMINUH
    1073787816U,	// VMINUW
    1073781254U,	// VMLADDUHM
    1073778843U,	// VMODSD
    1073784605U,	// VMODSQ
    1073787554U,	// VMODSW
    1073778998U,	// VMODUD
    1073784724U,	// VMODUQ
    1073787764U,	// VMODUW
    1073787159U,	// VMRGEW
    1073777807U,	// VMRGHB
    1073779619U,	// VMRGHH
    1073787202U,	// VMRGHW
    1073777825U,	// VMRGLB
    1073779627U,	// VMRGLH
    1073787254U,	// VMRGLW
    1073787527U,	// VMRGOW
    1073778988U,	// VMSUMCUD
    1073781026U,	// VMSUMMBM
    1073781223U,	// VMSUMSHM
    1073785609U,	// VMSUMSHS
    1073781075U,	// VMSUMUBM
    1073781147U,	// VMSUMUDM
    1073781274U,	// VMSUMUHM
    1073785637U,	// VMSUMUHS
    42839U,	// VMUL10CUQ
    1073784692U,	// VMUL10ECUQ
    1073784732U,	// VMUL10EUQ
    42829U,	// VMUL10UQ
    1073777903U,	// VMULESB
    1073778851U,	// VMULESD
    1073779669U,	// VMULESH
    1073787562U,	// VMULESW
    1073778047U,	// VMULEUB
    1073779006U,	// VMULEUD
    1073779801U,	// VMULEUH
    1073787781U,	// VMULEUW
    1073778869U,	// VMULHSD
    1073787597U,	// VMULHSW
    1073779024U,	// VMULHUD
    1073787807U,	// VMULHUW
    1073778697U,	// VMULLD
    1073777956U,	// VMULOSB
    1073778893U,	// VMULOSD
    1073779722U,	// VMULOSH
    1073787650U,	// VMULOSW
    1073778072U,	// VMULOUB
    1073779041U,	// VMULOUD
    1073779826U,	// VMULOUH
    1073787824U,	// VMULOUW
    1073781541U,	// VMULUWM
    1073778777U,	// VNAND
    1073784908U,	// VNCIPHER
    1073786350U,	// VNCIPHERLAST
    36798U,	// VNEGD
    45371U,	// VNEGW
    1073783124U,	// VNMSUBFP
    1073785021U,	// VNOR
    1073785034U,	// VOR
    1073778371U,	// VORC
    1073778798U,	// VPDEPD
    1073781449U,	// VPERM
    1073784981U,	// VPERMR
    1073785054U,	// VPERMXOR
    1073778980U,	// VPEXTD
    1073788656U,	// VPKPX
    1073785753U,	// VPKSDSS
    1073785819U,	// VPKSDUS
    1073785762U,	// VPKSHSS
    1073785845U,	// VPKSHUS
    1073785771U,	// VPKSWSS
    1073785863U,	// VPKSWUS
    1073781464U,	// VPKUDUM
    1073785828U,	// VPKUDUS
    1073781473U,	// VPKUHUM
    1073785854U,	// VPKUHUS
    1073781482U,	// VPKUWUM
    1073785872U,	// VPKUWUS
    1073777853U,	// VPMSUMB
    1073778742U,	// VPMSUMD
    1073779647U,	// VPMSUMH
    1073787310U,	// VPMSUMW
    36188U,	// VPOPCNTB
    37130U,	// VPOPCNTD
    37942U,	// VPOPCNTH
    45885U,	// VPOPCNTW
    36635U,	// VPRTYBD
    42650U,	// VPRTYBQ
    45295U,	// VPRTYBW
    41354U,	// VREFP
    39472U,	// VRFIM
    39881U,	// VRFIN
    41438U,	// VRFIP
    47690U,	// VRFIZ
    1073777841U,	// VRLB
    1073778721U,	// VRLD
    1073780150U,	// VRLDMI
    1073781338U,	// VRLDNM
    1073779635U,	// VRLH
    1073784571U,	// VRLQ
    1073780174U,	// VRLQMI
    1073781354U,	// VRLQNM
    1073787286U,	// VRLW
    1073780270U,	// VRLWMI
    1073781362U,	// VRLWNM
    41371U,	// VRSQRTEFP
    46734U,	// VSBOX
    1073780787U,	// VSEL
    1073778424U,	// VSHASIGMAD
    1073787091U,	// VSHASIGMAW
    1073780922U,	// VSL
    1073777847U,	// VSLB
    1073778727U,	// VSLD
    1073779922U,	// VSLDBI
    1073780309U,	// VSLDOI
    1073779641U,	// VSLH
    1073782061U,	// VSLO
    1073784577U,	// VSLQ
    1073786708U,	// VSLV
    1073787293U,	// VSLW
    1375767892U,	// VSPLTB
    1375767892U,	// VSPLTBs
    1375769646U,	// VSPLTH
    1375769646U,	// VSPLTHs
    335580425U,	// VSPLTISB
    335582191U,	// VSPLTISH
    335590102U,	// VSPLTISW
    1375777580U,	// VSPLTW
    1073785119U,	// VSR
    1073777746U,	// VSRAB
    1073778436U,	// VSRAD
    1073779579U,	// VSRAH
    1073784467U,	// VSRAQ
    1073787103U,	// VSRAW
    1073777897U,	// VSRB
    1073778829U,	// VSRD
    1073779930U,	// VSRDBI
    1073779663U,	// VSRH
    1073782182U,	// VSRO
    1073784599U,	// VSRQ
    1073786736U,	// VSRV
    1073787548U,	// VSRW
    38912U,	// VSTRIBL
    33821U,	// VSTRIBL_rec
    42983U,	// VSTRIBR
    34347U,	// VSTRIBR_rec
    38983U,	// VSTRIHL
    33855U,	// VSTRIHL_rec
    43103U,	// VSTRIHR
    34374U,	// VSTRIHR_rec
    1073784674U,	// VSUBCUQ
    1073787746U,	// VSUBCUW
    1073784704U,	// VSUBECUQ
    1073781420U,	// VSUBEUQM
    1073783134U,	// VSUBFP
    1073785246U,	// VSUBSBS
    1073785568U,	// VSUBSHS
    1073785915U,	// VSUBSWS
    1073781057U,	// VSUBUBM
    1073785274U,	// VSUBUBS
    1073781129U,	// VSUBUDM
    1073781245U,	// VSUBUHM
    1073785619U,	// VSUBUHS
    1073781402U,	// VSUBUQM
    1073781523U,	// VSUBUWM
    1073785942U,	// VSUBUWS
    1073785905U,	// VSUM2SWS
    1073785236U,	// VSUM4SBS
    1073785558U,	// VSUM4SHS
    1073785264U,	// VSUM4UBS
    1073785933U,	// VSUMSWS
    46823U,	// VUPKHPX
    36096U,	// VUPKHSB
    37862U,	// VUPKHSH
    45764U,	// VUPKHSW
    46839U,	// VUPKLPX
    36115U,	// VUPKLSB
    37881U,	// VUPKLSH
    45792U,	// VUPKLSW
    1073785072U,	// VXOR
    1308666096U,	// V_SET0
    1308666096U,	// V_SET0B
    1308666096U,	// V_SET0H
    22065878U,	// V_SETALLONES
    22065878U,	// V_SETALLONESB
    22065878U,	// V_SETALLONESH
    634250U,	// WAIT
    1085924U,	// WRTEE
    1086812U,	// WRTEEI
    1073785042U,	// XOR
    1073785042U,	// XOR8
    1073776220U,	// XOR8_rec
    1073780349U,	// XORI
    1073780349U,	// XORI8
    1073785684U,	// XORIS
    1073785684U,	// XORIS8
    1073776220U,	// XOR_rec
    41061U,	// XSABSDP
    41944U,	// XSABSQP
    1073782398U,	// XSADDDP
    1073783596U,	// XSADDQP
    1073782141U,	// XSADDQPO
    1073783949U,	// XSADDSP
    1073782843U,	// XSCMPEQDP
    1073783727U,	// XSCMPEQQP
    1073782811U,	// XSCMPEXPDP
    1073783705U,	// XSCMPEXPQP
    1073782460U,	// XSCMPGEDP
    1073783625U,	// XSCMPGEQP
    1073782903U,	// XSCMPGTDP
    1073783777U,	// XSCMPGTQP
    1073782741U,	// XSCMPODP
    1073783675U,	// XSCMPOQP
    1073782967U,	// XSCMPUDP
    1073783798U,	// XSCMPUQP
    1073782701U,	// XSCPSGNDP
    1073783664U,	// XSCPSGNQP
    41418U,	// XSCVDPHP
    41861U,	// XSCVDPQP
    42387U,	// XSCVDPSP
    40054U,	// XSCVDPSPN
    43608U,	// XSCVDPSXDS
    43608U,	// XSCVDPSXDSs
    44145U,	// XSCVDPSXWS
    44145U,	// XSCVDPSXWSs
    43644U,	// XSCVDPUXDS
    43644U,	// XSCVDPUXDSs
    44181U,	// XSCVDPUXWS
    44181U,	// XSCVDPUXWSs
    40927U,	// XSCVHPDP
    40937U,	// XSCVQPDP
    40243U,	// XSCVQPDPO
    47662U,	// XSCVQPSDZ
    47789U,	// XSCVQPSQZ
    47878U,	// XSCVQPSWZ
    47673U,	// XSCVQPUDZ
    47800U,	// XSCVQPUQZ
    47889U,	// XSCVQPUWZ
    41781U,	// XSCVSDQP
    40947U,	// XSCVSPDP
    40002U,	// XSCVSPDPN
    41914U,	// XSCVSQQP
    40592U,	// XSCVSXDDP
    42143U,	// XSCVSXDSP
    41791U,	// XSCVUDQP
    41924U,	// XSCVUQQP
    40614U,	// XSCVUXDDP
    42165U,	// XSCVUXDSP
    1073782977U,	// XSDIVDP
    1073783808U,	// XSDIVQP
    1073782172U,	// XSDIVQPO
    1073784365U,	// XSDIVSP
    1073782791U,	// XSIEXPDP
    1073783695U,	// XSIEXPQP
    1375772204U,	// XSMADDADP
    1375773775U,	// XSMADDASP
    1375772567U,	// XSMADDMDP
    1375774057U,	// XSMADDMSP
    1375773474U,	// XSMADDQP
    1375772018U,	// XSMADDQPO
    1073782388U,	// XSMAXCDP
    1073783565U,	// XSMAXCQP
    1073783037U,	// XSMAXDP
    1073782581U,	// XSMAXJDP
    1073782378U,	// XSMINCDP
    1073783555U,	// XSMINCQP
    1073782723U,	// XSMINDP
    1073782571U,	// XSMINJDP
    1375772158U,	// XSMSUBADP
    1375773729U,	// XSMSUBASP
    1375772521U,	// XSMSUBMDP
    1375774011U,	// XSMSUBMSP
    1375773413U,	// XSMSUBQP
    1375771985U,	// XSMSUBQPO
    1073782591U,	// XSMULDP
    1073783655U,	// XSMULQP
    1073782151U,	// XSMULQPO
    1073784081U,	// XSMULSP
    41041U,	// XSNABSDP
    41041U,	// XSNABSDPs
    41934U,	// XSNABSQP
    40698U,	// XSNEGDP
    41812U,	// XSNEGQP
    1375772180U,	// XSNMADDADP
    1375773751U,	// XSNMADDASP
    1375772543U,	// XSNMADDMDP
    1375774033U,	// XSNMADDMSP
    1375773463U,	// XSNMADDQP
    1375772006U,	// XSNMADDQPO
    1375772134U,	// XSNMSUBADP
    1375773705U,	// XSNMSUBASP
    1375772497U,	// XSNMSUBMDP
    1375773987U,	// XSNMSUBMSP
    1375773402U,	// XSNMSUBQP
    1375771973U,	// XSNMSUBQPO
    38493U,	// XSRDPI
    36484U,	// XSRDPIC
    39479U,	// XSRDPIM
    41445U,	// XSRDPIP
    47697U,	// XSRDPIZ
    40658U,	// XSREDP
    42198U,	// XSRESP
    661101U,	// XSRQPI
    669165U,	// XSRQPIX
    665216U,	// XSRQPXP
    42456U,	// XSRSP
    40674U,	// XSRSQRTEDP
    42214U,	// XSRSQRTESP
    41101U,	// XSSQRTDP
    41964U,	// XSSQRTQP
    40337U,	// XSSQRTQPO
    42510U,	// XSSQRTSP
    1073782338U,	// XSSUBDP
    1073783535U,	// XSSUBQP
    1073782108U,	// XSSUBQPO
    1073783909U,	// XSSUBSP
    1073782986U,	// XSTDIVDP
    41111U,	// XSTSQRTDP
    1375772244U,	// XSTSTDCDP
    1375773432U,	// XSTSTDCQP
    1375773815U,	// XSTSTDCSP
    40999U,	// XSXEXPDP
    41893U,	// XSXEXPQP
    40716U,	// XSXSIGDP
    41821U,	// XSXSIGQP
    41070U,	// XVABSDP
    42473U,	// XVABSSP
    1073782407U,	// XVADDDP
    1073783958U,	// XVADDSP
    1073776833U,	// XVBF16GER2
    1375771626U,	// XVBF16GER2NN
    1375773212U,	// XVBF16GER2NP
    1375771685U,	// XVBF16GER2PN
    1375773271U,	// XVBF16GER2PP
    1073776833U,	// XVBF16GER2W
    1375771626U,	// XVBF16GER2WNN
    1375773212U,	// XVBF16GER2WNP
    1375771685U,	// XVBF16GER2WPN
    1375773271U,	// XVBF16GER2WPP
    1073782854U,	// XVCMPEQDP
    1073775993U,	// XVCMPEQDP_rec
    1073784261U,	// XVCMPEQSP
    1073776079U,	// XVCMPEQSP_rec
    1073782471U,	// XVCMPGEDP
    1073775981U,	// XVCMPGEDP_rec
    1073784011U,	// XVCMPGESP
    1073776067U,	// XVCMPGESP_rec
    1073782914U,	// XVCMPGTDP
    1073776005U,	// XVCMPGTDP_rec
    1073784323U,	// XVCMPGTSP
    1073776098U,	// XVCMPGTSP_rec
    1073782712U,	// XVCPSGNDP
    1073784191U,	// XVCPSGNSP
    40041U,	// XVCVBF16SPN
    42397U,	// XVCVDPSP
    43620U,	// XVCVDPSXDS
    44157U,	// XVCVDPSXWS
    43656U,	// XVCVDPUXDS
    44193U,	// XVCVDPUXWS
    42407U,	// XVCVHPSP
    35081U,	// XVCVSPBF16
    40957U,	// XVCVSPDP
    41428U,	// XVCVSPHP
    43632U,	// XVCVSPSXDS
    44169U,	// XVCVSPSXWS
    43668U,	// XVCVSPUXDS
    44205U,	// XVCVSPUXWS
    40603U,	// XVCVSXDDP
    42154U,	// XVCVSXDSP
    41191U,	// XVCVSXWDP
    42569U,	// XVCVSXWSP
    40625U,	// XVCVUXDDP
    42176U,	// XVCVUXDSP
    41202U,	// XVCVUXWDP
    42580U,	// XVCVUXWSP
    1073783006U,	// XVDIVDP
    1073784384U,	// XVDIVSP
    1073776847U,	// XVF16GER2
    1375771642U,	// XVF16GER2NN
    1375773228U,	// XVF16GER2NP
    1375771701U,	// XVF16GER2PN
    1375773287U,	// XVF16GER2PP
    1073776847U,	// XVF16GER2W
    1375771642U,	// XVF16GER2WNN
    1375773228U,	// XVF16GER2WNP
    1375771701U,	// XVF16GER2WPN
    1375773287U,	// XVF16GER2WPP
    1073784886U,	// XVF32GER
    1375771657U,	// XVF32GERNN
    1375773243U,	// XVF32GERNP
    1375771727U,	// XVF32GERPN
    1375773345U,	// XVF32GERPP
    1073784886U,	// XVF32GERW
    1375771657U,	// XVF32GERWNN
    1375773243U,	// XVF32GERWNP
    1375771727U,	// XVF32GERWPN
    1375773345U,	// XVF32GERWPP
    1073784898U,	// XVF64GER
    1375771671U,	// XVF64GERNN
    1375773257U,	// XVF64GERNP
    1375771741U,	// XVF64GERPN
    1375773359U,	// XVF64GERPP
    1073784898U,	// XVF64GERW
    1375771671U,	// XVF64GERWNN
    1375773257U,	// XVF64GERWNP
    1375771741U,	// XVF64GERWPN
    1375773359U,	// XVF64GERWPP
    1073776860U,	// XVI16GER2
    1375773302U,	// XVI16GER2PP
    1073785147U,	// XVI16GER2S
    1375773373U,	// XVI16GER2SPP
    1073785147U,	// XVI16GER2SW
    1375773373U,	// XVI16GER2SWPP
    1073776860U,	// XVI16GER2W
    1375773302U,	// XVI16GER2WPP
    1073776994U,	// XVI4GER8
    1375773331U,	// XVI4GER8PP
    1073776994U,	// XVI4GER8W
    1375773331U,	// XVI4GER8WPP
    1073776873U,	// XVI8GER4
    1375773317U,	// XVI8GER4PP
    1375773389U,	// XVI8GER4SPP
    1073776873U,	// XVI8GER4W
    1375773317U,	// XVI8GER4WPP
    1375773389U,	// XVI8GER4WSPP
    1073782801U,	// XVIEXPDP
    1073784241U,	// XVIEXPSP
    1375772215U,	// XVMADDADP
    1375773786U,	// XVMADDASP
    1375772578U,	// XVMADDMDP
    1375774068U,	// XVMADDMSP
    1073783046U,	// XVMAXDP
    1073784415U,	// XVMAXSP
    1073782732U,	// XVMINDP
    1073784202U,	// XVMINSP
    1375772169U,	// XVMSUBADP
    1375773740U,	// XVMSUBASP
    1375772532U,	// XVMSUBMDP
    1375774022U,	// XVMSUBMSP
    1073782600U,	// XVMULDP
    1073784090U,	// XVMULSP
    41051U,	// XVNABSDP
    42463U,	// XVNABSSP
    40707U,	// XVNEGDP
    42238U,	// XVNEGSP
    1375772192U,	// XVNMADDADP
    1375773763U,	// XVNMADDASP
    1375772555U,	// XVNMADDMDP
    1375774045U,	// XVNMADDMSP
    1375772146U,	// XVNMSUBADP
    1375773717U,	// XVNMSUBASP
    1375772509U,	// XVNMSUBMDP
    1375773999U,	// XVNMSUBMSP
    38501U,	// XVRDPI
    36493U,	// XVRDPIC
    39488U,	// XVRDPIM
    41454U,	// XVRDPIP
    47706U,	// XVRDPIZ
    40666U,	// XVREDP
    42206U,	// XVRESP
    38517U,	// XVRSPI
    36502U,	// XVRSPIC
    39497U,	// XVRSPIM
    41463U,	// XVRSPIP
    47715U,	// XVRSPIZ
    40686U,	// XVRSQRTEDP
    42226U,	// XVRSQRTESP
    41133U,	// XVSQRTDP
    42531U,	// XVSQRTSP
    1073782347U,	// XVSUBDP
    1073783918U,	// XVSUBSP
    1073782996U,	// XVTDIVDP
    1073784374U,	// XVTDIVSP
    35945U,	// XVTLSBB
    41122U,	// XVTSQRTDP
    42520U,	// XVTSQRTSP
    1375772255U,	// XVTSTDCDP
    1375773826U,	// XVTSTDCSP
    41009U,	// XVXEXPDP
    42427U,	// XVXEXPSP
    40726U,	// XVXSIGDP
    42247U,	// XVXSIGSP
    1073778173U,	// XXBLENDVB
    1073779086U,	// XXBLENDVD
    1073779875U,	// XXBLENDVH
    1073787894U,	// XXBLENDVW
    36988U,	// XXBRD
    37832U,	// XXBRH
    42768U,	// XXBRQ
    45717U,	// XXBRW
    1073780728U,	// XXEVAL
    1073787855U,	// XXEXTRACTUW
    1073781085U,	// XXGENPCVBM
    1073781157U,	// XXGENPCVDM
    1073781284U,	// XXGENPCVHM
    1073781550U,	// XXGENPCVWM
    1375777617U,	// XXINSERTW
    1073778751U,	// XXLAND
    1073778247U,	// XXLANDC
    1073786714U,	// XXLEQV
    1308667738U,	// XXLEQVOnes
    1073778759U,	// XXLNAND
    1073785005U,	// XXLNOR
    1073784998U,	// XXLOR
    1073778355U,	// XXLORC
    1073784998U,	// XXLORf
    1073785039U,	// XXLXOR
    1308666063U,	// XXLXORdpz
    1308666063U,	// XXLXORspz
    1308666063U,	// XXLXORz
    1412655U,	// XXMFACC
    1412655U,	// XXMFACCW
    1073787210U,	// XXMRGHW
    1073787262U,	// XXMRGLW
    1084984U,	// XXMTACC
    1084984U,	// XXMTACCW
    1073781456U,	// XXPERM
    1073780006U,	// XXPERMDI
    1073780006U,	// XXPERMDIs
    1073784989U,	// XXPERMR
    1073788549U,	// XXPERMX
    1073780793U,	// XXSEL
    1096190U,	// XXSETACCZ
    1096190U,	// XXSETACCZW
    1073780495U,	// XXSLDWI
    1073780495U,	// XXSLDWIs
    1744876750U,	// XXSPLTI32DX
    973114519U,	// XXSPLTIB
    40736U,	// XXSPLTIDP
    45420U,	// XXSPLTIW
    1073787700U,	// XXSPLTW
    1073787700U,	// XXSPLTWs
    1074171428U,	// gBC
    1074170410U,	// gBCA
    23775286U,	// gBCAat
    1074178340U,	// gBCCTR
    1074174107U,	// gBCCTRL
    1074173961U,	// gBCL
    1074170705U,	// gBCLA
    23775302U,	// gBCLAat
    1074178152U,	// gBCLR
    1074174083U,	// gBCLRL
    24824001U,	// gBCLat
    24823891U,	// gBCat
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ATOMIC_CMP_SWAP_I128
    0U,	// ATOMIC_LOAD_ADD_I128
    0U,	// ATOMIC_LOAD_AND_I128
    0U,	// ATOMIC_LOAD_NAND_I128
    0U,	// ATOMIC_LOAD_OR_I128
    0U,	// ATOMIC_LOAD_SUB_I128
    0U,	// ATOMIC_LOAD_XOR_I128
    0U,	// ATOMIC_SWAP_I128
    0U,	// BUILD_QUADWORD
    0U,	// BUILD_UACC
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    258U,	// CLRLSLWI
    258U,	// CLRLSLWI_rec
    64U,	// CLRRDI
    64U,	// CLRRDI_rec
    66U,	// CLRRWI
    66U,	// CLRRWI_rec
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFPS
    0U,	// DCBFx
    0U,	// DCBSTPS
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    258U,	// EXTLWI
    258U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    258U,	// EXTRWI
    258U,	// EXTRWI_rec
    258U,	// INSLWI
    258U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    258U,	// INSRWI
    258U,	// INSRWI_rec
    0U,	// KILL_PAIR
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    514U,	// RLWIMIbm
    514U,	// RLWIMIbm_rec
    514U,	// RLWINMbm
    514U,	// RLWINMbm_rec
    514U,	// RLWNMbm
    514U,	// RLWNMbm_rec
    64U,	// ROTRDI
    64U,	// ROTRDI_rec
    66U,	// ROTRWI
    66U,	// ROTRWI_rec
    64U,	// SLDI
    64U,	// SLDI_rec
    66U,	// SLWI
    66U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    64U,	// SRDI
    64U,	// SRDI_rec
    66U,	// SRWI
    66U,	// SRWI_rec
    0U,	// STIWX
    4U,	// SUBI
    4U,	// SUBIC
    4U,	// SUBIC_rec
    4U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    70U,	// ADD4
    70U,	// ADD4O
    70U,	// ADD4O_rec
    70U,	// ADD4TLS
    70U,	// ADD4_rec
    70U,	// ADD8
    70U,	// ADD8O
    70U,	// ADD8O_rec
    70U,	// ADD8TLS
    70U,	// ADD8TLS_
    70U,	// ADD8_rec
    70U,	// ADDC
    70U,	// ADDC8
    70U,	// ADDC8O
    70U,	// ADDC8O_rec
    70U,	// ADDC8_rec
    70U,	// ADDCO
    70U,	// ADDCO_rec
    70U,	// ADDC_rec
    70U,	// ADDE
    70U,	// ADDE8
    70U,	// ADDE8O
    70U,	// ADDE8O_rec
    70U,	// ADDE8_rec
    70U,	// ADDEO
    70U,	// ADDEO_rec
    774U,	// ADDEX
    774U,	// ADDEX8
    70U,	// ADDE_rec
    4U,	// ADDI
    4U,	// ADDI8
    4U,	// ADDIC
    4U,	// ADDIC8
    4U,	// ADDIC_rec
    4U,	// ADDIS
    4U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItoc
    0U,	// ADDItoc8
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    70U,	// AND
    70U,	// AND8
    70U,	// AND8_rec
    70U,	// ANDC
    70U,	// ANDC8
    70U,	// ANDC8_rec
    70U,	// ANDC_rec
    8U,	// ANDI8_rec
    8U,	// ANDIS8_rec
    8U,	// ANDIS_rec
    8U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    70U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    1030U,	// BCDADD_rec
    74U,	// BCDCFN_rec
    74U,	// BCDCFSQ_rec
    74U,	// BCDCFZ_rec
    70U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    74U,	// BCDCTZ_rec
    74U,	// BCDSETSGN_rec
    1030U,	// BCDSR_rec
    1030U,	// BCDSUB_rec
    1030U,	// BCDS_rec
    1030U,	// BCDTRUNC_rec
    70U,	// BCDUS_rec
    70U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL8_LDinto_toc_RM
    0U,	// BCTRL8_RM
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCTRL_LWZinto_toc_RM
    0U,	// BCTRL_RM
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_RM
    0U,	// BL8_NOP_TLS
    0U,	// BL8_NOTOC
    0U,	// BL8_NOTOC_RM
    0U,	// BL8_NOTOC_TLS
    0U,	// BL8_RM
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLA8_NOP_RM
    0U,	// BLA8_RM
    0U,	// BLA_RM
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_NOP_RM
    0U,	// BL_RM
    0U,	// BL_TLS
    70U,	// BPERMD
    0U,	// BRD
    0U,	// BRH
    0U,	// BRH8
    70U,	// BRINC
    0U,	// BRW
    0U,	// BRW8
    70U,	// CFUGED
    0U,	// CLRBHRB
    70U,	// CMPB
    70U,	// CMPB8
    70U,	// CMPD
    4U,	// CMPDI
    70U,	// CMPEQB
    70U,	// CMPLD
    8U,	// CMPLDI
    70U,	// CMPLW
    8U,	// CMPLWI
    518U,	// CMPRB
    518U,	// CMPRB8
    70U,	// CMPW
    4U,	// CMPWI
    0U,	// CNTLZD
    70U,	// CNTLZDM
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    70U,	// CNTTZDM
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    0U,	// CP_COPY
    0U,	// CP_COPY8
    74U,	// CP_PASTE8_rec
    74U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    70U,	// CRAND
    70U,	// CRANDC
    70U,	// CREQV
    70U,	// CRNAND
    70U,	// CRNOR
    0U,	// CRNOT
    70U,	// CROR
    70U,	// CRORC
    12U,	// CRSET
    12U,	// CRUNSET
    70U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCCCI
    70U,	// DIVD
    70U,	// DIVDE
    70U,	// DIVDEO
    70U,	// DIVDEO_rec
    70U,	// DIVDEU
    70U,	// DIVDEUO
    70U,	// DIVDEUO_rec
    70U,	// DIVDEU_rec
    70U,	// DIVDE_rec
    70U,	// DIVDO
    70U,	// DIVDO_rec
    70U,	// DIVDU
    70U,	// DIVDUO
    70U,	// DIVDUO_rec
    70U,	// DIVDU_rec
    70U,	// DIVD_rec
    70U,	// DIVW
    70U,	// DIVWE
    70U,	// DIVWEO
    70U,	// DIVWEO_rec
    70U,	// DIVWEU
    70U,	// DIVWEUO
    70U,	// DIVWEUO_rec
    70U,	// DIVWEU_rec
    70U,	// DIVWE_rec
    70U,	// DIVWO
    70U,	// DIVWO_rec
    70U,	// DIVWU
    70U,	// DIVWUO
    70U,	// DIVWUO_rec
    70U,	// DIVWU_rec
    70U,	// DIVW_rec
    0U,	// DMMR
    0U,	// DMSETDMRZ
    0U,	// DMXOR
    14U,	// DMXXEXTFDMR256
    0U,	// DMXXEXTFDMR512
    0U,	// DMXXEXTFDMR512_HI
    14U,	// DMXXINSTFDMR256
    134U,	// DMXXINSTFDMR512
    198U,	// DMXXINSTFDMR512_HI
    0U,	// DSS
    0U,	// DSSALL
    16U,	// DST
    16U,	// DST64
    16U,	// DSTST
    16U,	// DSTST64
    16U,	// DSTSTT
    16U,	// DSTSTT64
    16U,	// DSTT
    16U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// DecreaseCTR8loop
    0U,	// DecreaseCTRloop
    0U,	// EFDABS
    70U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    70U,	// EFDCMPEQ
    70U,	// EFDCMPGT
    70U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    70U,	// EFDDIV
    70U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    70U,	// EFDSUB
    70U,	// EFDTSTEQ
    70U,	// EFDTSTGT
    70U,	// EFDTSTLT
    0U,	// EFSABS
    70U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    70U,	// EFSCMPEQ
    70U,	// EFSCMPGT
    70U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    70U,	// EFSDIV
    70U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    70U,	// EFSSUB
    70U,	// EFSTSTEQ
    70U,	// EFSTSTGT
    70U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    70U,	// EQV
    70U,	// EQV8
    70U,	// EQV8_rec
    70U,	// EQV_rec
    0U,	// EVABS
    82U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    70U,	// EVADDW
    70U,	// EVAND
    70U,	// EVANDC
    70U,	// EVCMPEQ
    70U,	// EVCMPGTS
    70U,	// EVCMPGTU
    70U,	// EVCMPLTS
    70U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    70U,	// EVDIVWS
    70U,	// EVDIVWU
    70U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    70U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    70U,	// EVFSCMPEQ
    70U,	// EVFSCMPGT
    70U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    70U,	// EVFSDIV
    70U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    70U,	// EVFSSUB
    70U,	// EVFSTSTEQ
    70U,	// EVFSTSTGT
    70U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    70U,	// EVMERGEHI
    70U,	// EVMERGEHILO
    70U,	// EVMERGELO
    70U,	// EVMERGELOHI
    70U,	// EVMHEGSMFAA
    70U,	// EVMHEGSMFAN
    70U,	// EVMHEGSMIAA
    70U,	// EVMHEGSMIAN
    70U,	// EVMHEGUMIAA
    70U,	// EVMHEGUMIAN
    70U,	// EVMHESMF
    70U,	// EVMHESMFA
    70U,	// EVMHESMFAAW
    70U,	// EVMHESMFANW
    70U,	// EVMHESMI
    70U,	// EVMHESMIA
    70U,	// EVMHESMIAAW
    70U,	// EVMHESMIANW
    70U,	// EVMHESSF
    70U,	// EVMHESSFA
    70U,	// EVMHESSFAAW
    70U,	// EVMHESSFANW
    70U,	// EVMHESSIAAW
    70U,	// EVMHESSIANW
    70U,	// EVMHEUMI
    70U,	// EVMHEUMIA
    70U,	// EVMHEUMIAAW
    70U,	// EVMHEUMIANW
    70U,	// EVMHEUSIAAW
    70U,	// EVMHEUSIANW
    70U,	// EVMHOGSMFAA
    70U,	// EVMHOGSMFAN
    70U,	// EVMHOGSMIAA
    70U,	// EVMHOGSMIAN
    70U,	// EVMHOGUMIAA
    70U,	// EVMHOGUMIAN
    70U,	// EVMHOSMF
    70U,	// EVMHOSMFA
    70U,	// EVMHOSMFAAW
    70U,	// EVMHOSMFANW
    70U,	// EVMHOSMI
    70U,	// EVMHOSMIA
    70U,	// EVMHOSMIAAW
    70U,	// EVMHOSMIANW
    70U,	// EVMHOSSF
    70U,	// EVMHOSSFA
    70U,	// EVMHOSSFAAW
    70U,	// EVMHOSSFANW
    70U,	// EVMHOSSIAAW
    70U,	// EVMHOSSIANW
    70U,	// EVMHOUMI
    70U,	// EVMHOUMIA
    70U,	// EVMHOUMIAAW
    70U,	// EVMHOUMIANW
    70U,	// EVMHOUSIAAW
    70U,	// EVMHOUSIANW
    0U,	// EVMRA
    70U,	// EVMWHSMF
    70U,	// EVMWHSMFA
    70U,	// EVMWHSMI
    70U,	// EVMWHSMIA
    70U,	// EVMWHSSF
    70U,	// EVMWHSSFA
    70U,	// EVMWHUMI
    70U,	// EVMWHUMIA
    70U,	// EVMWLSMIAAW
    70U,	// EVMWLSMIANW
    70U,	// EVMWLSSIAAW
    70U,	// EVMWLSSIANW
    70U,	// EVMWLUMI
    70U,	// EVMWLUMIA
    70U,	// EVMWLUMIAAW
    70U,	// EVMWLUMIANW
    70U,	// EVMWLUSIAAW
    70U,	// EVMWLUSIANW
    70U,	// EVMWSMF
    70U,	// EVMWSMFA
    70U,	// EVMWSMFAA
    70U,	// EVMWSMFAN
    70U,	// EVMWSMI
    70U,	// EVMWSMIA
    70U,	// EVMWSMIAA
    70U,	// EVMWSMIAN
    70U,	// EVMWSSF
    70U,	// EVMWSSFA
    70U,	// EVMWSSFAA
    70U,	// EVMWSSFAN
    70U,	// EVMWUMI
    70U,	// EVMWUMIA
    70U,	// EVMWUMIAA
    70U,	// EVMWUMIAN
    70U,	// EVNAND
    0U,	// EVNEG
    70U,	// EVNOR
    70U,	// EVOR
    70U,	// EVORC
    70U,	// EVRLW
    66U,	// EVRLWI
    0U,	// EVRNDW
    0U,	// EVSEL
    70U,	// EVSLW
    66U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    66U,	// EVSRWIS
    66U,	// EVSRWIU
    70U,	// EVSRWS
    70U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    70U,	// EVSUBFW
    70U,	// EVSUBIFW
    70U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    64U,	// EXTSWSLI
    64U,	// EXTSWSLI_32_64
    64U,	// EXTSWSLI_32_64_rec
    64U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    70U,	// FADD
    70U,	// FADDS
    70U,	// FADDS_rec
    70U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    70U,	// FCMPOD
    70U,	// FCMPOS
    70U,	// FCMPUD
    70U,	// FCMPUS
    70U,	// FCPSGND
    70U,	// FCPSGND_rec
    70U,	// FCPSGNS
    70U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    70U,	// FDIV
    70U,	// FDIVS
    70U,	// FDIVS_rec
    70U,	// FDIV_rec
    518U,	// FMADD
    518U,	// FMADDS
    518U,	// FMADDS_rec
    518U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    518U,	// FMSUB
    518U,	// FMSUBS
    518U,	// FMSUBS_rec
    518U,	// FMSUB_rec
    70U,	// FMUL
    70U,	// FMULS
    70U,	// FMULS_rec
    70U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    518U,	// FNMADD
    518U,	// FNMADDS
    518U,	// FNMADDS_rec
    518U,	// FNMADD_rec
    518U,	// FNMSUB
    518U,	// FNMSUBS
    518U,	// FNMSUBS_rec
    518U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    518U,	// FSELD
    518U,	// FSELD_rec
    518U,	// FSELS
    518U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    70U,	// FSUB
    70U,	// FSUBS
    70U,	// FSUBS_rec
    70U,	// FSUB_rec
    70U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsADDR32AIX
    0U,	// GETtlsADDR64AIX
    0U,	// GETtlsADDRPCREL
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// GETtlsldADDRPCREL
    0U,	// HASHCHK
    0U,	// HASHCHK8
    0U,	// HASHCHKP
    0U,	// HASHCHKP8
    0U,	// HASHST
    0U,	// HASHST8
    0U,	// HASHSTP
    0U,	// HASHSTP8
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    518U,	// ISEL
    518U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LA8
    0U,	// LBARX
    1U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    70U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    70U,	// LBZXTLS
    70U,	// LBZXTLS_
    70U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    1U,	// LDARXL
    66U,	// LDAT
    0U,	// LDBRX
    70U,	// LDCIX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    70U,	// LDXTLS
    70U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    1U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    70U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    70U,	// LHZXTLS
    70U,	// LHZXTLS_
    70U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    0U,	// LQ
    0U,	// LQARX
    1U,	// LQARXL
    0U,	// LQX_PSEUDO
    66U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    1U,	// LWARXL
    66U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    70U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    70U,	// LWZXTLS
    70U,	// LWZXTLS_
    70U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    0U,	// LXVKQ
    70U,	// LXVL
    70U,	// LXVLL
    0U,	// LXVP
    70U,	// LXVPRL
    70U,	// LXVPRLL
    0U,	// LXVPX
    0U,	// LXVRBX
    0U,	// LXVRDX
    0U,	// LXVRHX
    70U,	// LXVRL
    70U,	// LXVRLL
    0U,	// LXVRWX
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    518U,	// MADDHD
    518U,	// MADDHDU
    518U,	// MADDLD
    518U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFUDSCR
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    70U,	// MODSD
    70U,	// MODSW
    70U,	// MODUD
    70U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8loop
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    522U,	// MTFSF
    0U,	// MTFSFI
    0U,	// MTFSFI_rec
    0U,	// MTFSFIb
    522U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTUDSCR
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRBM
    0U,	// MTVSRBMI
    0U,	// MTVSRD
    70U,	// MTVSRDD
    0U,	// MTVSRDM
    0U,	// MTVSRHM
    0U,	// MTVSRQM
    0U,	// MTVSRWA
    0U,	// MTVSRWM
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    70U,	// MULHD
    70U,	// MULHDU
    70U,	// MULHDU_rec
    70U,	// MULHD_rec
    70U,	// MULHW
    70U,	// MULHWU
    70U,	// MULHWU_rec
    70U,	// MULHW_rec
    70U,	// MULLD
    70U,	// MULLDO
    70U,	// MULLDO_rec
    70U,	// MULLD_rec
    4U,	// MULLI
    4U,	// MULLI8
    70U,	// MULLW
    70U,	// MULLWO
    70U,	// MULLWO_rec
    70U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    70U,	// NAND
    70U,	// NAND8
    70U,	// NAND8_rec
    70U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    70U,	// NOR
    70U,	// NOR8
    70U,	// NOR8_rec
    70U,	// NOR_rec
    70U,	// OR
    70U,	// OR8
    70U,	// OR8_rec
    70U,	// ORC
    70U,	// ORC8
    70U,	// ORC8_rec
    70U,	// ORC_rec
    8U,	// ORI
    8U,	// ORI8
    8U,	// ORIS
    8U,	// ORIS8
    70U,	// OR_rec
    20U,	// PADDI
    20U,	// PADDI8
    0U,	// PADDI8pc
    0U,	// PADDIdtprel
    0U,	// PADDIpc
    70U,	// PDEPD
    70U,	// PEXTD
    0U,	// PLBZ
    0U,	// PLBZ8
    0U,	// PLBZ8pc
    0U,	// PLBZpc
    0U,	// PLD
    0U,	// PLDpc
    0U,	// PLFD
    0U,	// PLFDpc
    0U,	// PLFS
    0U,	// PLFSpc
    0U,	// PLHA
    0U,	// PLHA8
    0U,	// PLHA8pc
    0U,	// PLHApc
    0U,	// PLHZ
    0U,	// PLHZ8
    0U,	// PLHZ8pc
    0U,	// PLHZpc
    0U,	// PLI
    0U,	// PLI8
    0U,	// PLWA
    0U,	// PLWA8
    0U,	// PLWA8pc
    0U,	// PLWApc
    0U,	// PLWZ
    0U,	// PLWZ8
    0U,	// PLWZ8pc
    0U,	// PLWZpc
    0U,	// PLXSD
    0U,	// PLXSDpc
    0U,	// PLXSSP
    0U,	// PLXSSPpc
    0U,	// PLXV
    0U,	// PLXVP
    0U,	// PLXVPpc
    0U,	// PLXVpc
    5382U,	// PMXVBF16GER2
    26134U,	// PMXVBF16GER2NN
    26134U,	// PMXVBF16GER2NP
    26134U,	// PMXVBF16GER2PN
    26134U,	// PMXVBF16GER2PP
    5382U,	// PMXVBF16GER2W
    26134U,	// PMXVBF16GER2WNN
    26134U,	// PMXVBF16GER2WNP
    26134U,	// PMXVBF16GER2WPN
    26134U,	// PMXVBF16GER2WPP
    5382U,	// PMXVF16GER2
    26134U,	// PMXVF16GER2NN
    26134U,	// PMXVF16GER2NP
    26134U,	// PMXVF16GER2PN
    26134U,	// PMXVF16GER2PP
    5382U,	// PMXVF16GER2W
    26134U,	// PMXVF16GER2WNN
    26134U,	// PMXVF16GER2WNP
    26134U,	// PMXVF16GER2WPN
    26134U,	// PMXVF16GER2WPP
    5382U,	// PMXVF32GER
    42518U,	// PMXVF32GERNN
    42518U,	// PMXVF32GERNP
    42518U,	// PMXVF32GERPN
    42518U,	// PMXVF32GERPP
    5382U,	// PMXVF32GERW
    42518U,	// PMXVF32GERWNN
    42518U,	// PMXVF32GERWNP
    42518U,	// PMXVF32GERWPN
    42518U,	// PMXVF32GERWPP
    54534U,	// PMXVF64GER
    13846U,	// PMXVF64GERNN
    13846U,	// PMXVF64GERNP
    13846U,	// PMXVF64GERPN
    13846U,	// PMXVF64GERPP
    54534U,	// PMXVF64GERW
    13846U,	// PMXVF64GERWNN
    13846U,	// PMXVF64GERWNP
    13846U,	// PMXVF64GERWPN
    13846U,	// PMXVF64GERWPP
    5382U,	// PMXVI16GER2
    26134U,	// PMXVI16GER2PP
    5382U,	// PMXVI16GER2S
    26134U,	// PMXVI16GER2SPP
    5382U,	// PMXVI16GER2SW
    26134U,	// PMXVI16GER2SWPP
    5382U,	// PMXVI16GER2W
    26134U,	// PMXVI16GER2WPP
    5382U,	// PMXVI4GER8
    26134U,	// PMXVI4GER8PP
    5382U,	// PMXVI4GER8W
    26134U,	// PMXVI4GER8WPP
    5382U,	// PMXVI8GER4
    26134U,	// PMXVI8GER4PP
    26134U,	// PMXVI8GER4SPP
    5382U,	// PMXVI8GER4W
    26134U,	// PMXVI8GER4WPP
    26134U,	// PMXVI8GER4WSPP
    0U,	// POPCNTB
    0U,	// POPCNTB8
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    0U,	// PREPARE_PROBED_ALLOCA_32
    0U,	// PREPARE_PROBED_ALLOCA_64
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    0U,	// PROBED_ALLOCA_32
    0U,	// PROBED_ALLOCA_64
    0U,	// PROBED_STACKALLOC_32
    0U,	// PROBED_STACKALLOC_64
    0U,	// PSTB
    0U,	// PSTB8
    0U,	// PSTB8pc
    0U,	// PSTBpc
    0U,	// PSTD
    0U,	// PSTDpc
    0U,	// PSTFD
    0U,	// PSTFDpc
    0U,	// PSTFS
    0U,	// PSTFSpc
    0U,	// PSTH
    0U,	// PSTH8
    0U,	// PSTH8pc
    0U,	// PSTHpc
    0U,	// PSTW
    0U,	// PSTW8
    0U,	// PSTW8pc
    0U,	// PSTWpc
    0U,	// PSTXSD
    0U,	// PSTXSDpc
    0U,	// PSTXSSP
    0U,	// PSTXSSPpc
    0U,	// PSTXV
    0U,	// PSTXVP
    0U,	// PSTXVPpc
    0U,	// PSTXVpc
    0U,	// PseudoEIEIO
    774U,	// QVALIGNI
    774U,	// QVALIGNIb
    774U,	// QVALIGNIs
    14U,	// QVESPLATI
    14U,	// QVESPLATIb
    14U,	// QVESPLATIs
    0U,	// QVFABS
    0U,	// QVFABSs
    70U,	// QVFADD
    70U,	// QVFADDS
    70U,	// QVFADDSs
    0U,	// QVFCFID
    0U,	// QVFCFIDS
    0U,	// QVFCFIDU
    0U,	// QVFCFIDUS
    0U,	// QVFCFIDb
    70U,	// QVFCMPEQ
    70U,	// QVFCMPEQb
    70U,	// QVFCMPEQbs
    70U,	// QVFCMPGT
    70U,	// QVFCMPGTb
    70U,	// QVFCMPGTbs
    70U,	// QVFCMPLT
    70U,	// QVFCMPLTb
    70U,	// QVFCMPLTbs
    70U,	// QVFCPSGN
    70U,	// QVFCPSGNs
    0U,	// QVFCTID
    0U,	// QVFCTIDU
    0U,	// QVFCTIDUZ
    0U,	// QVFCTIDZ
    0U,	// QVFCTIDb
    0U,	// QVFCTIW
    0U,	// QVFCTIWU
    0U,	// QVFCTIWUZ
    0U,	// QVFCTIWZ
    1798U,	// QVFLOGICAL
    1798U,	// QVFLOGICALb
    1798U,	// QVFLOGICALs
    518U,	// QVFMADD
    2070U,	// QVFMADDS
    518U,	// QVFMADDSs
    0U,	// QVFMR
    0U,	// QVFMRb
    0U,	// QVFMRs
    518U,	// QVFMSUB
    2070U,	// QVFMSUBS
    518U,	// QVFMSUBSs
    70U,	// QVFMUL
    70U,	// QVFMULS
    70U,	// QVFMULSs
    0U,	// QVFNABS
    0U,	// QVFNABSs
    0U,	// QVFNEG
    0U,	// QVFNEGs
    518U,	// QVFNMADD
    2070U,	// QVFNMADDS
    518U,	// QVFNMADDSs
    518U,	// QVFNMSUB
    2070U,	// QVFNMSUBS
    518U,	// QVFNMSUBSs
    518U,	// QVFPERM
    518U,	// QVFPERMs
    0U,	// QVFRE
    0U,	// QVFRES
    0U,	// QVFRESs
    0U,	// QVFRIM
    0U,	// QVFRIMs
    0U,	// QVFRIN
    0U,	// QVFRINs
    0U,	// QVFRIP
    0U,	// QVFRIPs
    0U,	// QVFRIZ
    0U,	// QVFRIZs
    0U,	// QVFRSP
    0U,	// QVFRSPs
    0U,	// QVFRSQRTE
    0U,	// QVFRSQRTES
    0U,	// QVFRSQRTESs
    2070U,	// QVFSEL
    2070U,	// QVFSELb
    2070U,	// QVFSELbb
    2070U,	// QVFSELbs
    70U,	// QVFSUB
    70U,	// QVFSUBS
    70U,	// QVFSUBSs
    70U,	// QVFTSTNAN
    70U,	// QVFTSTNANb
    70U,	// QVFTSTNANbs
    2070U,	// QVFXMADD
    2070U,	// QVFXMADDS
    70U,	// QVFXMUL
    70U,	// QVFXMULS
    2070U,	// QVFXXCPNMADD
    2070U,	// QVFXXCPNMADDS
    2070U,	// QVFXXMADD
    2070U,	// QVFXXMADDS
    2070U,	// QVFXXNPMADD
    2070U,	// QVFXXNPMADDS
    0U,	// QVGPCI
    0U,	// QVLFCDUX
    0U,	// QVLFCDUXA
    0U,	// QVLFCDX
    0U,	// QVLFCDXA
    0U,	// QVLFCSUX
    0U,	// QVLFCSUXA
    0U,	// QVLFCSX
    0U,	// QVLFCSXA
    0U,	// QVLFCSXs
    0U,	// QVLFDUX
    0U,	// QVLFDUXA
    0U,	// QVLFDX
    0U,	// QVLFDXA
    0U,	// QVLFDXb
    0U,	// QVLFIWAX
    0U,	// QVLFIWAXA
    0U,	// QVLFIWZX
    0U,	// QVLFIWZXA
    0U,	// QVLFSUX
    0U,	// QVLFSUXA
    0U,	// QVLFSX
    0U,	// QVLFSXA
    0U,	// QVLFSXb
    0U,	// QVLFSXs
    0U,	// QVLPCLDX
    0U,	// QVLPCLSX
    0U,	// QVLPCLSXint
    0U,	// QVLPCRDX
    0U,	// QVLPCRSX
    0U,	// QVSTFCDUX
    0U,	// QVSTFCDUXA
    0U,	// QVSTFCDUXI
    0U,	// QVSTFCDUXIA
    0U,	// QVSTFCDX
    0U,	// QVSTFCDXA
    0U,	// QVSTFCDXI
    0U,	// QVSTFCDXIA
    0U,	// QVSTFCSUX
    0U,	// QVSTFCSUXA
    0U,	// QVSTFCSUXI
    0U,	// QVSTFCSUXIA
    0U,	// QVSTFCSX
    0U,	// QVSTFCSXA
    0U,	// QVSTFCSXI
    0U,	// QVSTFCSXIA
    0U,	// QVSTFCSXs
    0U,	// QVSTFDUX
    0U,	// QVSTFDUXA
    0U,	// QVSTFDUXI
    0U,	// QVSTFDUXIA
    0U,	// QVSTFDX
    0U,	// QVSTFDXA
    0U,	// QVSTFDXI
    0U,	// QVSTFDXIA
    0U,	// QVSTFDXb
    0U,	// QVSTFIWX
    0U,	// QVSTFIWXA
    0U,	// QVSTFSUX
    0U,	// QVSTFSUXA
    0U,	// QVSTFSUXI
    0U,	// QVSTFSUXIA
    0U,	// QVSTFSUXs
    0U,	// QVSTFSX
    0U,	// QVSTFSXA
    0U,	// QVSTFSXI
    0U,	// QVSTFSXIA
    0U,	// QVSTFSXs
    0U,	// RESTORE_ACC
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_QUADWORD
    0U,	// RESTORE_UACC
    0U,	// RESTORE_WACC
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    6U,	// RLDCL
    6U,	// RLDCL_rec
    6U,	// RLDCR
    6U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    24U,	// RLDIMI
    24U,	// RLDIMI_rec
    26U,	// RLWIMI
    26U,	// RLWIMI8
    26U,	// RLWIMI8_rec
    26U,	// RLWIMI_rec
    4354U,	// RLWINM
    4354U,	// RLWINM8
    4354U,	// RLWINM8_rec
    4354U,	// RLWINM_rec
    4358U,	// RLWNM
    4358U,	// RLWNM8
    4358U,	// RLWNM8_rec
    4358U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_QBRC
    0U,	// SELECT_CC_QFRC
    0U,	// SELECT_CC_QSRC
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_QBRC
    0U,	// SELECT_QFRC
    0U,	// SELECT_QSRC
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETBC
    0U,	// SETBC8
    0U,	// SETBCR
    0U,	// SETBCR8
    0U,	// SETFLM
    0U,	// SETNBC
    0U,	// SETNBC8
    0U,	// SETNBCR
    0U,	// SETNBCR8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    70U,	// SLD
    70U,	// SLD_rec
    70U,	// SLW
    70U,	// SLW8
    70U,	// SLW8_rec
    70U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_ACC
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_QUADWORD
    0U,	// SPILL_UACC
    0U,	// SPILL_WACC
    0U,	// SPLIT_QUADWORD
    70U,	// SRAD
    64U,	// SRADI
    64U,	// SRADI_32
    64U,	// SRADI_rec
    70U,	// SRAD_rec
    70U,	// SRAW
    66U,	// SRAWI
    66U,	// SRAWI_rec
    70U,	// SRAW_rec
    70U,	// SRD
    70U,	// SRD_rec
    70U,	// SRW
    70U,	// SRW8
    70U,	// SRW8_rec
    70U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    70U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    70U,	// STBXTLS
    70U,	// STBXTLS_
    70U,	// STBXTLS_32
    0U,	// STD
    66U,	// STDAT
    0U,	// STDBRX
    70U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    70U,	// STDXTLS
    70U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    70U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    70U,	// STHXTLS
    70U,	// STHXTLS_
    70U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    0U,	// STQ
    0U,	// STQCX
    0U,	// STQX_PSEUDO
    66U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    66U,	// STWAT
    0U,	// STWBRX
    70U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    70U,	// STWXTLS
    70U,	// STWXTLS_
    70U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    70U,	// STXVL
    70U,	// STXVLL
    0U,	// STXVP
    70U,	// STXVPRL
    70U,	// STXVPRLL
    0U,	// STXVPX
    0U,	// STXVRBX
    0U,	// STXVRDX
    0U,	// STXVRHX
    70U,	// STXVRL
    70U,	// STXVRLL
    0U,	// STXVRWX
    0U,	// STXVW4X
    0U,	// STXVX
    70U,	// SUBF
    70U,	// SUBF8
    70U,	// SUBF8O
    70U,	// SUBF8O_rec
    70U,	// SUBF8_rec
    70U,	// SUBFC
    70U,	// SUBFC8
    70U,	// SUBFC8O
    70U,	// SUBFC8O_rec
    70U,	// SUBFC8_rec
    70U,	// SUBFCO
    70U,	// SUBFCO_rec
    70U,	// SUBFC_rec
    70U,	// SUBFE
    70U,	// SUBFE8
    70U,	// SUBFE8O
    70U,	// SUBFE8O_rec
    70U,	// SUBFE8_rec
    70U,	// SUBFEO
    70U,	// SUBFEO_rec
    70U,	// SUBFE_rec
    4U,	// SUBFIC
    4U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    70U,	// SUBFO
    70U,	// SUBFO_rec
    0U,	// SUBFUS
    0U,	// SUBFUS_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    70U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    70U,	// TABORTDC
    66U,	// TABORTDCI
    70U,	// TABORTWC
    66U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    70U,	// TD
    4U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    70U,	// TLBRE2
    0U,	// TLBSX
    70U,	// TLBSX2
    70U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    70U,	// TLBWE2
    0U,	// TLSGDAIX
    0U,	// TLSGDAIX8
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    70U,	// TW
    4U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UpdateGBR
    70U,	// VABSDUB
    70U,	// VABSDUH
    70U,	// VABSDUW
    70U,	// VADDCUQ
    70U,	// VADDCUW
    518U,	// VADDECUQ
    518U,	// VADDEUQM
    70U,	// VADDFP
    70U,	// VADDSBS
    70U,	// VADDSHS
    70U,	// VADDSWS
    70U,	// VADDUBM
    70U,	// VADDUBS
    70U,	// VADDUDM
    70U,	// VADDUHM
    70U,	// VADDUHS
    70U,	// VADDUQM
    70U,	// VADDUWM
    70U,	// VADDUWS
    70U,	// VAND
    70U,	// VANDC
    70U,	// VAVGSB
    70U,	// VAVGSH
    70U,	// VAVGSW
    70U,	// VAVGUB
    70U,	// VAVGUH
    70U,	// VAVGUW
    70U,	// VBPERMD
    70U,	// VBPERMQ
    28U,	// VCFSX
    1U,	// VCFSX_0
    70U,	// VCFUGED
    28U,	// VCFUX
    1U,	// VCFUX_0
    70U,	// VCIPHER
    70U,	// VCIPHERLAST
    70U,	// VCLRLB
    70U,	// VCLRRB
    0U,	// VCLZB
    0U,	// VCLZD
    70U,	// VCLZDM
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    70U,	// VCMPBFP
    70U,	// VCMPBFP_rec
    70U,	// VCMPEQFP
    70U,	// VCMPEQFP_rec
    70U,	// VCMPEQUB
    70U,	// VCMPEQUB_rec
    70U,	// VCMPEQUD
    70U,	// VCMPEQUD_rec
    70U,	// VCMPEQUH
    70U,	// VCMPEQUH_rec
    70U,	// VCMPEQUQ
    70U,	// VCMPEQUQ_rec
    70U,	// VCMPEQUW
    70U,	// VCMPEQUW_rec
    70U,	// VCMPGEFP
    70U,	// VCMPGEFP_rec
    70U,	// VCMPGTFP
    70U,	// VCMPGTFP_rec
    70U,	// VCMPGTSB
    70U,	// VCMPGTSB_rec
    70U,	// VCMPGTSD
    70U,	// VCMPGTSD_rec
    70U,	// VCMPGTSH
    70U,	// VCMPGTSH_rec
    70U,	// VCMPGTSQ
    70U,	// VCMPGTSQ_rec
    70U,	// VCMPGTSW
    70U,	// VCMPGTSW_rec
    70U,	// VCMPGTUB
    70U,	// VCMPGTUB_rec
    70U,	// VCMPGTUD
    70U,	// VCMPGTUD_rec
    70U,	// VCMPGTUH
    70U,	// VCMPGTUH_rec
    70U,	// VCMPGTUQ
    70U,	// VCMPGTUQ_rec
    70U,	// VCMPGTUW
    70U,	// VCMPGTUW_rec
    70U,	// VCMPNEB
    70U,	// VCMPNEB_rec
    70U,	// VCMPNEH
    70U,	// VCMPNEH_rec
    70U,	// VCMPNEW
    70U,	// VCMPNEW_rec
    70U,	// VCMPNEZB
    70U,	// VCMPNEZB_rec
    70U,	// VCMPNEZH
    70U,	// VCMPNEZH_rec
    70U,	// VCMPNEZW
    70U,	// VCMPNEZW_rec
    70U,	// VCMPSQ
    70U,	// VCMPUQ
    74U,	// VCNTMBB
    74U,	// VCNTMBD
    74U,	// VCNTMBH
    74U,	// VCNTMBW
    28U,	// VCTSXS
    1U,	// VCTSXS_0
    28U,	// VCTUXS
    1U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    70U,	// VCTZDM
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    70U,	// VDIVESD
    70U,	// VDIVESQ
    70U,	// VDIVESW
    70U,	// VDIVEUD
    70U,	// VDIVEUQ
    70U,	// VDIVEUW
    70U,	// VDIVSD
    70U,	// VDIVSQ
    70U,	// VDIVSW
    70U,	// VDIVUD
    70U,	// VDIVUQ
    70U,	// VDIVUW
    70U,	// VEQV
    0U,	// VEXPANDBM
    0U,	// VEXPANDDM
    0U,	// VEXPANDHM
    0U,	// VEXPANDQM
    0U,	// VEXPANDWM
    0U,	// VEXPTEFP
    518U,	// VEXTDDVLX
    518U,	// VEXTDDVRX
    518U,	// VEXTDUBVLX
    518U,	// VEXTDUBVRX
    518U,	// VEXTDUHVLX
    518U,	// VEXTDUHVRX
    518U,	// VEXTDUWVLX
    518U,	// VEXTDUWVRX
    0U,	// VEXTRACTBM
    30U,	// VEXTRACTD
    0U,	// VEXTRACTDM
    0U,	// VEXTRACTHM
    0U,	// VEXTRACTQM
    30U,	// VEXTRACTUB
    30U,	// VEXTRACTUH
    30U,	// VEXTRACTUW
    0U,	// VEXTRACTWM
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSD2Q
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    70U,	// VEXTUBLX
    70U,	// VEXTUBRX
    70U,	// VEXTUHLX
    70U,	// VEXTUHRX
    70U,	// VEXTUWLX
    70U,	// VEXTUWRX
    0U,	// VGBBD
    32U,	// VGNB
    86U,	// VINSBLX
    86U,	// VINSBRX
    86U,	// VINSBVLX
    86U,	// VINSBVRX
    0U,	// VINSD
    86U,	// VINSDLX
    86U,	// VINSDRX
    0U,	// VINSERTB
    30U,	// VINSERTD
    0U,	// VINSERTH
    30U,	// VINSERTW
    86U,	// VINSHLX
    86U,	// VINSHRX
    86U,	// VINSHVLX
    86U,	// VINSHVRX
    0U,	// VINSW
    86U,	// VINSWLX
    86U,	// VINSWRX
    86U,	// VINSWVLX
    86U,	// VINSWVRX
    0U,	// VLOGEFP
    518U,	// VMADDFP
    70U,	// VMAXFP
    70U,	// VMAXSB
    70U,	// VMAXSD
    70U,	// VMAXSH
    70U,	// VMAXSW
    70U,	// VMAXUB
    70U,	// VMAXUD
    70U,	// VMAXUH
    70U,	// VMAXUW
    518U,	// VMHADDSHS
    518U,	// VMHRADDSHS
    70U,	// VMINFP
    70U,	// VMINSB
    70U,	// VMINSD
    70U,	// VMINSH
    70U,	// VMINSW
    70U,	// VMINUB
    70U,	// VMINUD
    70U,	// VMINUH
    70U,	// VMINUW
    518U,	// VMLADDUHM
    70U,	// VMODSD
    70U,	// VMODSQ
    70U,	// VMODSW
    70U,	// VMODUD
    70U,	// VMODUQ
    70U,	// VMODUW
    70U,	// VMRGEW
    70U,	// VMRGHB
    70U,	// VMRGHH
    70U,	// VMRGHW
    70U,	// VMRGLB
    70U,	// VMRGLH
    70U,	// VMRGLW
    70U,	// VMRGOW
    518U,	// VMSUMCUD
    518U,	// VMSUMMBM
    518U,	// VMSUMSHM
    518U,	// VMSUMSHS
    518U,	// VMSUMUBM
    518U,	// VMSUMUDM
    518U,	// VMSUMUHM
    518U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    70U,	// VMUL10ECUQ
    70U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    70U,	// VMULESB
    70U,	// VMULESD
    70U,	// VMULESH
    70U,	// VMULESW
    70U,	// VMULEUB
    70U,	// VMULEUD
    70U,	// VMULEUH
    70U,	// VMULEUW
    70U,	// VMULHSD
    70U,	// VMULHSW
    70U,	// VMULHUD
    70U,	// VMULHUW
    70U,	// VMULLD
    70U,	// VMULOSB
    70U,	// VMULOSD
    70U,	// VMULOSH
    70U,	// VMULOSW
    70U,	// VMULOUB
    70U,	// VMULOUD
    70U,	// VMULOUH
    70U,	// VMULOUW
    70U,	// VMULUWM
    70U,	// VNAND
    70U,	// VNCIPHER
    70U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    518U,	// VNMSUBFP
    70U,	// VNOR
    70U,	// VOR
    70U,	// VORC
    70U,	// VPDEPD
    518U,	// VPERM
    518U,	// VPERMR
    518U,	// VPERMXOR
    70U,	// VPEXTD
    70U,	// VPKPX
    70U,	// VPKSDSS
    70U,	// VPKSDUS
    70U,	// VPKSHSS
    70U,	// VPKSHUS
    70U,	// VPKSWSS
    70U,	// VPKSWUS
    70U,	// VPKUDUM
    70U,	// VPKUDUS
    70U,	// VPKUHUM
    70U,	// VPKUHUS
    70U,	// VPKUWUM
    70U,	// VPKUWUS
    70U,	// VPMSUMB
    70U,	// VPMSUMD
    70U,	// VPMSUMH
    70U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    70U,	// VRLB
    70U,	// VRLD
    70U,	// VRLDMI
    70U,	// VRLDNM
    70U,	// VRLH
    70U,	// VRLQ
    70U,	// VRLQMI
    70U,	// VRLQNM
    70U,	// VRLW
    70U,	// VRLWMI
    70U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    518U,	// VSEL
    1290U,	// VSHASIGMAD
    1290U,	// VSHASIGMAW
    70U,	// VSL
    70U,	// VSLB
    70U,	// VSLD
    2310U,	// VSLDBI
    1286U,	// VSLDOI
    70U,	// VSLH
    70U,	// VSLO
    70U,	// VSLQ
    70U,	// VSLV
    70U,	// VSLW
    28U,	// VSPLTB
    28U,	// VSPLTBs
    28U,	// VSPLTH
    28U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    28U,	// VSPLTW
    70U,	// VSR
    70U,	// VSRAB
    70U,	// VSRAD
    70U,	// VSRAH
    70U,	// VSRAQ
    70U,	// VSRAW
    70U,	// VSRB
    70U,	// VSRD
    2310U,	// VSRDBI
    70U,	// VSRH
    70U,	// VSRO
    70U,	// VSRQ
    70U,	// VSRV
    70U,	// VSRW
    0U,	// VSTRIBL
    0U,	// VSTRIBL_rec
    0U,	// VSTRIBR
    0U,	// VSTRIBR_rec
    0U,	// VSTRIHL
    0U,	// VSTRIHL_rec
    0U,	// VSTRIHR
    0U,	// VSTRIHR_rec
    70U,	// VSUBCUQ
    70U,	// VSUBCUW
    518U,	// VSUBECUQ
    518U,	// VSUBEUQM
    70U,	// VSUBFP
    70U,	// VSUBSBS
    70U,	// VSUBSHS
    70U,	// VSUBSWS
    70U,	// VSUBUBM
    70U,	// VSUBUBS
    70U,	// VSUBUDM
    70U,	// VSUBUHM
    70U,	// VSUBUHS
    70U,	// VSUBUQM
    70U,	// VSUBUWM
    70U,	// VSUBUWS
    70U,	// VSUM2SWS
    70U,	// VSUM4SBS
    70U,	// VSUM4SHS
    70U,	// VSUM4UBS
    70U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    70U,	// VXOR
    12U,	// V_SET0
    12U,	// V_SET0B
    12U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    70U,	// XOR
    70U,	// XOR8
    70U,	// XOR8_rec
    8U,	// XORI
    8U,	// XORI8
    8U,	// XORIS
    8U,	// XORIS8
    70U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    70U,	// XSADDDP
    70U,	// XSADDQP
    70U,	// XSADDQPO
    70U,	// XSADDSP
    70U,	// XSCMPEQDP
    70U,	// XSCMPEQQP
    70U,	// XSCMPEXPDP
    70U,	// XSCMPEXPQP
    70U,	// XSCMPGEDP
    70U,	// XSCMPGEQP
    70U,	// XSCMPGTDP
    70U,	// XSCMPGTQP
    70U,	// XSCMPODP
    70U,	// XSCMPOQP
    70U,	// XSCMPUDP
    70U,	// XSCMPUQP
    70U,	// XSCPSGNDP
    70U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSQZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUQZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSQQP
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUQQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    70U,	// XSDIVDP
    70U,	// XSDIVQP
    70U,	// XSDIVQPO
    70U,	// XSDIVSP
    70U,	// XSIEXPDP
    70U,	// XSIEXPQP
    86U,	// XSMADDADP
    86U,	// XSMADDASP
    86U,	// XSMADDMDP
    86U,	// XSMADDMSP
    86U,	// XSMADDQP
    86U,	// XSMADDQPO
    70U,	// XSMAXCDP
    70U,	// XSMAXCQP
    70U,	// XSMAXDP
    70U,	// XSMAXJDP
    70U,	// XSMINCDP
    70U,	// XSMINCQP
    70U,	// XSMINDP
    70U,	// XSMINJDP
    86U,	// XSMSUBADP
    86U,	// XSMSUBASP
    86U,	// XSMSUBMDP
    86U,	// XSMSUBMSP
    86U,	// XSMSUBQP
    86U,	// XSMSUBQPO
    70U,	// XSMULDP
    70U,	// XSMULQP
    70U,	// XSMULQPO
    70U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSDPs
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    86U,	// XSNMADDADP
    86U,	// XSNMADDASP
    86U,	// XSNMADDMDP
    86U,	// XSNMADDMSP
    86U,	// XSNMADDQP
    86U,	// XSNMADDQPO
    86U,	// XSNMSUBADP
    86U,	// XSNMSUBASP
    86U,	// XSNMSUBMDP
    86U,	// XSNMSUBMSP
    86U,	// XSNMSUBQP
    86U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    70U,	// XSSUBDP
    70U,	// XSSUBQP
    70U,	// XSSUBQPO
    70U,	// XSSUBSP
    70U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    34U,	// XSTSTDCDP
    34U,	// XSTSTDCQP
    34U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    70U,	// XVADDDP
    70U,	// XVADDSP
    70U,	// XVBF16GER2
    86U,	// XVBF16GER2NN
    86U,	// XVBF16GER2NP
    86U,	// XVBF16GER2PN
    86U,	// XVBF16GER2PP
    70U,	// XVBF16GER2W
    86U,	// XVBF16GER2WNN
    86U,	// XVBF16GER2WNP
    86U,	// XVBF16GER2WPN
    86U,	// XVBF16GER2WPP
    70U,	// XVCMPEQDP
    70U,	// XVCMPEQDP_rec
    70U,	// XVCMPEQSP
    70U,	// XVCMPEQSP_rec
    70U,	// XVCMPGEDP
    70U,	// XVCMPGEDP_rec
    70U,	// XVCMPGESP
    70U,	// XVCMPGESP_rec
    70U,	// XVCMPGTDP
    70U,	// XVCMPGTDP_rec
    70U,	// XVCMPGTSP
    70U,	// XVCMPGTSP_rec
    70U,	// XVCPSGNDP
    70U,	// XVCPSGNSP
    0U,	// XVCVBF16SPN
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPBF16
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    70U,	// XVDIVDP
    70U,	// XVDIVSP
    70U,	// XVF16GER2
    86U,	// XVF16GER2NN
    86U,	// XVF16GER2NP
    86U,	// XVF16GER2PN
    86U,	// XVF16GER2PP
    70U,	// XVF16GER2W
    86U,	// XVF16GER2WNN
    86U,	// XVF16GER2WNP
    86U,	// XVF16GER2WPN
    86U,	// XVF16GER2WPP
    70U,	// XVF32GER
    86U,	// XVF32GERNN
    86U,	// XVF32GERNP
    86U,	// XVF32GERPN
    86U,	// XVF32GERPP
    70U,	// XVF32GERW
    86U,	// XVF32GERWNN
    86U,	// XVF32GERWNP
    86U,	// XVF32GERWPN
    86U,	// XVF32GERWPP
    70U,	// XVF64GER
    86U,	// XVF64GERNN
    86U,	// XVF64GERNP
    86U,	// XVF64GERPN
    86U,	// XVF64GERPP
    70U,	// XVF64GERW
    86U,	// XVF64GERWNN
    86U,	// XVF64GERWNP
    86U,	// XVF64GERWPN
    86U,	// XVF64GERWPP
    70U,	// XVI16GER2
    86U,	// XVI16GER2PP
    70U,	// XVI16GER2S
    86U,	// XVI16GER2SPP
    70U,	// XVI16GER2SW
    86U,	// XVI16GER2SWPP
    70U,	// XVI16GER2W
    86U,	// XVI16GER2WPP
    70U,	// XVI4GER8
    86U,	// XVI4GER8PP
    70U,	// XVI4GER8W
    86U,	// XVI4GER8WPP
    70U,	// XVI8GER4
    86U,	// XVI8GER4PP
    86U,	// XVI8GER4SPP
    70U,	// XVI8GER4W
    86U,	// XVI8GER4WPP
    86U,	// XVI8GER4WSPP
    70U,	// XVIEXPDP
    70U,	// XVIEXPSP
    86U,	// XVMADDADP
    86U,	// XVMADDASP
    86U,	// XVMADDMDP
    86U,	// XVMADDMSP
    70U,	// XVMAXDP
    70U,	// XVMAXSP
    70U,	// XVMINDP
    70U,	// XVMINSP
    86U,	// XVMSUBADP
    86U,	// XVMSUBASP
    86U,	// XVMSUBMDP
    86U,	// XVMSUBMSP
    70U,	// XVMULDP
    70U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    86U,	// XVNMADDADP
    86U,	// XVNMADDASP
    86U,	// XVNMADDMDP
    86U,	// XVNMADDMSP
    86U,	// XVNMSUBADP
    86U,	// XVNMSUBASP
    86U,	// XVNMSUBMDP
    86U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    70U,	// XVSUBDP
    70U,	// XVSUBSP
    70U,	// XVTDIVDP
    70U,	// XVTDIVSP
    0U,	// XVTLSBB
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    34U,	// XVTSTDCDP
    34U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    518U,	// XXBLENDVB
    518U,	// XXBLENDVD
    518U,	// XXBLENDVH
    518U,	// XXBLENDVW
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    20998U,	// XXEVAL
    36U,	// XXEXTRACTUW
    38U,	// XXGENPCVBM
    38U,	// XXGENPCVDM
    38U,	// XXGENPCVHM
    38U,	// XXGENPCVWM
    40U,	// XXINSERTW
    70U,	// XXLAND
    70U,	// XXLANDC
    70U,	// XXLEQV
    12U,	// XXLEQVOnes
    70U,	// XXLNAND
    70U,	// XXLNOR
    70U,	// XXLOR
    70U,	// XXLORC
    70U,	// XXLORf
    70U,	// XXLXOR
    12U,	// XXLXORdpz
    12U,	// XXLXORspz
    12U,	// XXLXORz
    0U,	// XXMFACC
    0U,	// XXMFACCW
    70U,	// XXMRGHW
    70U,	// XXMRGLW
    0U,	// XXMTACC
    0U,	// XXMTACCW
    86U,	// XXPERM
    774U,	// XXPERMDI
    2578U,	// XXPERMDIs
    86U,	// XXPERMR
    37382U,	// XXPERMX
    518U,	// XXSEL
    0U,	// XXSETACCZ
    0U,	// XXSETACCZW
    774U,	// XXSLDWI
    2578U,	// XXSLDWIs
    86U,	// XXSPLTI32DX
    0U,	// XXSPLTIB
    0U,	// XXSPLTIDP
    0U,	// XXSPLTIW
    14U,	// XXSPLTW
    14U,	// XXSPLTWs
    42U,	// gBC
    44U,	// gBCA
    0U,	// gBCAat
    70U,	// gBCCTR
    70U,	// gBCCTRL
    42U,	// gBCL
    44U,	// gBCLA
    0U,	// gBCLAat
    70U,	// gBCLR
    70U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ATOMIC_CMP_SWAP_I128
    0U,	// ATOMIC_LOAD_ADD_I128
    0U,	// ATOMIC_LOAD_AND_I128
    0U,	// ATOMIC_LOAD_NAND_I128
    0U,	// ATOMIC_LOAD_OR_I128
    0U,	// ATOMIC_LOAD_SUB_I128
    0U,	// ATOMIC_LOAD_XOR_I128
    0U,	// ATOMIC_SWAP_I128
    0U,	// BUILD_QUADWORD
    0U,	// BUILD_UACC
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    0U,	// CLRLSLWI
    0U,	// CLRLSLWI_rec
    0U,	// CLRRDI
    0U,	// CLRRDI_rec
    0U,	// CLRRWI
    0U,	// CLRRWI_rec
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFPS
    0U,	// DCBFx
    0U,	// DCBSTPS
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    0U,	// EXTLWI
    0U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    0U,	// EXTRWI
    0U,	// EXTRWI_rec
    0U,	// INSLWI
    0U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    0U,	// INSRWI
    0U,	// INSRWI_rec
    0U,	// KILL_PAIR
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    0U,	// RLWIMIbm
    0U,	// RLWIMIbm_rec
    0U,	// RLWINMbm
    0U,	// RLWINMbm_rec
    0U,	// RLWNMbm
    0U,	// RLWNMbm_rec
    0U,	// ROTRDI
    0U,	// ROTRDI_rec
    0U,	// ROTRWI
    0U,	// ROTRWI_rec
    0U,	// SLDI
    0U,	// SLDI_rec
    0U,	// SLWI
    0U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    0U,	// SRDI
    0U,	// SRDI_rec
    0U,	// SRWI
    0U,	// SRWI_rec
    0U,	// STIWX
    0U,	// SUBI
    0U,	// SUBIC
    0U,	// SUBIC_rec
    0U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    0U,	// ADD4
    0U,	// ADD4O
    0U,	// ADD4O_rec
    0U,	// ADD4TLS
    0U,	// ADD4_rec
    0U,	// ADD8
    0U,	// ADD8O
    0U,	// ADD8O_rec
    0U,	// ADD8TLS
    0U,	// ADD8TLS_
    0U,	// ADD8_rec
    0U,	// ADDC
    0U,	// ADDC8
    0U,	// ADDC8O
    0U,	// ADDC8O_rec
    0U,	// ADDC8_rec
    0U,	// ADDCO
    0U,	// ADDCO_rec
    0U,	// ADDC_rec
    0U,	// ADDE
    0U,	// ADDE8
    0U,	// ADDE8O
    0U,	// ADDE8O_rec
    0U,	// ADDE8_rec
    0U,	// ADDEO
    0U,	// ADDEO_rec
    0U,	// ADDEX
    0U,	// ADDEX8
    0U,	// ADDE_rec
    0U,	// ADDI
    0U,	// ADDI8
    0U,	// ADDIC
    0U,	// ADDIC8
    0U,	// ADDIC_rec
    0U,	// ADDIS
    0U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItoc
    0U,	// ADDItoc8
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND8
    0U,	// AND8_rec
    0U,	// ANDC
    0U,	// ANDC8
    0U,	// ANDC8_rec
    0U,	// ANDC_rec
    0U,	// ANDI8_rec
    0U,	// ANDIS8_rec
    0U,	// ANDIS_rec
    0U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    0U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    0U,	// BCDADD_rec
    0U,	// BCDCFN_rec
    0U,	// BCDCFSQ_rec
    0U,	// BCDCFZ_rec
    0U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    0U,	// BCDCTZ_rec
    0U,	// BCDSETSGN_rec
    0U,	// BCDSR_rec
    0U,	// BCDSUB_rec
    0U,	// BCDS_rec
    0U,	// BCDTRUNC_rec
    0U,	// BCDUS_rec
    0U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL8_LDinto_toc_RM
    0U,	// BCTRL8_RM
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCTRL_LWZinto_toc_RM
    0U,	// BCTRL_RM
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_RM
    0U,	// BL8_NOP_TLS
    0U,	// BL8_NOTOC
    0U,	// BL8_NOTOC_RM
    0U,	// BL8_NOTOC_TLS
    0U,	// BL8_RM
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLA8_NOP_RM
    0U,	// BLA8_RM
    0U,	// BLA_RM
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_NOP_RM
    0U,	// BL_RM
    0U,	// BL_TLS
    0U,	// BPERMD
    0U,	// BRD
    0U,	// BRH
    0U,	// BRH8
    0U,	// BRINC
    0U,	// BRW
    0U,	// BRW8
    0U,	// CFUGED
    0U,	// CLRBHRB
    0U,	// CMPB
    0U,	// CMPB8
    0U,	// CMPD
    0U,	// CMPDI
    0U,	// CMPEQB
    0U,	// CMPLD
    0U,	// CMPLDI
    0U,	// CMPLW
    0U,	// CMPLWI
    0U,	// CMPRB
    0U,	// CMPRB8
    0U,	// CMPW
    0U,	// CMPWI
    0U,	// CNTLZD
    0U,	// CNTLZDM
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    0U,	// CNTTZDM
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    0U,	// CP_COPY
    0U,	// CP_COPY8
    0U,	// CP_PASTE8_rec
    0U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    0U,	// CRAND
    0U,	// CRANDC
    0U,	// CREQV
    0U,	// CRNAND
    0U,	// CRNOR
    0U,	// CRNOT
    0U,	// CROR
    0U,	// CRORC
    0U,	// CRSET
    0U,	// CRUNSET
    0U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCCCI
    0U,	// DIVD
    0U,	// DIVDE
    0U,	// DIVDEO
    0U,	// DIVDEO_rec
    0U,	// DIVDEU
    0U,	// DIVDEUO
    0U,	// DIVDEUO_rec
    0U,	// DIVDEU_rec
    0U,	// DIVDE_rec
    0U,	// DIVDO
    0U,	// DIVDO_rec
    0U,	// DIVDU
    0U,	// DIVDUO
    0U,	// DIVDUO_rec
    0U,	// DIVDU_rec
    0U,	// DIVD_rec
    0U,	// DIVW
    0U,	// DIVWE
    0U,	// DIVWEO
    0U,	// DIVWEO_rec
    0U,	// DIVWEU
    0U,	// DIVWEUO
    0U,	// DIVWEUO_rec
    0U,	// DIVWEU_rec
    0U,	// DIVWE_rec
    0U,	// DIVWO
    0U,	// DIVWO_rec
    0U,	// DIVWU
    0U,	// DIVWUO
    0U,	// DIVWUO_rec
    0U,	// DIVWU_rec
    0U,	// DIVW_rec
    0U,	// DMMR
    0U,	// DMSETDMRZ
    0U,	// DMXOR
    0U,	// DMXXEXTFDMR256
    0U,	// DMXXEXTFDMR512
    0U,	// DMXXEXTFDMR512_HI
    0U,	// DMXXINSTFDMR256
    0U,	// DMXXINSTFDMR512
    0U,	// DMXXINSTFDMR512_HI
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// DecreaseCTR8loop
    0U,	// DecreaseCTRloop
    0U,	// EFDABS
    0U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    0U,	// EFDCMPEQ
    0U,	// EFDCMPGT
    0U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    0U,	// EFDDIV
    0U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    0U,	// EFDSUB
    0U,	// EFDTSTEQ
    0U,	// EFDTSTGT
    0U,	// EFDTSTLT
    0U,	// EFSABS
    0U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    0U,	// EFSCMPEQ
    0U,	// EFSCMPGT
    0U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    0U,	// EFSDIV
    0U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    0U,	// EFSSUB
    0U,	// EFSTSTEQ
    0U,	// EFSTSTGT
    0U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    0U,	// EQV
    0U,	// EQV8
    0U,	// EQV8_rec
    0U,	// EQV_rec
    0U,	// EVABS
    0U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    0U,	// EVADDW
    0U,	// EVAND
    0U,	// EVANDC
    0U,	// EVCMPEQ
    0U,	// EVCMPGTS
    0U,	// EVCMPGTU
    0U,	// EVCMPLTS
    0U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    0U,	// EVDIVWS
    0U,	// EVDIVWU
    0U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    0U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    0U,	// EVFSCMPEQ
    0U,	// EVFSCMPGT
    0U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    0U,	// EVFSDIV
    0U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    0U,	// EVFSSUB
    0U,	// EVFSTSTEQ
    0U,	// EVFSTSTGT
    0U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    0U,	// EVMERGEHI
    0U,	// EVMERGEHILO
    0U,	// EVMERGELO
    0U,	// EVMERGELOHI
    0U,	// EVMHEGSMFAA
    0U,	// EVMHEGSMFAN
    0U,	// EVMHEGSMIAA
    0U,	// EVMHEGSMIAN
    0U,	// EVMHEGUMIAA
    0U,	// EVMHEGUMIAN
    0U,	// EVMHESMF
    0U,	// EVMHESMFA
    0U,	// EVMHESMFAAW
    0U,	// EVMHESMFANW
    0U,	// EVMHESMI
    0U,	// EVMHESMIA
    0U,	// EVMHESMIAAW
    0U,	// EVMHESMIANW
    0U,	// EVMHESSF
    0U,	// EVMHESSFA
    0U,	// EVMHESSFAAW
    0U,	// EVMHESSFANW
    0U,	// EVMHESSIAAW
    0U,	// EVMHESSIANW
    0U,	// EVMHEUMI
    0U,	// EVMHEUMIA
    0U,	// EVMHEUMIAAW
    0U,	// EVMHEUMIANW
    0U,	// EVMHEUSIAAW
    0U,	// EVMHEUSIANW
    0U,	// EVMHOGSMFAA
    0U,	// EVMHOGSMFAN
    0U,	// EVMHOGSMIAA
    0U,	// EVMHOGSMIAN
    0U,	// EVMHOGUMIAA
    0U,	// EVMHOGUMIAN
    0U,	// EVMHOSMF
    0U,	// EVMHOSMFA
    0U,	// EVMHOSMFAAW
    0U,	// EVMHOSMFANW
    0U,	// EVMHOSMI
    0U,	// EVMHOSMIA
    0U,	// EVMHOSMIAAW
    0U,	// EVMHOSMIANW
    0U,	// EVMHOSSF
    0U,	// EVMHOSSFA
    0U,	// EVMHOSSFAAW
    0U,	// EVMHOSSFANW
    0U,	// EVMHOSSIAAW
    0U,	// EVMHOSSIANW
    0U,	// EVMHOUMI
    0U,	// EVMHOUMIA
    0U,	// EVMHOUMIAAW
    0U,	// EVMHOUMIANW
    0U,	// EVMHOUSIAAW
    0U,	// EVMHOUSIANW
    0U,	// EVMRA
    0U,	// EVMWHSMF
    0U,	// EVMWHSMFA
    0U,	// EVMWHSMI
    0U,	// EVMWHSMIA
    0U,	// EVMWHSSF
    0U,	// EVMWHSSFA
    0U,	// EVMWHUMI
    0U,	// EVMWHUMIA
    0U,	// EVMWLSMIAAW
    0U,	// EVMWLSMIANW
    0U,	// EVMWLSSIAAW
    0U,	// EVMWLSSIANW
    0U,	// EVMWLUMI
    0U,	// EVMWLUMIA
    0U,	// EVMWLUMIAAW
    0U,	// EVMWLUMIANW
    0U,	// EVMWLUSIAAW
    0U,	// EVMWLUSIANW
    0U,	// EVMWSMF
    0U,	// EVMWSMFA
    0U,	// EVMWSMFAA
    0U,	// EVMWSMFAN
    0U,	// EVMWSMI
    0U,	// EVMWSMIA
    0U,	// EVMWSMIAA
    0U,	// EVMWSMIAN
    0U,	// EVMWSSF
    0U,	// EVMWSSFA
    0U,	// EVMWSSFAA
    0U,	// EVMWSSFAN
    0U,	// EVMWUMI
    0U,	// EVMWUMIA
    0U,	// EVMWUMIAA
    0U,	// EVMWUMIAN
    0U,	// EVNAND
    0U,	// EVNEG
    0U,	// EVNOR
    0U,	// EVOR
    0U,	// EVORC
    0U,	// EVRLW
    0U,	// EVRLWI
    0U,	// EVRNDW
    0U,	// EVSEL
    0U,	// EVSLW
    0U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    0U,	// EVSRWIS
    0U,	// EVSRWIU
    0U,	// EVSRWS
    0U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    0U,	// EVSUBFW
    0U,	// EVSUBIFW
    0U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    0U,	// EXTSWSLI
    0U,	// EXTSWSLI_32_64
    0U,	// EXTSWSLI_32_64_rec
    0U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    0U,	// FADD
    0U,	// FADDS
    0U,	// FADDS_rec
    0U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    0U,	// FCMPOD
    0U,	// FCMPOS
    0U,	// FCMPUD
    0U,	// FCMPUS
    0U,	// FCPSGND
    0U,	// FCPSGND_rec
    0U,	// FCPSGNS
    0U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    0U,	// FDIV
    0U,	// FDIVS
    0U,	// FDIVS_rec
    0U,	// FDIV_rec
    0U,	// FMADD
    0U,	// FMADDS
    0U,	// FMADDS_rec
    0U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    0U,	// FMSUB
    0U,	// FMSUBS
    0U,	// FMSUBS_rec
    0U,	// FMSUB_rec
    0U,	// FMUL
    0U,	// FMULS
    0U,	// FMULS_rec
    0U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    0U,	// FNMADD
    0U,	// FNMADDS
    0U,	// FNMADDS_rec
    0U,	// FNMADD_rec
    0U,	// FNMSUB
    0U,	// FNMSUBS
    0U,	// FNMSUBS_rec
    0U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    0U,	// FSELD
    0U,	// FSELD_rec
    0U,	// FSELS
    0U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    0U,	// FSUB
    0U,	// FSUBS
    0U,	// FSUBS_rec
    0U,	// FSUB_rec
    0U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsADDR32AIX
    0U,	// GETtlsADDR64AIX
    0U,	// GETtlsADDRPCREL
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// GETtlsldADDRPCREL
    0U,	// HASHCHK
    0U,	// HASHCHK8
    0U,	// HASHCHKP
    0U,	// HASHCHKP8
    0U,	// HASHST
    0U,	// HASHST8
    0U,	// HASHSTP
    0U,	// HASHSTP8
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    0U,	// ISEL
    0U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LA8
    0U,	// LBARX
    0U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    0U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    0U,	// LBZXTLS
    0U,	// LBZXTLS_
    0U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    0U,	// LDARXL
    0U,	// LDAT
    0U,	// LDBRX
    0U,	// LDCIX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    0U,	// LDXTLS
    0U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    0U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    0U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    0U,	// LHZXTLS
    0U,	// LHZXTLS_
    0U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    0U,	// LQ
    0U,	// LQARX
    0U,	// LQARXL
    0U,	// LQX_PSEUDO
    0U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    0U,	// LWARXL
    0U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    0U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    0U,	// LWZXTLS
    0U,	// LWZXTLS_
    0U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    0U,	// LXVKQ
    0U,	// LXVL
    0U,	// LXVLL
    0U,	// LXVP
    0U,	// LXVPRL
    0U,	// LXVPRLL
    0U,	// LXVPX
    0U,	// LXVRBX
    0U,	// LXVRDX
    0U,	// LXVRHX
    0U,	// LXVRL
    0U,	// LXVRLL
    0U,	// LXVRWX
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    0U,	// MADDHD
    0U,	// MADDHDU
    0U,	// MADDLD
    0U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFUDSCR
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    0U,	// MODSD
    0U,	// MODSW
    0U,	// MODUD
    0U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8loop
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    0U,	// MTFSF
    0U,	// MTFSFI
    0U,	// MTFSFI_rec
    0U,	// MTFSFIb
    0U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTUDSCR
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRBM
    0U,	// MTVSRBMI
    0U,	// MTVSRD
    0U,	// MTVSRDD
    0U,	// MTVSRDM
    0U,	// MTVSRHM
    0U,	// MTVSRQM
    0U,	// MTVSRWA
    0U,	// MTVSRWM
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    0U,	// MULHD
    0U,	// MULHDU
    0U,	// MULHDU_rec
    0U,	// MULHD_rec
    0U,	// MULHW
    0U,	// MULHWU
    0U,	// MULHWU_rec
    0U,	// MULHW_rec
    0U,	// MULLD
    0U,	// MULLDO
    0U,	// MULLDO_rec
    0U,	// MULLD_rec
    0U,	// MULLI
    0U,	// MULLI8
    0U,	// MULLW
    0U,	// MULLWO
    0U,	// MULLWO_rec
    0U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    0U,	// NAND
    0U,	// NAND8
    0U,	// NAND8_rec
    0U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    0U,	// NOR
    0U,	// NOR8
    0U,	// NOR8_rec
    0U,	// NOR_rec
    0U,	// OR
    0U,	// OR8
    0U,	// OR8_rec
    0U,	// ORC
    0U,	// ORC8
    0U,	// ORC8_rec
    0U,	// ORC_rec
    0U,	// ORI
    0U,	// ORI8
    0U,	// ORIS
    0U,	// ORIS8
    0U,	// OR_rec
    0U,	// PADDI
    0U,	// PADDI8
    0U,	// PADDI8pc
    0U,	// PADDIdtprel
    0U,	// PADDIpc
    0U,	// PDEPD
    0U,	// PEXTD
    0U,	// PLBZ
    0U,	// PLBZ8
    0U,	// PLBZ8pc
    0U,	// PLBZpc
    0U,	// PLD
    0U,	// PLDpc
    0U,	// PLFD
    0U,	// PLFDpc
    0U,	// PLFS
    0U,	// PLFSpc
    0U,	// PLHA
    0U,	// PLHA8
    0U,	// PLHA8pc
    0U,	// PLHApc
    0U,	// PLHZ
    0U,	// PLHZ8
    0U,	// PLHZ8pc
    0U,	// PLHZpc
    0U,	// PLI
    0U,	// PLI8
    0U,	// PLWA
    0U,	// PLWA8
    0U,	// PLWA8pc
    0U,	// PLWApc
    0U,	// PLWZ
    0U,	// PLWZ8
    0U,	// PLWZ8pc
    0U,	// PLWZpc
    0U,	// PLXSD
    0U,	// PLXSDpc
    0U,	// PLXSSP
    0U,	// PLXSSPpc
    0U,	// PLXV
    0U,	// PLXVP
    0U,	// PLXVPpc
    0U,	// PLXVpc
    0U,	// PMXVBF16GER2
    2U,	// PMXVBF16GER2NN
    2U,	// PMXVBF16GER2NP
    2U,	// PMXVBF16GER2PN
    2U,	// PMXVBF16GER2PP
    0U,	// PMXVBF16GER2W
    2U,	// PMXVBF16GER2WNN
    2U,	// PMXVBF16GER2WNP
    2U,	// PMXVBF16GER2WPN
    2U,	// PMXVBF16GER2WPP
    0U,	// PMXVF16GER2
    2U,	// PMXVF16GER2NN
    2U,	// PMXVF16GER2NP
    2U,	// PMXVF16GER2PN
    2U,	// PMXVF16GER2PP
    0U,	// PMXVF16GER2W
    2U,	// PMXVF16GER2WNN
    2U,	// PMXVF16GER2WNP
    2U,	// PMXVF16GER2WPN
    2U,	// PMXVF16GER2WPP
    4U,	// PMXVF32GER
    0U,	// PMXVF32GERNN
    0U,	// PMXVF32GERNP
    0U,	// PMXVF32GERPN
    0U,	// PMXVF32GERPP
    4U,	// PMXVF32GERW
    0U,	// PMXVF32GERWNN
    0U,	// PMXVF32GERWNP
    0U,	// PMXVF32GERWPN
    0U,	// PMXVF32GERWPP
    0U,	// PMXVF64GER
    0U,	// PMXVF64GERNN
    0U,	// PMXVF64GERNP
    0U,	// PMXVF64GERPN
    0U,	// PMXVF64GERPP
    0U,	// PMXVF64GERW
    0U,	// PMXVF64GERWNN
    0U,	// PMXVF64GERWNP
    0U,	// PMXVF64GERWPN
    0U,	// PMXVF64GERWPP
    0U,	// PMXVI16GER2
    2U,	// PMXVI16GER2PP
    0U,	// PMXVI16GER2S
    2U,	// PMXVI16GER2SPP
    0U,	// PMXVI16GER2SW
    2U,	// PMXVI16GER2SWPP
    0U,	// PMXVI16GER2W
    2U,	// PMXVI16GER2WPP
    16U,	// PMXVI4GER8
    6U,	// PMXVI4GER8PP
    16U,	// PMXVI4GER8W
    6U,	// PMXVI4GER8WPP
    32U,	// PMXVI8GER4
    8U,	// PMXVI8GER4PP
    8U,	// PMXVI8GER4SPP
    32U,	// PMXVI8GER4W
    8U,	// PMXVI8GER4WPP
    8U,	// PMXVI8GER4WSPP
    0U,	// POPCNTB
    0U,	// POPCNTB8
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    0U,	// PREPARE_PROBED_ALLOCA_32
    0U,	// PREPARE_PROBED_ALLOCA_64
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    0U,	// PROBED_ALLOCA_32
    0U,	// PROBED_ALLOCA_64
    0U,	// PROBED_STACKALLOC_32
    0U,	// PROBED_STACKALLOC_64
    0U,	// PSTB
    0U,	// PSTB8
    0U,	// PSTB8pc
    0U,	// PSTBpc
    0U,	// PSTD
    0U,	// PSTDpc
    0U,	// PSTFD
    0U,	// PSTFDpc
    0U,	// PSTFS
    0U,	// PSTFSpc
    0U,	// PSTH
    0U,	// PSTH8
    0U,	// PSTH8pc
    0U,	// PSTHpc
    0U,	// PSTW
    0U,	// PSTW8
    0U,	// PSTW8pc
    0U,	// PSTWpc
    0U,	// PSTXSD
    0U,	// PSTXSDpc
    0U,	// PSTXSSP
    0U,	// PSTXSSPpc
    0U,	// PSTXV
    0U,	// PSTXVP
    0U,	// PSTXVPpc
    0U,	// PSTXVpc
    0U,	// PseudoEIEIO
    0U,	// QVALIGNI
    0U,	// QVALIGNIb
    0U,	// QVALIGNIs
    0U,	// QVESPLATI
    0U,	// QVESPLATIb
    0U,	// QVESPLATIs
    0U,	// QVFABS
    0U,	// QVFABSs
    0U,	// QVFADD
    0U,	// QVFADDS
    0U,	// QVFADDSs
    0U,	// QVFCFID
    0U,	// QVFCFIDS
    0U,	// QVFCFIDU
    0U,	// QVFCFIDUS
    0U,	// QVFCFIDb
    0U,	// QVFCMPEQ
    0U,	// QVFCMPEQb
    0U,	// QVFCMPEQbs
    0U,	// QVFCMPGT
    0U,	// QVFCMPGTb
    0U,	// QVFCMPGTbs
    0U,	// QVFCMPLT
    0U,	// QVFCMPLTb
    0U,	// QVFCMPLTbs
    0U,	// QVFCPSGN
    0U,	// QVFCPSGNs
    0U,	// QVFCTID
    0U,	// QVFCTIDU
    0U,	// QVFCTIDUZ
    0U,	// QVFCTIDZ
    0U,	// QVFCTIDb
    0U,	// QVFCTIW
    0U,	// QVFCTIWU
    0U,	// QVFCTIWUZ
    0U,	// QVFCTIWZ
    0U,	// QVFLOGICAL
    0U,	// QVFLOGICALb
    0U,	// QVFLOGICALs
    0U,	// QVFMADD
    0U,	// QVFMADDS
    0U,	// QVFMADDSs
    0U,	// QVFMR
    0U,	// QVFMRb
    0U,	// QVFMRs
    0U,	// QVFMSUB
    0U,	// QVFMSUBS
    0U,	// QVFMSUBSs
    0U,	// QVFMUL
    0U,	// QVFMULS
    0U,	// QVFMULSs
    0U,	// QVFNABS
    0U,	// QVFNABSs
    0U,	// QVFNEG
    0U,	// QVFNEGs
    0U,	// QVFNMADD
    0U,	// QVFNMADDS
    0U,	// QVFNMADDSs
    0U,	// QVFNMSUB
    0U,	// QVFNMSUBS
    0U,	// QVFNMSUBSs
    0U,	// QVFPERM
    0U,	// QVFPERMs
    0U,	// QVFRE
    0U,	// QVFRES
    0U,	// QVFRESs
    0U,	// QVFRIM
    0U,	// QVFRIMs
    0U,	// QVFRIN
    0U,	// QVFRINs
    0U,	// QVFRIP
    0U,	// QVFRIPs
    0U,	// QVFRIZ
    0U,	// QVFRIZs
    0U,	// QVFRSP
    0U,	// QVFRSPs
    0U,	// QVFRSQRTE
    0U,	// QVFRSQRTES
    0U,	// QVFRSQRTESs
    0U,	// QVFSEL
    0U,	// QVFSELb
    0U,	// QVFSELbb
    0U,	// QVFSELbs
    0U,	// QVFSUB
    0U,	// QVFSUBS
    0U,	// QVFSUBSs
    0U,	// QVFTSTNAN
    0U,	// QVFTSTNANb
    0U,	// QVFTSTNANbs
    0U,	// QVFXMADD
    0U,	// QVFXMADDS
    0U,	// QVFXMUL
    0U,	// QVFXMULS
    0U,	// QVFXXCPNMADD
    0U,	// QVFXXCPNMADDS
    0U,	// QVFXXMADD
    0U,	// QVFXXMADDS
    0U,	// QVFXXNPMADD
    0U,	// QVFXXNPMADDS
    0U,	// QVGPCI
    0U,	// QVLFCDUX
    0U,	// QVLFCDUXA
    0U,	// QVLFCDX
    0U,	// QVLFCDXA
    0U,	// QVLFCSUX
    0U,	// QVLFCSUXA
    0U,	// QVLFCSX
    0U,	// QVLFCSXA
    0U,	// QVLFCSXs
    0U,	// QVLFDUX
    0U,	// QVLFDUXA
    0U,	// QVLFDX
    0U,	// QVLFDXA
    0U,	// QVLFDXb
    0U,	// QVLFIWAX
    0U,	// QVLFIWAXA
    0U,	// QVLFIWZX
    0U,	// QVLFIWZXA
    0U,	// QVLFSUX
    0U,	// QVLFSUXA
    0U,	// QVLFSX
    0U,	// QVLFSXA
    0U,	// QVLFSXb
    0U,	// QVLFSXs
    0U,	// QVLPCLDX
    0U,	// QVLPCLSX
    0U,	// QVLPCLSXint
    0U,	// QVLPCRDX
    0U,	// QVLPCRSX
    0U,	// QVSTFCDUX
    0U,	// QVSTFCDUXA
    0U,	// QVSTFCDUXI
    0U,	// QVSTFCDUXIA
    0U,	// QVSTFCDX
    0U,	// QVSTFCDXA
    0U,	// QVSTFCDXI
    0U,	// QVSTFCDXIA
    0U,	// QVSTFCSUX
    0U,	// QVSTFCSUXA
    0U,	// QVSTFCSUXI
    0U,	// QVSTFCSUXIA
    0U,	// QVSTFCSX
    0U,	// QVSTFCSXA
    0U,	// QVSTFCSXI
    0U,	// QVSTFCSXIA
    0U,	// QVSTFCSXs
    0U,	// QVSTFDUX
    0U,	// QVSTFDUXA
    0U,	// QVSTFDUXI
    0U,	// QVSTFDUXIA
    0U,	// QVSTFDX
    0U,	// QVSTFDXA
    0U,	// QVSTFDXI
    0U,	// QVSTFDXIA
    0U,	// QVSTFDXb
    0U,	// QVSTFIWX
    0U,	// QVSTFIWXA
    0U,	// QVSTFSUX
    0U,	// QVSTFSUXA
    0U,	// QVSTFSUXI
    0U,	// QVSTFSUXIA
    0U,	// QVSTFSUXs
    0U,	// QVSTFSX
    0U,	// QVSTFSXA
    0U,	// QVSTFSXI
    0U,	// QVSTFSXIA
    0U,	// QVSTFSXs
    0U,	// RESTORE_ACC
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_QUADWORD
    0U,	// RESTORE_UACC
    0U,	// RESTORE_WACC
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    0U,	// RLDCL
    0U,	// RLDCL_rec
    0U,	// RLDCR
    0U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    0U,	// RLDIMI
    0U,	// RLDIMI_rec
    0U,	// RLWIMI
    0U,	// RLWIMI8
    0U,	// RLWIMI8_rec
    0U,	// RLWIMI_rec
    1U,	// RLWINM
    1U,	// RLWINM8
    1U,	// RLWINM8_rec
    1U,	// RLWINM_rec
    1U,	// RLWNM
    1U,	// RLWNM8
    1U,	// RLWNM8_rec
    1U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_QBRC
    0U,	// SELECT_CC_QFRC
    0U,	// SELECT_CC_QSRC
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_QBRC
    0U,	// SELECT_QFRC
    0U,	// SELECT_QSRC
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETBC
    0U,	// SETBC8
    0U,	// SETBCR
    0U,	// SETBCR8
    0U,	// SETFLM
    0U,	// SETNBC
    0U,	// SETNBC8
    0U,	// SETNBCR
    0U,	// SETNBCR8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    0U,	// SLD
    0U,	// SLD_rec
    0U,	// SLW
    0U,	// SLW8
    0U,	// SLW8_rec
    0U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_ACC
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_QUADWORD
    0U,	// SPILL_UACC
    0U,	// SPILL_WACC
    0U,	// SPLIT_QUADWORD
    0U,	// SRAD
    0U,	// SRADI
    0U,	// SRADI_32
    0U,	// SRADI_rec
    0U,	// SRAD_rec
    0U,	// SRAW
    0U,	// SRAWI
    0U,	// SRAWI_rec
    0U,	// SRAW_rec
    0U,	// SRD
    0U,	// SRD_rec
    0U,	// SRW
    0U,	// SRW8
    0U,	// SRW8_rec
    0U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    0U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    0U,	// STBXTLS
    0U,	// STBXTLS_
    0U,	// STBXTLS_32
    0U,	// STD
    0U,	// STDAT
    0U,	// STDBRX
    0U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    0U,	// STDXTLS
    0U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    0U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    0U,	// STHXTLS
    0U,	// STHXTLS_
    0U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    0U,	// STQ
    0U,	// STQCX
    0U,	// STQX_PSEUDO
    0U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    0U,	// STWAT
    0U,	// STWBRX
    0U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    0U,	// STWXTLS
    0U,	// STWXTLS_
    0U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    0U,	// STXVL
    0U,	// STXVLL
    0U,	// STXVP
    0U,	// STXVPRL
    0U,	// STXVPRLL
    0U,	// STXVPX
    0U,	// STXVRBX
    0U,	// STXVRDX
    0U,	// STXVRHX
    0U,	// STXVRL
    0U,	// STXVRLL
    0U,	// STXVRWX
    0U,	// STXVW4X
    0U,	// STXVX
    0U,	// SUBF
    0U,	// SUBF8
    0U,	// SUBF8O
    0U,	// SUBF8O_rec
    0U,	// SUBF8_rec
    0U,	// SUBFC
    0U,	// SUBFC8
    0U,	// SUBFC8O
    0U,	// SUBFC8O_rec
    0U,	// SUBFC8_rec
    0U,	// SUBFCO
    0U,	// SUBFCO_rec
    0U,	// SUBFC_rec
    0U,	// SUBFE
    0U,	// SUBFE8
    0U,	// SUBFE8O
    0U,	// SUBFE8O_rec
    0U,	// SUBFE8_rec
    0U,	// SUBFEO
    0U,	// SUBFEO_rec
    0U,	// SUBFE_rec
    0U,	// SUBFIC
    0U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    0U,	// SUBFO
    0U,	// SUBFO_rec
    0U,	// SUBFUS
    0U,	// SUBFUS_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    0U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    0U,	// TABORTDC
    0U,	// TABORTDCI
    0U,	// TABORTWC
    0U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    0U,	// TD
    0U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    0U,	// TLBRE2
    0U,	// TLBSX
    0U,	// TLBSX2
    0U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    0U,	// TLBWE2
    0U,	// TLSGDAIX
    0U,	// TLSGDAIX8
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    0U,	// TW
    0U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UpdateGBR
    0U,	// VABSDUB
    0U,	// VABSDUH
    0U,	// VABSDUW
    0U,	// VADDCUQ
    0U,	// VADDCUW
    0U,	// VADDECUQ
    0U,	// VADDEUQM
    0U,	// VADDFP
    0U,	// VADDSBS
    0U,	// VADDSHS
    0U,	// VADDSWS
    0U,	// VADDUBM
    0U,	// VADDUBS
    0U,	// VADDUDM
    0U,	// VADDUHM
    0U,	// VADDUHS
    0U,	// VADDUQM
    0U,	// VADDUWM
    0U,	// VADDUWS
    0U,	// VAND
    0U,	// VANDC
    0U,	// VAVGSB
    0U,	// VAVGSH
    0U,	// VAVGSW
    0U,	// VAVGUB
    0U,	// VAVGUH
    0U,	// VAVGUW
    0U,	// VBPERMD
    0U,	// VBPERMQ
    0U,	// VCFSX
    0U,	// VCFSX_0
    0U,	// VCFUGED
    0U,	// VCFUX
    0U,	// VCFUX_0
    0U,	// VCIPHER
    0U,	// VCIPHERLAST
    0U,	// VCLRLB
    0U,	// VCLRRB
    0U,	// VCLZB
    0U,	// VCLZD
    0U,	// VCLZDM
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    0U,	// VCMPBFP
    0U,	// VCMPBFP_rec
    0U,	// VCMPEQFP
    0U,	// VCMPEQFP_rec
    0U,	// VCMPEQUB
    0U,	// VCMPEQUB_rec
    0U,	// VCMPEQUD
    0U,	// VCMPEQUD_rec
    0U,	// VCMPEQUH
    0U,	// VCMPEQUH_rec
    0U,	// VCMPEQUQ
    0U,	// VCMPEQUQ_rec
    0U,	// VCMPEQUW
    0U,	// VCMPEQUW_rec
    0U,	// VCMPGEFP
    0U,	// VCMPGEFP_rec
    0U,	// VCMPGTFP
    0U,	// VCMPGTFP_rec
    0U,	// VCMPGTSB
    0U,	// VCMPGTSB_rec
    0U,	// VCMPGTSD
    0U,	// VCMPGTSD_rec
    0U,	// VCMPGTSH
    0U,	// VCMPGTSH_rec
    0U,	// VCMPGTSQ
    0U,	// VCMPGTSQ_rec
    0U,	// VCMPGTSW
    0U,	// VCMPGTSW_rec
    0U,	// VCMPGTUB
    0U,	// VCMPGTUB_rec
    0U,	// VCMPGTUD
    0U,	// VCMPGTUD_rec
    0U,	// VCMPGTUH
    0U,	// VCMPGTUH_rec
    0U,	// VCMPGTUQ
    0U,	// VCMPGTUQ_rec
    0U,	// VCMPGTUW
    0U,	// VCMPGTUW_rec
    0U,	// VCMPNEB
    0U,	// VCMPNEB_rec
    0U,	// VCMPNEH
    0U,	// VCMPNEH_rec
    0U,	// VCMPNEW
    0U,	// VCMPNEW_rec
    0U,	// VCMPNEZB
    0U,	// VCMPNEZB_rec
    0U,	// VCMPNEZH
    0U,	// VCMPNEZH_rec
    0U,	// VCMPNEZW
    0U,	// VCMPNEZW_rec
    0U,	// VCMPSQ
    0U,	// VCMPUQ
    0U,	// VCNTMBB
    0U,	// VCNTMBD
    0U,	// VCNTMBH
    0U,	// VCNTMBW
    0U,	// VCTSXS
    0U,	// VCTSXS_0
    0U,	// VCTUXS
    0U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    0U,	// VCTZDM
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    0U,	// VDIVESD
    0U,	// VDIVESQ
    0U,	// VDIVESW
    0U,	// VDIVEUD
    0U,	// VDIVEUQ
    0U,	// VDIVEUW
    0U,	// VDIVSD
    0U,	// VDIVSQ
    0U,	// VDIVSW
    0U,	// VDIVUD
    0U,	// VDIVUQ
    0U,	// VDIVUW
    0U,	// VEQV
    0U,	// VEXPANDBM
    0U,	// VEXPANDDM
    0U,	// VEXPANDHM
    0U,	// VEXPANDQM
    0U,	// VEXPANDWM
    0U,	// VEXPTEFP
    0U,	// VEXTDDVLX
    0U,	// VEXTDDVRX
    0U,	// VEXTDUBVLX
    0U,	// VEXTDUBVRX
    0U,	// VEXTDUHVLX
    0U,	// VEXTDUHVRX
    0U,	// VEXTDUWVLX
    0U,	// VEXTDUWVRX
    0U,	// VEXTRACTBM
    0U,	// VEXTRACTD
    0U,	// VEXTRACTDM
    0U,	// VEXTRACTHM
    0U,	// VEXTRACTQM
    0U,	// VEXTRACTUB
    0U,	// VEXTRACTUH
    0U,	// VEXTRACTUW
    0U,	// VEXTRACTWM
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSD2Q
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    0U,	// VEXTUBLX
    0U,	// VEXTUBRX
    0U,	// VEXTUHLX
    0U,	// VEXTUHRX
    0U,	// VEXTUWLX
    0U,	// VEXTUWRX
    0U,	// VGBBD
    0U,	// VGNB
    0U,	// VINSBLX
    0U,	// VINSBRX
    0U,	// VINSBVLX
    0U,	// VINSBVRX
    0U,	// VINSD
    0U,	// VINSDLX
    0U,	// VINSDRX
    0U,	// VINSERTB
    0U,	// VINSERTD
    0U,	// VINSERTH
    0U,	// VINSERTW
    0U,	// VINSHLX
    0U,	// VINSHRX
    0U,	// VINSHVLX
    0U,	// VINSHVRX
    0U,	// VINSW
    0U,	// VINSWLX
    0U,	// VINSWRX
    0U,	// VINSWVLX
    0U,	// VINSWVRX
    0U,	// VLOGEFP
    0U,	// VMADDFP
    0U,	// VMAXFP
    0U,	// VMAXSB
    0U,	// VMAXSD
    0U,	// VMAXSH
    0U,	// VMAXSW
    0U,	// VMAXUB
    0U,	// VMAXUD
    0U,	// VMAXUH
    0U,	// VMAXUW
    0U,	// VMHADDSHS
    0U,	// VMHRADDSHS
    0U,	// VMINFP
    0U,	// VMINSB
    0U,	// VMINSD
    0U,	// VMINSH
    0U,	// VMINSW
    0U,	// VMINUB
    0U,	// VMINUD
    0U,	// VMINUH
    0U,	// VMINUW
    0U,	// VMLADDUHM
    0U,	// VMODSD
    0U,	// VMODSQ
    0U,	// VMODSW
    0U,	// VMODUD
    0U,	// VMODUQ
    0U,	// VMODUW
    0U,	// VMRGEW
    0U,	// VMRGHB
    0U,	// VMRGHH
    0U,	// VMRGHW
    0U,	// VMRGLB
    0U,	// VMRGLH
    0U,	// VMRGLW
    0U,	// VMRGOW
    0U,	// VMSUMCUD
    0U,	// VMSUMMBM
    0U,	// VMSUMSHM
    0U,	// VMSUMSHS
    0U,	// VMSUMUBM
    0U,	// VMSUMUDM
    0U,	// VMSUMUHM
    0U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    0U,	// VMUL10ECUQ
    0U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    0U,	// VMULESB
    0U,	// VMULESD
    0U,	// VMULESH
    0U,	// VMULESW
    0U,	// VMULEUB
    0U,	// VMULEUD
    0U,	// VMULEUH
    0U,	// VMULEUW
    0U,	// VMULHSD
    0U,	// VMULHSW
    0U,	// VMULHUD
    0U,	// VMULHUW
    0U,	// VMULLD
    0U,	// VMULOSB
    0U,	// VMULOSD
    0U,	// VMULOSH
    0U,	// VMULOSW
    0U,	// VMULOUB
    0U,	// VMULOUD
    0U,	// VMULOUH
    0U,	// VMULOUW
    0U,	// VMULUWM
    0U,	// VNAND
    0U,	// VNCIPHER
    0U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    0U,	// VNMSUBFP
    0U,	// VNOR
    0U,	// VOR
    0U,	// VORC
    0U,	// VPDEPD
    0U,	// VPERM
    0U,	// VPERMR
    0U,	// VPERMXOR
    0U,	// VPEXTD
    0U,	// VPKPX
    0U,	// VPKSDSS
    0U,	// VPKSDUS
    0U,	// VPKSHSS
    0U,	// VPKSHUS
    0U,	// VPKSWSS
    0U,	// VPKSWUS
    0U,	// VPKUDUM
    0U,	// VPKUDUS
    0U,	// VPKUHUM
    0U,	// VPKUHUS
    0U,	// VPKUWUM
    0U,	// VPKUWUS
    0U,	// VPMSUMB
    0U,	// VPMSUMD
    0U,	// VPMSUMH
    0U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    0U,	// VRLB
    0U,	// VRLD
    0U,	// VRLDMI
    0U,	// VRLDNM
    0U,	// VRLH
    0U,	// VRLQ
    0U,	// VRLQMI
    0U,	// VRLQNM
    0U,	// VRLW
    0U,	// VRLWMI
    0U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    0U,	// VSEL
    0U,	// VSHASIGMAD
    0U,	// VSHASIGMAW
    0U,	// VSL
    0U,	// VSLB
    0U,	// VSLD
    0U,	// VSLDBI
    0U,	// VSLDOI
    0U,	// VSLH
    0U,	// VSLO
    0U,	// VSLQ
    0U,	// VSLV
    0U,	// VSLW
    0U,	// VSPLTB
    0U,	// VSPLTBs
    0U,	// VSPLTH
    0U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    0U,	// VSPLTW
    0U,	// VSR
    0U,	// VSRAB
    0U,	// VSRAD
    0U,	// VSRAH
    0U,	// VSRAQ
    0U,	// VSRAW
    0U,	// VSRB
    0U,	// VSRD
    0U,	// VSRDBI
    0U,	// VSRH
    0U,	// VSRO
    0U,	// VSRQ
    0U,	// VSRV
    0U,	// VSRW
    0U,	// VSTRIBL
    0U,	// VSTRIBL_rec
    0U,	// VSTRIBR
    0U,	// VSTRIBR_rec
    0U,	// VSTRIHL
    0U,	// VSTRIHL_rec
    0U,	// VSTRIHR
    0U,	// VSTRIHR_rec
    0U,	// VSUBCUQ
    0U,	// VSUBCUW
    0U,	// VSUBECUQ
    0U,	// VSUBEUQM
    0U,	// VSUBFP
    0U,	// VSUBSBS
    0U,	// VSUBSHS
    0U,	// VSUBSWS
    0U,	// VSUBUBM
    0U,	// VSUBUBS
    0U,	// VSUBUDM
    0U,	// VSUBUHM
    0U,	// VSUBUHS
    0U,	// VSUBUQM
    0U,	// VSUBUWM
    0U,	// VSUBUWS
    0U,	// VSUM2SWS
    0U,	// VSUM4SBS
    0U,	// VSUM4SHS
    0U,	// VSUM4UBS
    0U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    0U,	// VXOR
    0U,	// V_SET0
    0U,	// V_SET0B
    0U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    0U,	// XOR
    0U,	// XOR8
    0U,	// XOR8_rec
    0U,	// XORI
    0U,	// XORI8
    0U,	// XORIS
    0U,	// XORIS8
    0U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    0U,	// XSADDDP
    0U,	// XSADDQP
    0U,	// XSADDQPO
    0U,	// XSADDSP
    0U,	// XSCMPEQDP
    0U,	// XSCMPEQQP
    0U,	// XSCMPEXPDP
    0U,	// XSCMPEXPQP
    0U,	// XSCMPGEDP
    0U,	// XSCMPGEQP
    0U,	// XSCMPGTDP
    0U,	// XSCMPGTQP
    0U,	// XSCMPODP
    0U,	// XSCMPOQP
    0U,	// XSCMPUDP
    0U,	// XSCMPUQP
    0U,	// XSCPSGNDP
    0U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSQZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUQZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSQQP
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUQQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    0U,	// XSDIVDP
    0U,	// XSDIVQP
    0U,	// XSDIVQPO
    0U,	// XSDIVSP
    0U,	// XSIEXPDP
    0U,	// XSIEXPQP
    0U,	// XSMADDADP
    0U,	// XSMADDASP
    0U,	// XSMADDMDP
    0U,	// XSMADDMSP
    0U,	// XSMADDQP
    0U,	// XSMADDQPO
    0U,	// XSMAXCDP
    0U,	// XSMAXCQP
    0U,	// XSMAXDP
    0U,	// XSMAXJDP
    0U,	// XSMINCDP
    0U,	// XSMINCQP
    0U,	// XSMINDP
    0U,	// XSMINJDP
    0U,	// XSMSUBADP
    0U,	// XSMSUBASP
    0U,	// XSMSUBMDP
    0U,	// XSMSUBMSP
    0U,	// XSMSUBQP
    0U,	// XSMSUBQPO
    0U,	// XSMULDP
    0U,	// XSMULQP
    0U,	// XSMULQPO
    0U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSDPs
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    0U,	// XSNMADDADP
    0U,	// XSNMADDASP
    0U,	// XSNMADDMDP
    0U,	// XSNMADDMSP
    0U,	// XSNMADDQP
    0U,	// XSNMADDQPO
    0U,	// XSNMSUBADP
    0U,	// XSNMSUBASP
    0U,	// XSNMSUBMDP
    0U,	// XSNMSUBMSP
    0U,	// XSNMSUBQP
    0U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    0U,	// XSSUBDP
    0U,	// XSSUBQP
    0U,	// XSSUBQPO
    0U,	// XSSUBSP
    0U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    0U,	// XSTSTDCDP
    0U,	// XSTSTDCQP
    0U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    0U,	// XVADDDP
    0U,	// XVADDSP
    0U,	// XVBF16GER2
    0U,	// XVBF16GER2NN
    0U,	// XVBF16GER2NP
    0U,	// XVBF16GER2PN
    0U,	// XVBF16GER2PP
    0U,	// XVBF16GER2W
    0U,	// XVBF16GER2WNN
    0U,	// XVBF16GER2WNP
    0U,	// XVBF16GER2WPN
    0U,	// XVBF16GER2WPP
    0U,	// XVCMPEQDP
    0U,	// XVCMPEQDP_rec
    0U,	// XVCMPEQSP
    0U,	// XVCMPEQSP_rec
    0U,	// XVCMPGEDP
    0U,	// XVCMPGEDP_rec
    0U,	// XVCMPGESP
    0U,	// XVCMPGESP_rec
    0U,	// XVCMPGTDP
    0U,	// XVCMPGTDP_rec
    0U,	// XVCMPGTSP
    0U,	// XVCMPGTSP_rec
    0U,	// XVCPSGNDP
    0U,	// XVCPSGNSP
    0U,	// XVCVBF16SPN
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPBF16
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    0U,	// XVDIVDP
    0U,	// XVDIVSP
    0U,	// XVF16GER2
    0U,	// XVF16GER2NN
    0U,	// XVF16GER2NP
    0U,	// XVF16GER2PN
    0U,	// XVF16GER2PP
    0U,	// XVF16GER2W
    0U,	// XVF16GER2WNN
    0U,	// XVF16GER2WNP
    0U,	// XVF16GER2WPN
    0U,	// XVF16GER2WPP
    0U,	// XVF32GER
    0U,	// XVF32GERNN
    0U,	// XVF32GERNP
    0U,	// XVF32GERPN
    0U,	// XVF32GERPP
    0U,	// XVF32GERW
    0U,	// XVF32GERWNN
    0U,	// XVF32GERWNP
    0U,	// XVF32GERWPN
    0U,	// XVF32GERWPP
    0U,	// XVF64GER
    0U,	// XVF64GERNN
    0U,	// XVF64GERNP
    0U,	// XVF64GERPN
    0U,	// XVF64GERPP
    0U,	// XVF64GERW
    0U,	// XVF64GERWNN
    0U,	// XVF64GERWNP
    0U,	// XVF64GERWPN
    0U,	// XVF64GERWPP
    0U,	// XVI16GER2
    0U,	// XVI16GER2PP
    0U,	// XVI16GER2S
    0U,	// XVI16GER2SPP
    0U,	// XVI16GER2SW
    0U,	// XVI16GER2SWPP
    0U,	// XVI16GER2W
    0U,	// XVI16GER2WPP
    0U,	// XVI4GER8
    0U,	// XVI4GER8PP
    0U,	// XVI4GER8W
    0U,	// XVI4GER8WPP
    0U,	// XVI8GER4
    0U,	// XVI8GER4PP
    0U,	// XVI8GER4SPP
    0U,	// XVI8GER4W
    0U,	// XVI8GER4WPP
    0U,	// XVI8GER4WSPP
    0U,	// XVIEXPDP
    0U,	// XVIEXPSP
    0U,	// XVMADDADP
    0U,	// XVMADDASP
    0U,	// XVMADDMDP
    0U,	// XVMADDMSP
    0U,	// XVMAXDP
    0U,	// XVMAXSP
    0U,	// XVMINDP
    0U,	// XVMINSP
    0U,	// XVMSUBADP
    0U,	// XVMSUBASP
    0U,	// XVMSUBMDP
    0U,	// XVMSUBMSP
    0U,	// XVMULDP
    0U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    0U,	// XVNMADDADP
    0U,	// XVNMADDASP
    0U,	// XVNMADDMDP
    0U,	// XVNMADDMSP
    0U,	// XVNMSUBADP
    0U,	// XVNMSUBASP
    0U,	// XVNMSUBMDP
    0U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    0U,	// XVSUBDP
    0U,	// XVSUBSP
    0U,	// XVTDIVDP
    0U,	// XVTDIVSP
    0U,	// XVTLSBB
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    0U,	// XVTSTDCDP
    0U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    0U,	// XXBLENDVB
    0U,	// XXBLENDVD
    0U,	// XXBLENDVH
    0U,	// XXBLENDVW
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    1U,	// XXEVAL
    0U,	// XXEXTRACTUW
    0U,	// XXGENPCVBM
    0U,	// XXGENPCVDM
    0U,	// XXGENPCVHM
    0U,	// XXGENPCVWM
    0U,	// XXINSERTW
    0U,	// XXLAND
    0U,	// XXLANDC
    0U,	// XXLEQV
    0U,	// XXLEQVOnes
    0U,	// XXLNAND
    0U,	// XXLNOR
    0U,	// XXLOR
    0U,	// XXLORC
    0U,	// XXLORf
    0U,	// XXLXOR
    0U,	// XXLXORdpz
    0U,	// XXLXORspz
    0U,	// XXLXORz
    0U,	// XXMFACC
    0U,	// XXMFACCW
    0U,	// XXMRGHW
    0U,	// XXMRGLW
    0U,	// XXMTACC
    0U,	// XXMTACCW
    0U,	// XXPERM
    0U,	// XXPERMDI
    0U,	// XXPERMDIs
    0U,	// XXPERMR
    1U,	// XXPERMX
    0U,	// XXSEL
    0U,	// XXSETACCZ
    0U,	// XXSETACCZW
    0U,	// XXSLDWI
    0U,	// XXSLDWIs
    0U,	// XXSPLTI32DX
    0U,	// XXSPLTIB
    0U,	// XXSPLTIDP
    0U,	// XXSPLTIW
    0U,	// XXSPLTW
    0U,	// XXSPLTWs
    0U,	// gBC
    0U,	// gBCA
    0U,	// gBCAat
    0U,	// gBCCTR
    0U,	// gBCCTRL
    0U,	// gBCL
    0U,	// gBCLA
    0U,	// gBCLAat
    0U,	// gBCLR
    0U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MCInst_getOpcode(MI)] << 0;
  Bits |= (uint64_t)OpInfo1[MCInst_getOpcode(MI)] << 32;
  Bits |= (uint64_t)OpInfo2[MCInst_getOpcode(MI)] << 48;
  MnemonicBitsInfo MBI = {
#ifndef CAPSTONE_DIET
    AsmStrs+(Bits & 32767)-1,
#else
    NULL,
#endif // CAPSTONE_DIET
    Bits
  };
  return MBI;
}

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, uint64_t Address, SStream *O) {
  SStream_concat0(O, "");
  MnemonicBitsInfo MnemonicInfo = getMnemonic(MI, O);

  SStream_concat0(O, MnemonicInfo.first);

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 5 bits for 22 unique commands.
  switch ((Bits >> 15) & 31) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_VALUE_LIST, DBG_INSTR_REF, DBG_PHI, DBG_LABEL, BUNDLE, ...
    return;
    break;
  case 1:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    printOperand(MI, 0, O);
    break;
  case 2:
    // DCBFL, DCBFLP, DCBFPS, DCBFx, DCBSTPS, DCBTCT, DCBTDS, DCBTSTCT, DCBTS...
    printMemRegReg(MI, 0, O);
    break;
  case 3:
    // ADJCALLSTACKDOWN, ADJCALLSTACKUP
    printU16ImmOperand(MI, 0, O);
    SStream_concat1(O, ' ');
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // B, BCLalways, BDNZ, BDNZ8, BDNZL, BDNZLm, BDNZLp, BDNZm, BDNZp, BDZ, B...
    (MI, Address, 0, O);
    break;
  case 5:
    // BA, BDNZA, BDNZAm, BDNZAp, BDNZLA, BDNZLAm, BDNZLAp, BDZA, BDZAm, BDZA...
    printAbsBranchOperand(MI, 0, O);
    break;
  case 6:
    // BCC, BCCA, BCCCTR, BCCCTR8, BCCCTRL, BCCCTRL8, BCCL, BCCLA, BCCLR, BCC...
    printPredicateOperand(MI, 0, O, "cc");
    break;
  case 7:
    // BCTRL8_LDinto_toc, BCTRL8_LDinto_toc_RM, BCTRL_LWZinto_toc, BCTRL_LWZi...
    printMemRegImm(MI, 0, O);
    return;
    break;
  case 8:
    // BL8_NOP_TLS, BL8_NOTOC_TLS, BL8_TLS, BL8_TLS_, BL_TLS
    printTLSCall(MI, 0, O);
    break;
  case 9:
    // DCBF, DCBT, DCBTST
    printMemRegReg(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 10:
    // DCBTEP, DCBTSTEP
    printU5ImmOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printMemRegReg(MI, 0, O);
    return;
    break;
  case 11:
    // DMXXEXTFDMR256, DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DS...
    printOperand(MI, 1, O);
    break;
  case 12:
    // DMXXEXTFDMR512, DMXXEXTFDMR512_HI
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 13:
    // DSS, MBAR, MTFSB0, MTFSB1, TABORTDC, TABORTDCI, TABORTWC, TABORTWCI, T...
    printU5ImmOperand(MI, 0, O);
    break;
  case 14:
    // ICBLC, ICBLQ, ICBT, ICBTLS
    printU4ImmOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printMemRegReg(MI, 1, O);
    return;
    break;
  case 15:
    // MTFSFI, MTFSFI_rec, MTFSFIb
    printU3ImmOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printU4ImmOperand(MI, 1, O);
    break;
  case 16:
    // MTOCRF, MTOCRF8
    printcrbitm(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 17:
    // MTSR
    printU4ImmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 18:
    // RFEBB, TBEGIN, TEND, TSR
    printU1ImmOperand(MI, 0, O);
    return;
    break;
  case 19:
    // SYNC, WAIT
    printU2ImmOperand(MI, 0, O);
    return;
    break;
  case 20:
    // XSRQPI, XSRQPIX, XSRQPXP
    printU1ImmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 21:
    // gBCAat, gBCLAat, gBCLat, gBCat
    printATBitsAsHint(MI, 1, O);
    SStream_concat1(O, ' ');
    printU5ImmOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  }


  // Fragment 1 encoded into 5 bits for 24 unique commands.
  switch ((Bits >> 20) & 31) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // DCBFL, DCBFLP, DCBFPS, DCBFx, DCBSTPS, DCBTSTT, DCBTSTx, DCBTT, DCBTx,...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, TCRETURNai, TCRETURNai8, TCR...
    SStream_concat1(O, ' ');
    break;
  case 3:
    // BCC, CTRL_DEP
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    (MI, Address, 2, O);
    return;
    break;
  case 4:
    // BCCA
    SStream_concat1(O, 'a');
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BCCCTR, BCCCTR8
    SStream_concat0(O, "ctr");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 6:
    // BCCCTRL, BCCCTRL8
    SStream_concat0(O, "ctrl");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 7:
    // BCCL
    SStream_concat1(O, 'l');
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    (MI, Address, 2, O);
    return;
    break;
  case 8:
    // BCCLA
    SStream_concat0(O, "la");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  case 9:
    // BCCLR
    SStream_concat0(O, "lr");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 10:
    // BCCLRL
    SStream_concat0(O, "lrl");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat1(O, ' ');
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 11:
    // BCCTR, BCCTR8, BCCTR8n, BCCTRL, BCCTRL8, BCCTRL8n, BCCTRLn, BCCTRn, BC...
    SStream_concat0(O, ", 0");
    return;
    break;
  case 12:
    // BL8_NOP, BL8_NOP_RM, BL8_NOP_TLS, BLA8_NOP, BLA8_NOP_RM, BL_NOP, BL_NO...
    SStream_concat0(O, "\n\tnop");
    return;
    break;
  case 13:
    // DCBF
    printU3ImmOperand(MI, 0, O);
    return;
    break;
  case 14:
    // DCBT, DCBTST
    printU5ImmOperand(MI, 0, O);
    return;
    break;
  case 15:
    // DMXXEXTFDMR512_HI
    SStream_concat0(O, ", 1");
    return;
    break;
  case 16:
    // EVSEL, TLBIE
    SStream_concat1(O, ',');
    break;
  case 17:
    // MFTB8
    SStream_concat0(O, ", 268");
    return;
    break;
  case 18:
    // MFUDSCR
    SStream_concat0(O, ", 3");
    return;
    break;
  case 19:
    // MFVRSAVE, MFVRSAVEv
    SStream_concat0(O, ", 256");
    return;
    break;
  case 20:
    // QVLPCLSXint
    SStream_concat0(O, ", 0, ");
    printOperand(MI, 1, O);
    return;
    break;
  case 21:
    // V_SETALLONES, V_SETALLONESB, V_SETALLONESH
    SStream_concat0(O, ", -1");
    return;
    break;
  case 22:
    // gBCAat, gBCLAat
    printAbsBranchOperand(MI, 3, O);
    return;
    break;
  case 23:
    // gBCLat, gBCat
    (MI, Address, 3, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 30 unique commands.
  switch ((Bits >> 25) & 31) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    printOperand(MI, 1, O);
    break;
  case 1:
    // DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, EVADDIW
    printU5ImmOperand(MI, 2, O);
    break;
  case 2:
    // LAx, EVLDD, EVLDH, EVLDW, EVLHHESPLAT, EVLHHOSSPLAT, EVLHHOUSPLAT, EVL...
    printMemRegImm(MI, 1, O);
    return;
    break;
  case 3:
    // SUBPCIS, LI, LI8, LIS, LIS8
    printS16ImmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, EVLDDX, EVLDHX, EVLDWX, EVLH...
    printMemRegReg(MI, 1, O);
    break;
  case 5:
    // BC, BCL, BCLn, BCn
    (MI, Address, 1, O);
    return;
    break;
  case 6:
    // CMPRB, CMPRB8, MTMSR, MTMSRD
    printU1ImmOperand(MI, 1, O);
    break;
  case 7:
    // CRSET, CRUNSET, DMXXEXTFDMR256, MTDCR, TLBIE, V_SET0, V_SET0B, V_SET0H...
    printOperand(MI, 0, O);
    break;
  case 8:
    // DARN, MFFSCRNI
    printU2ImmOperand(MI, 1, O);
    return;
    break;
  case 9:
    // DMXOR, DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, MTF...
    printOperand(MI, 2, O);
    break;
  case 10:
    // EVSPLATFI, EVSPLATI, VSPLTISB, VSPLTISH, VSPLTISW
    printS5ImmOperand(MI, 1, O);
    return;
    break;
  case 11:
    // EVSUBIFW, LXVKQ
    printU5ImmOperand(MI, 1, O);
    break;
  case 12:
    // HASHCHK, HASHCHK8, HASHCHKP, HASHCHKP8, HASHST, HASHST8, HASHSTP, HASH...
    printMemRegImmHash(MI, 1, O);
    return;
    break;
  case 13:
    // LA, LA8
    printS16ImmOperand(MI, 2, O);
    SStream_concat1(O, '(');
    printOperand(MI, 1, O);
    SStream_concat1(O, ')');
    return;
    break;
  case 14:
    // LBZU, LBZU8, LDU, LFDU, LFSU, LHAU, LHAU8, LHZU, LHZU8, LWZU, LWZU8, S...
    printMemRegImm(MI, 2, O);
    return;
    break;
  case 15:
    // LBZUX, LBZUX8, LDUX, LFDUX, LFSUX, LHAUX, LHAUX8, LHZUX, LHZUX8, LWAUX...
    printMemRegReg(MI, 2, O);
    return;
    break;
  case 16:
    // MFBHRBE
    printU10ImmOperand(MI, 1, O);
    return;
    break;
  case 17:
    // MFFSCDRNI
    printU3ImmOperand(MI, 1, O);
    return;
    break;
  case 18:
    // MFOCRF, MFOCRF8
    printcrbitm(MI, 1, O);
    return;
    break;
  case 19:
    // MFSR
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  case 20:
    // MTFSFI_rec, XXSPLTI32DX
    printU1ImmOperand(MI, 2, O);
    break;
  case 21:
    // MTVSRBMI
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 22:
    // PADDI8pc, PADDIpc
    printImmZeroOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printS34ImmOperand(MI, 2, O);
    SStream_concat0(O, ", 1");
    return;
    break;
  case 23:
    // PLBZ, PLBZ8, PLD, PLFD, PLFS, PLHA, PLHA8, PLHZ, PLHZ8, PLWA, PLWA8, P...
    printMemRegImm34(MI, 1, O);
    SStream_concat0(O, ", 0");
    return;
    break;
  case 24:
    // PLBZ8pc, PLBZpc, PLDpc, PLFDpc, PLFSpc, PLHA8pc, PLHApc, PLHZ8pc, PLHZ...
    printMemRegImm34PCRel(MI, 1, O);
    SStream_concat0(O, ", 1");
    return;
    break;
  case 25:
    // PLI, PLI8
    printS34ImmOperand(MI, 1, O);
    return;
    break;
  case 26:
    // QVGPCI
    printU12ImmOperand(MI, 1, O);
    return;
    break;
  case 27:
    // SUBFUS, SUBFUS_rec
    printU1ImmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 28:
    // VINSD, VINSERTB, VINSERTH, VINSW
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU4ImmOperand(MI, 2, O);
    return;
    break;
  case 29:
    // XXSPLTIB
    printU8ImmOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 30) & 7) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // BUILD_UACC, DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, ADDME, ADDME8, ADDME8O...
    return;
    break;
  case 1:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32
    SStream_concat1(O, ' ');
    printOperand(MI, 3, O);
    SStream_concat1(O, ' ');
    printOperand(MI, 4, O);
    return;
    break;
  case 3:
    // EVSEL
    SStream_concat1(O, ',');
    printOperand(MI, 2, O);
    return;
    break;
  case 4:
    // LBARXL, LDARXL, LHARXL, LQARXL, LWARXL
    SStream_concat0(O, ", 1");
    return;
    break;
  case 5:
    // VCFSX_0, VCFUX_0, VCTSXS_0, VCTUXS_0
    SStream_concat0(O, ", 0");
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 23 unique commands.
  switch ((Bits >> 33) & 31) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRRDI, CLRRDI_rec, EXTLDI, EXTLDI_rec, EXTRDI...
    printU6ImmOperand(MI, 2, O);
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, CLRRWI, CLRRWI_rec, EXTLWI, EXTLWI_rec, EXTRWI...
    printU5ImmOperand(MI, 2, O);
    break;
  case 2:
    // SUBI, SUBIC, SUBIC_rec, SUBIS, ADDI, ADDI8, ADDIC, ADDIC8, ADDIC_rec, ...
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 3:
    // ADD4, ADD4O, ADD4O_rec, ADD4TLS, ADD4_rec, ADD8, ADD8O, ADD8O_rec, ADD...
    printOperand(MI, 2, O);
    break;
  case 4:
    // ANDI8_rec, ANDIS8_rec, ANDIS_rec, ANDI_rec, CMPLDI, CMPLWI, ORI, ORI8,...
    printU16ImmOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BCDCFN_rec, BCDCFSQ_rec, BCDCFZ_rec, BCDCTZ_rec, BCDSETSGN_rec, CP_PAS...
    printU1ImmOperand(MI, 2, O);
    break;
  case 6:
    // CRSET, CRUNSET, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XXLXORdpz, XXLXO...
    printOperand(MI, 0, O);
    return;
    break;
  case 7:
    // DMXXEXTFDMR256, DMXXINSTFDMR256, QVESPLATI, QVESPLATIb, QVESPLATIs, XX...
    printU2ImmOperand(MI, 2, O);
    return;
    break;
  case 8:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64
    printU5ImmOperand(MI, 0, O);
    return;
    break;
  case 9:
    // EVADDIW, XXPERMDIs, XXSLDWIs
    printOperand(MI, 1, O);
    break;
  case 10:
    // PADDI, PADDI8
    printS34ImmOperand(MI, 2, O);
    SStream_concat0(O, ", 0");
    return;
    break;
  case 11:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVBF...
    printOperand(MI, 3, O);
    break;
  case 12:
    // RLDIMI, RLDIMI_rec
    printU6ImmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU6ImmOperand(MI, 4, O);
    return;
    break;
  case 13:
    // RLWIMI, RLWIMI8, RLWIMI8_rec, RLWIMI_rec
    printU5ImmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU5ImmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printU5ImmOperand(MI, 5, O);
    return;
    break;
  case 14:
    // VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB, VSPLTBs, VSPLTH, VSPLTHs, VSPLTW
    printU5ImmOperand(MI, 1, O);
    return;
    break;
  case 15:
    // VEXTRACTD, VEXTRACTUB, VEXTRACTUH, VEXTRACTUW, VINSERTD, VINSERTW
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  case 16:
    // VGNB
    printU3ImmOperand(MI, 2, O);
    return;
    break;
  case 17:
    // XSTSTDCDP, XSTSTDCQP, XSTSTDCSP, XVTSTDCDP, XVTSTDCSP
    printU7ImmOperand(MI, 1, O);
    return;
    break;
  case 18:
    // XXEXTRACTUW
    printU4ImmOperand(MI, 2, O);
    return;
    break;
  case 19:
    // XXGENPCVBM, XXGENPCVDM, XXGENPCVHM, XXGENPCVWM
    printS5ImmOperand(MI, 2, O);
    return;
    break;
  case 20:
    // XXINSERTW
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  case 21:
    // gBC, gBCL
    (MI, Address, 2, O);
    return;
    break;
  case 22:
    // gBCA, gBCLA
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 5 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 38) & 3) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, EXTLDI, EXTLDI_rec, EX...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // CLRRDI, CLRRDI_rec, CLRRWI, CLRRWI_rec, ROTRDI, ROTRDI_rec, ROTRWI, RO...
    return;
    break;
  case 2:
    // DMXXINSTFDMR512
    SStream_concat0(O, ", 0");
    return;
    break;
  case 3:
    // DMXXINSTFDMR512_HI
    SStream_concat0(O, ", 1");
    return;
    break;
  }


  // Fragment 6 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 40) & 15) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, EXTLDI, EXTLDI_rec, EXTRDI, EXTRDI_rec, INSRDI...
    printU6ImmOperand(MI, 3, O);
    return;
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    printU5ImmOperand(MI, 3, O);
    break;
  case 2:
    // RLWIMIbm, RLWIMIbm_rec, RLWINMbm, RLWINMbm_rec, RLWNMbm, RLWNMbm_rec, ...
    printOperand(MI, 3, O);
    break;
  case 3:
    // ADDEX, ADDEX8, QVALIGNI, QVALIGNIb, QVALIGNIs, XXPERMDI, XXSLDWI
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 4:
    // BCDADD_rec, BCDSR_rec, BCDSUB_rec, BCDS_rec, BCDTRUNC_rec
    printU1ImmOperand(MI, 3, O);
    return;
    break;
  case 5:
    // PMXVBF16GER2, PMXVBF16GER2W, PMXVF16GER2, PMXVF16GER2W, PMXVF32GER, PM...
    printU4ImmOperand(MI, 3, O);
    break;
  case 6:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVBF...
    printU4ImmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    break;
  case 7:
    // QVFLOGICAL, QVFLOGICALb, QVFLOGICALs
    printU12ImmOperand(MI, 3, O);
    return;
    break;
  case 8:
    // QVFMADDS, QVFMSUBS, QVFNMADDS, QVFNMSUBS, QVFSEL, QVFSELb, QVFSELbb, Q...
    printOperand(MI, 2, O);
    return;
    break;
  case 9:
    // VSLDBI, VSRDBI
    printU3ImmOperand(MI, 3, O);
    return;
    break;
  case 10:
    // XXPERMDIs, XXSLDWIs
    printU2ImmOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 7 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 44) & 3) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    return;
    break;
  case 1:
    // PMXVBF16GER2, PMXVBF16GER2W, PMXVF16GER2, PMXVF16GER2W, PMXVF32GER, PM...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVBF...
    printU4ImmOperand(MI, 5, O);
    break;
  case 3:
    // PMXVF64GERNN, PMXVF64GERNP, PMXVF64GERPN, PMXVF64GERPP, PMXVF64GERWNN,...
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  }


  // Fragment 8 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 46) & 7) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // PMXVBF16GER2, PMXVBF16GER2W, PMXVF16GER2, PMXVF16GER2W, PMXVF32GER, PM...
    printU4ImmOperand(MI, 4, O);
    break;
  case 1:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVBF...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // PMXVF32GERNN, PMXVF32GERNP, PMXVF32GERPN, PMXVF32GERPP, PMXVF32GERWNN,...
    return;
    break;
  case 3:
    // PMXVF64GER, PMXVF64GERW
    printU2ImmOperand(MI, 4, O);
    return;
    break;
  case 4:
    // RLWINM, RLWINM8, RLWINM8_rec, RLWINM_rec, RLWNM, RLWNM8, RLWNM8_rec, R...
    printU5ImmOperand(MI, 4, O);
    return;
    break;
  case 5:
    // XXEVAL
    printU8ImmOperand(MI, 4, O);
    return;
    break;
  case 6:
    // XXPERMX
    printU3ImmOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 9 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 49) & 7) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // PMXVBF16GER2, PMXVBF16GER2W, PMXVF16GER2, PMXVF16GER2W, PMXVI16GER2, P...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVBF...
    printU2ImmOperand(MI, 6, O);
    return;
    break;
  case 2:
    // PMXVF32GER, PMXVF32GERW
    return;
    break;
  case 3:
    // PMXVI4GER8PP, PMXVI4GER8WPP
    printU8ImmOperand(MI, 6, O);
    return;
    break;
  case 4:
    // PMXVI8GER4PP, PMXVI8GER4SPP, PMXVI8GER4WPP, PMXVI8GER4WSPP
    printU4ImmOperand(MI, 6, O);
    return;
    break;
  }


  // Fragment 10 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 52) & 3) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // PMXVBF16GER2, PMXVBF16GER2W, PMXVF16GER2, PMXVF16GER2W, PMXVI16GER2, P...
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  case 1:
    // PMXVI4GER8, PMXVI4GER8W
    printU8ImmOperand(MI, 5, O);
    return;
    break;
  case 2:
    // PMXVI8GER4, PMXVI8GER4W
    printU4ImmOperand(MI, 5, O);
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo) {
#ifndef CAPSTONE_DIET
  assert(RegNo && RegNo < 532 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ "**ROUNDING MODE**\0"
  /* 18 */ "**FRAME POINTER**\0"
  /* 36 */ "**BASE POINTER**\0"
  /* 53 */ "f10\0"
  /* 57 */ "vsp10\0"
  /* 63 */ "dmrrowp10\0"
  /* 73 */ "q10\0"
  /* 77 */ "r10\0"
  /* 81 */ "vs10\0"
  /* 86 */ "v10\0"
  /* 90 */ "dmrrow10\0"
  /* 99 */ "f20\0"
  /* 103 */ "vsp20\0"
  /* 109 */ "dmrrowp20\0"
  /* 119 */ "q20\0"
  /* 123 */ "r20\0"
  /* 127 */ "vs20\0"
  /* 132 */ "v20\0"
  /* 136 */ "dmrrow20\0"
  /* 145 */ "f30\0"
  /* 149 */ "vsp30\0"
  /* 155 */ "dmrrowp30\0"
  /* 165 */ "q30\0"
  /* 169 */ "r30\0"
  /* 173 */ "vs30\0"
  /* 178 */ "v30\0"
  /* 182 */ "dmrrow30\0"
  /* 191 */ "vsp40\0"
  /* 197 */ "vs40\0"
  /* 202 */ "dmrrow40\0"
  /* 211 */ "vsp50\0"
  /* 217 */ "vs50\0"
  /* 222 */ "dmrrow50\0"
  /* 231 */ "vsp60\0"
  /* 237 */ "vs60\0"
  /* 242 */ "dmrrow60\0"
  /* 251 */ "wacc0\0"
  /* 257 */ "f0\0"
  /* 260 */ "wacc_hi0\0"
  /* 269 */ "dmrp0\0"
  /* 275 */ "vsp0\0"
  /* 280 */ "dmrrowp0\0"
  /* 289 */ "q0\0"
  /* 292 */ "cr0\0"
  /* 296 */ "dmr0\0"
  /* 301 */ "vs0\0"
  /* 305 */ "v0\0"
  /* 308 */ "dmrrow0\0"
  /* 316 */ "f11\0"
  /* 320 */ "dmrrowp11\0"
  /* 330 */ "q11\0"
  /* 334 */ "r11\0"
  /* 338 */ "vs11\0"
  /* 343 */ "v11\0"
  /* 347 */ "dmrrow11\0"
  /* 356 */ "f21\0"
  /* 360 */ "dmrrowp21\0"
  /* 370 */ "q21\0"
  /* 374 */ "r21\0"
  /* 378 */ "vs21\0"
  /* 383 */ "v21\0"
  /* 387 */ "dmrrow21\0"
  /* 396 */ "f31\0"
  /* 400 */ "dmrrowp31\0"
  /* 410 */ "q31\0"
  /* 414 */ "r31\0"
  /* 418 */ "vs31\0"
  /* 423 */ "v31\0"
  /* 427 */ "dmrrow31\0"
  /* 436 */ "vs41\0"
  /* 441 */ "dmrrow41\0"
  /* 450 */ "vs51\0"
  /* 455 */ "dmrrow51\0"
  /* 464 */ "vs61\0"
  /* 469 */ "dmrrow61\0"
  /* 478 */ "wacc1\0"
  /* 484 */ "f1\0"
  /* 487 */ "wacc_hi1\0"
  /* 496 */ "dmrp1\0"
  /* 502 */ "dmrrowp1\0"
  /* 511 */ "q1\0"
  /* 514 */ "cr1\0"
  /* 518 */ "dmr1\0"
  /* 523 */ "vs1\0"
  /* 527 */ "v1\0"
  /* 530 */ "dmrrow1\0"
  /* 538 */ "f12\0"
  /* 542 */ "vsp12\0"
  /* 548 */ "dmrrowp12\0"
  /* 558 */ "q12\0"
  /* 562 */ "r12\0"
  /* 566 */ "vs12\0"
  /* 571 */ "v12\0"
  /* 575 */ "dmrrow12\0"
  /* 584 */ "f22\0"
  /* 588 */ "vsp22\0"
  /* 594 */ "dmrrowp22\0"
  /* 604 */ "q22\0"
  /* 608 */ "r22\0"
  /* 612 */ "vs22\0"
  /* 617 */ "v22\0"
  /* 621 */ "dmrrow22\0"
  /* 630 */ "vsp32\0"
  /* 636 */ "vs32\0"
  /* 641 */ "dmrrow32\0"
  /* 650 */ "vsp42\0"
  /* 656 */ "vs42\0"
  /* 661 */ "dmrrow42\0"
  /* 670 */ "vsp52\0"
  /* 676 */ "vs52\0"
  /* 681 */ "dmrrow52\0"
  /* 690 */ "vsp62\0"
  /* 696 */ "vs62\0"
  /* 701 */ "dmrrow62\0"
  /* 710 */ "wacc2\0"
  /* 716 */ "f2\0"
  /* 719 */ "wacc_hi2\0"
  /* 728 */ "dmrp2\0"
  /* 734 */ "vsp2\0"
  /* 739 */ "dmrrowp2\0"
  /* 748 */ "q2\0"
  /* 751 */ "cr2\0"
  /* 755 */ "dmr2\0"
  /* 760 */ "vs2\0"
  /* 764 */ "v2\0"
  /* 767 */ "dmrrow2\0"
  /* 775 */ "f13\0"
  /* 779 */ "dmrrowp13\0"
  /* 789 */ "q13\0"
  /* 793 */ "r13\0"
  /* 797 */ "vs13\0"
  /* 802 */ "v13\0"
  /* 806 */ "dmrrow13\0"
  /* 815 */ "f23\0"
  /* 819 */ "dmrrowp23\0"
  /* 829 */ "q23\0"
  /* 833 */ "r23\0"
  /* 837 */ "vs23\0"
  /* 842 */ "v23\0"
  /* 846 */ "dmrrow23\0"
  /* 855 */ "vs33\0"
  /* 860 */ "dmrrow33\0"
  /* 869 */ "vs43\0"
  /* 874 */ "dmrrow43\0"
  /* 883 */ "vs53\0"
  /* 888 */ "dmrrow53\0"
  /* 897 */ "vs63\0"
  /* 902 */ "dmrrow63\0"
  /* 911 */ "wacc3\0"
  /* 917 */ "f3\0"
  /* 920 */ "wacc_hi3\0"
  /* 929 */ "dmrp3\0"
  /* 935 */ "dmrrowp3\0"
  /* 944 */ "q3\0"
  /* 947 */ "cr3\0"
  /* 951 */ "dmr3\0"
  /* 956 */ "vs3\0"
  /* 960 */ "v3\0"
  /* 963 */ "dmrrow3\0"
  /* 971 */ "f14\0"
  /* 975 */ "vsp14\0"
  /* 981 */ "dmrrowp14\0"
  /* 991 */ "q14\0"
  /* 995 */ "r14\0"
  /* 999 */ "vs14\0"
  /* 1004 */ "v14\0"
  /* 1008 */ "dmrrow14\0"
  /* 1017 */ "f24\0"
  /* 1021 */ "vsp24\0"
  /* 1027 */ "dmrrowp24\0"
  /* 1037 */ "q24\0"
  /* 1041 */ "r24\0"
  /* 1045 */ "vs24\0"
  /* 1050 */ "v24\0"
  /* 1054 */ "dmrrow24\0"
  /* 1063 */ "vsp34\0"
  /* 1069 */ "vs34\0"
  /* 1074 */ "dmrrow34\0"
  /* 1083 */ "vsp44\0"
  /* 1089 */ "vs44\0"
  /* 1094 */ "dmrrow44\0"
  /* 1103 */ "vsp54\0"
  /* 1109 */ "vs54\0"
  /* 1114 */ "dmrrow54\0"
  /* 1123 */ "wacc4\0"
  /* 1129 */ "f4\0"
  /* 1132 */ "wacc_hi4\0"
  /* 1141 */ "vsp4\0"
  /* 1146 */ "dmrrowp4\0"
  /* 1155 */ "q4\0"
  /* 1158 */ "cr4\0"
  /* 1162 */ "dmr4\0"
  /* 1167 */ "vs4\0"
  /* 1171 */ "v4\0"
  /* 1174 */ "dmrrow4\0"
  /* 1182 */ "f15\0"
  /* 1186 */ "dmrrowp15\0"
  /* 1196 */ "q15\0"
  /* 1200 */ "r15\0"
  /* 1204 */ "vs15\0"
  /* 1209 */ "v15\0"
  /* 1213 */ "dmrrow15\0"
  /* 1222 */ "f25\0"
  /* 1226 */ "dmrrowp25\0"
  /* 1236 */ "q25\0"
  /* 1240 */ "r25\0"
  /* 1244 */ "vs25\0"
  /* 1249 */ "v25\0"
  /* 1253 */ "dmrrow25\0"
  /* 1262 */ "vs35\0"
  /* 1267 */ "dmrrow35\0"
  /* 1276 */ "vs45\0"
  /* 1281 */ "dmrrow45\0"
  /* 1290 */ "vs55\0"
  /* 1295 */ "dmrrow55\0"
  /* 1304 */ "wacc5\0"
  /* 1310 */ "f5\0"
  /* 1313 */ "wacc_hi5\0"
  /* 1322 */ "dmrrowp5\0"
  /* 1331 */ "q5\0"
  /* 1334 */ "cr5\0"
  /* 1338 */ "dmr5\0"
  /* 1343 */ "vs5\0"
  /* 1347 */ "v5\0"
  /* 1350 */ "dmrrow5\0"
  /* 1358 */ "f16\0"
  /* 1362 */ "vsp16\0"
  /* 1368 */ "dmrrowp16\0"
  /* 1378 */ "q16\0"
  /* 1382 */ "r16\0"
  /* 1386 */ "vs16\0"
  /* 1391 */ "v16\0"
  /* 1395 */ "dmrrow16\0"
  /* 1404 */ "f26\0"
  /* 1408 */ "vsp26\0"
  /* 1414 */ "dmrrowp26\0"
  /* 1424 */ "q26\0"
  /* 1428 */ "r26\0"
  /* 1432 */ "vs26\0"
  /* 1437 */ "v26\0"
  /* 1441 */ "dmrrow26\0"
  /* 1450 */ "vsp36\0"
  /* 1456 */ "vs36\0"
  /* 1461 */ "dmrrow36\0"
  /* 1470 */ "vsp46\0"
  /* 1476 */ "vs46\0"
  /* 1481 */ "dmrrow46\0"
  /* 1490 */ "vsp56\0"
  /* 1496 */ "vs56\0"
  /* 1501 */ "dmrrow56\0"
  /* 1510 */ "wacc6\0"
  /* 1516 */ "f6\0"
  /* 1519 */ "wacc_hi6\0"
  /* 1528 */ "vsp6\0"
  /* 1533 */ "dmrrowp6\0"
  /* 1542 */ "q6\0"
  /* 1545 */ "cr6\0"
  /* 1549 */ "dmr6\0"
  /* 1554 */ "vs6\0"
  /* 1558 */ "v6\0"
  /* 1561 */ "dmrrow6\0"
  /* 1569 */ "f17\0"
  /* 1573 */ "dmrrowp17\0"
  /* 1583 */ "q17\0"
  /* 1587 */ "r17\0"
  /* 1591 */ "vs17\0"
  /* 1596 */ "v17\0"
  /* 1600 */ "dmrrow17\0"
  /* 1609 */ "f27\0"
  /* 1613 */ "dmrrowp27\0"
  /* 1623 */ "q27\0"
  /* 1627 */ "r27\0"
  /* 1631 */ "vs27\0"
  /* 1636 */ "v27\0"
  /* 1640 */ "dmrrow27\0"
  /* 1649 */ "vs37\0"
  /* 1654 */ "dmrrow37\0"
  /* 1663 */ "vs47\0"
  /* 1668 */ "dmrrow47\0"
  /* 1677 */ "vs57\0"
  /* 1682 */ "dmrrow57\0"
  /* 1691 */ "wacc7\0"
  /* 1697 */ "f7\0"
  /* 1700 */ "wacc_hi7\0"
  /* 1709 */ "dmrrowp7\0"
  /* 1718 */ "q7\0"
  /* 1721 */ "cr7\0"
  /* 1725 */ "dmr7\0"
  /* 1730 */ "vs7\0"
  /* 1734 */ "v7\0"
  /* 1737 */ "dmrrow7\0"
  /* 1745 */ "f18\0"
  /* 1749 */ "vsp18\0"
  /* 1755 */ "dmrrowp18\0"
  /* 1765 */ "q18\0"
  /* 1769 */ "r18\0"
  /* 1773 */ "vs18\0"
  /* 1778 */ "v18\0"
  /* 1782 */ "dmrrow18\0"
  /* 1791 */ "f28\0"
  /* 1795 */ "vsp28\0"
  /* 1801 */ "dmrrowp28\0"
  /* 1811 */ "q28\0"
  /* 1815 */ "r28\0"
  /* 1819 */ "vs28\0"
  /* 1824 */ "v28\0"
  /* 1828 */ "dmrrow28\0"
  /* 1837 */ "vsp38\0"
  /* 1843 */ "vs38\0"
  /* 1848 */ "dmrrow38\0"
  /* 1857 */ "vsp48\0"
  /* 1863 */ "vs48\0"
  /* 1868 */ "dmrrow48\0"
  /* 1877 */ "vsp58\0"
  /* 1883 */ "vs58\0"
  /* 1888 */ "dmrrow58\0"
  /* 1897 */ "f8\0"
  /* 1900 */ "vsp8\0"
  /* 1905 */ "dmrrowp8\0"
  /* 1914 */ "q8\0"
  /* 1917 */ "r8\0"
  /* 1920 */ "vs8\0"
  /* 1924 */ "v8\0"
  /* 1927 */ "dmrrow8\0"
  /* 1935 */ "f19\0"
  /* 1939 */ "dmrrowp19\0"
  /* 1949 */ "q19\0"
  /* 1953 */ "r19\0"
  /* 1957 */ "vs19\0"
  /* 1962 */ "v19\0"
  /* 1966 */ "dmrrow19\0"
  /* 1975 */ "f29\0"
  /* 1979 */ "dmrrowp29\0"
  /* 1989 */ "q29\0"
  /* 1993 */ "r29\0"
  /* 1997 */ "vs29\0"
  /* 2002 */ "v29\0"
  /* 2006 */ "dmrrow29\0"
  /* 2015 */ "vs39\0"
  /* 2020 */ "dmrrow39\0"
  /* 2029 */ "vs49\0"
  /* 2034 */ "dmrrow49\0"
  /* 2043 */ "vs59\0"
  /* 2048 */ "dmrrow59\0"
  /* 2057 */ "f9\0"
  /* 2060 */ "dmrrowp9\0"
  /* 2069 */ "q9\0"
  /* 2072 */ "r9\0"
  /* 2075 */ "vs9\0"
  /* 2079 */ "v9\0"
  /* 2082 */ "dmrrow9\0"
  /* 2090 */ "vrsave\0"
  /* 2097 */ "spefscr\0"
  /* 2105 */ "xer\0"
  /* 2109 */ "lr\0"
  /* 2112 */ "ctr\0"
};
  static const uint16_t RegAsmOffset[] = {
    36, 2105, 2112, 18, 2109, 0, 2097, 2090, 2105, 55, 252, 479, 711, 912, 
    1124, 1305, 1511, 1692, 36, 292, 514, 751, 947, 1158, 1334, 1545, 1721, 2112, 
    296, 518, 755, 951, 1162, 1338, 1549, 1725, 308, 530, 767, 963, 1174, 1350, 
    1561, 1737, 1927, 2082, 90, 347, 575, 806, 1008, 1213, 1395, 1600, 1782, 1966, 
    136, 387, 621, 846, 1054, 1253, 1441, 1640, 1828, 2006, 182, 427, 641, 860, 
    1074, 1267, 1461, 1654, 1848, 2020, 202, 441, 661, 874, 1094, 1281, 1481, 1668, 
    1868, 2034, 222, 455, 681, 888, 1114, 1295, 1501, 1682, 1888, 2048, 242, 469, 
    701, 902, 280, 502, 739, 935, 1146, 1322, 1533, 1709, 1905, 2060, 63, 320, 
    548, 779, 981, 1186, 1368, 1573, 1755, 1939, 109, 360, 594, 819, 1027, 1226, 
    1414, 1613, 1801, 1979, 155, 400, 269, 496, 728, 929, 257, 484, 716, 917, 
    1129, 1310, 1516, 1697, 1897, 2057, 53, 316, 538, 775, 971, 1182, 1358, 1569, 
    1745, 1935, 99, 356, 584, 815, 1017, 1222, 1404, 1609, 1791, 1975, 145, 396, 
    18, 2109, 289, 511, 748, 944, 1155, 1331, 1542, 1718, 1914, 2069, 73, 330, 
    558, 789, 991, 1196, 1378, 1583, 1765, 1949, 119, 370, 604, 829, 1037, 1236, 
    1424, 1623, 1811, 1989, 165, 410, 293, 515, 752, 948, 1159, 1335, 1546, 1722, 
    1917, 2072, 77, 334, 562, 793, 995, 1200, 1382, 1587, 1769, 1953, 123, 374, 
    608, 833, 1041, 1240, 1428, 1627, 1815, 1993, 169, 414, 293, 515, 752, 948, 
    1159, 1335, 1546, 1722, 1917, 2072, 77, 334, 562, 793, 995, 1200, 1382, 1587, 
    1769, 1953, 123, 374, 608, 833, 1041, 1240, 1428, 1627, 1815, 1993, 169, 414, 
    252, 479, 711, 912, 1124, 1305, 1511, 1692, 305, 527, 764, 960, 1171, 1347, 
    1558, 1734, 1924, 2079, 86, 343, 571, 802, 1004, 1209, 1391, 1596, 1778, 1962, 
    132, 383, 617, 842, 1050, 1249, 1437, 1636, 1824, 2002, 178, 423, 305, 527, 
    764, 960, 1171, 1347, 1558, 1734, 1924, 2079, 86, 343, 571, 802, 1004, 1209, 
    1391, 1596, 1778, 1962, 132, 383, 617, 842, 1050, 1249, 1437, 1636, 1824, 2002, 
    178, 423, 301, 523, 760, 956, 1167, 1343, 1554, 1730, 1920, 2075, 81, 338, 
    566, 797, 999, 1204, 1386, 1591, 1773, 1957, 127, 378, 612, 837, 1045, 1244, 
    1432, 1631, 1819, 1997, 173, 418, 275, 734, 1141, 1528, 1900, 57, 542, 975, 
    1362, 1749, 103, 588, 1021, 1408, 1795, 149, 630, 1063, 1450, 1837, 191, 650, 
    1083, 1470, 1857, 211, 670, 1103, 1490, 1877, 231, 690, 636, 855, 1069, 1262, 
    1456, 1649, 1843, 2015, 197, 436, 656, 869, 1089, 1276, 1476, 1663, 1863, 2029, 
    217, 450, 676, 883, 1109, 1290, 1496, 1677, 1883, 2043, 237, 464, 696, 897, 
    251, 478, 710, 911, 1123, 1304, 1510, 1691, 260, 487, 719, 920, 1132, 1313, 
    1519, 1700, 293, 515, 752, 948, 1159, 1335, 1546, 1722, 1917, 2072, 77, 334, 
    562, 793, 995, 1200, 1382, 1587, 1769, 1953, 123, 374, 608, 833, 1041, 1240, 
    1428, 1627, 1815, 1993, 169, 414, 55, 540, 1360, 54, 972, 1746, 585, 1405, 
    146, 318, 1184, 1937, 776, 1570, 357, 1223, 1976, 55, 973, 1747, 539, 1359, 
    100, 1018, 1792, 777, 1571, 317, 1183, 1936, 816, 1610, 397, 293, 752, 1159, 
    1546, 1917, 77, 562, 995, 1382, 1769, 123, 608, 1041, 1428, 1815, 169, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif // CAPSTONE_DIET
}
#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static bool printAliasInstr(MCInst *MI, uint64_t Address, SStream *OS) {
#ifndef CAPSTONE_DIET
  static const PatternsForOpcode OpToPatterns[] = {
    {PPC_ADDI, 0, 1 },
    {PPC_ADDI8, 1, 1 },
    {PPC_ADDIS, 2, 1 },
    {PPC_ADDIS8, 3, 1 },
    {PPC_ADDPCIS, 4, 1 },
    {PPC_BCC, 5, 24 },
    {PPC_BCCA, 29, 24 },
    {PPC_BCCCTR, 53, 24 },
    {PPC_BCCCTRL, 77, 24 },
    {PPC_BCCL, 101, 24 },
    {PPC_BCCLA, 125, 24 },
    {PPC_BCCLR, 149, 24 },
    {PPC_BCCLRL, 173, 24 },
    {PPC_CMPD, 197, 1 },
    {PPC_CMPDI, 198, 1 },
    {PPC_CMPLD, 199, 1 },
    {PPC_CMPLDI, 200, 1 },
    {PPC_CMPLW, 201, 1 },
    {PPC_CMPLWI, 202, 1 },
    {PPC_CMPW, 203, 1 },
    {PPC_CMPWI, 204, 1 },
    {PPC_CNTLZW, 205, 1 },
    {PPC_CNTLZW8, 206, 1 },
    {PPC_CNTLZW8_rec, 207, 1 },
    {PPC_CNTLZW_rec, 208, 1 },
    {PPC_CP_PASTE_rec, 209, 1 },
    {PPC_CREQV, 210, 1 },
    {PPC_CRNOR, 211, 1 },
    {PPC_CROR, 212, 1 },
    {PPC_CRXOR, 213, 1 },
    {PPC_ISEL, 214, 3 },
    {PPC_ISEL8, 217, 3 },
    {PPC_MBAR, 220, 1 },
    {PPC_MFDCR, 221, 8 },
    {PPC_MFSPR, 229, 46 },
    {PPC_MFSPR8, 275, 19 },
    {PPC_MFTB, 294, 1 },
    {PPC_MFUDSCR, 295, 1 },
    {PPC_MFVRSAVE, 296, 1 },
    {PPC_MFVSRD, 297, 1 },
    {PPC_MFVSRWZ, 298, 1 },
    {PPC_MTCRF, 299, 1 },
    {PPC_MTCRF8, 300, 1 },
    {PPC_MTDCR, 301, 8 },
    {PPC_MTFSF, 309, 1 },
    {PPC_MTFSFI, 310, 1 },
    {PPC_MTFSFI_rec, 311, 1 },
    {PPC_MTFSF_rec, 312, 1 },
    {PPC_MTMSR, 313, 1 },
    {PPC_MTMSRD, 314, 1 },
    {PPC_MTSPR, 315, 45 },
    {PPC_MTSPR8, 360, 18 },
    {PPC_MTUDSCR, 378, 1 },
    {PPC_MTVRSAVE, 379, 1 },
    {PPC_MTVSRD, 380, 1 },
    {PPC_MTVSRWA, 381, 1 },
    {PPC_MTVSRWZ, 382, 1 },
    {PPC_NOR, 383, 1 },
    {PPC_NOR8, 384, 1 },
    {PPC_NOR8_rec, 385, 1 },
    {PPC_NOR_rec, 386, 1 },
    {PPC_OR, 387, 1 },
    {PPC_OR8, 388, 1 },
    {PPC_OR8_rec, 389, 1 },
    {PPC_ORI, 390, 1 },
    {PPC_ORI8, 391, 1 },
    {PPC_OR_rec, 392, 1 },
    {PPC_QVFLOGICALb, 393, 12 },
    {PPC_RFEBB, 405, 1 },
    {PPC_RLDCL, 406, 1 },
    {PPC_RLDCL_rec, 407, 1 },
    {PPC_RLDICL, 408, 2 },
    {PPC_RLDICL_32_64, 410, 2 },
    {PPC_RLDICL_rec, 412, 2 },
    {PPC_RLWINM, 414, 2 },
    {PPC_RLWINM8, 416, 2 },
    {PPC_RLWINM8_rec, 418, 2 },
    {PPC_RLWINM_rec, 420, 2 },
    {PPC_RLWNM, 422, 1 },
    {PPC_RLWNM8, 423, 1 },
    {PPC_RLWNM8_rec, 424, 1 },
    {PPC_RLWNM_rec, 425, 1 },
    {PPC_SC, 426, 1 },
    {PPC_SUBF, 427, 1 },
    {PPC_SUBF8, 428, 1 },
    {PPC_SUBF8_rec, 429, 1 },
    {PPC_SUBFC, 430, 1 },
    {PPC_SUBFC8, 431, 1 },
    {PPC_SUBFC8_rec, 432, 1 },
    {PPC_SUBFC_rec, 433, 1 },
    {PPC_SUBF_rec, 434, 1 },
    {PPC_SYNC, 435, 3 },
    {PPC_TD, 438, 7 },
    {PPC_TDI, 445, 7 },
    {PPC_TEND, 452, 2 },
    {PPC_TLBIE, 454, 1 },
    {PPC_TLBRE2, 455, 2 },
    {PPC_TLBWE2, 457, 2 },
    {PPC_TSR, 459, 2 },
    {PPC_TW, 461, 8 },
    {PPC_TWI, 469, 7 },
    {PPC_VNOR, 476, 1 },
    {PPC_VOR, 477, 1 },
    {PPC_WAIT, 478, 3 },
    {PPC_XORI, 481, 1 },
    {PPC_XORI8, 482, 1 },
    {PPC_XVCPSGNDP, 483, 1 },
    {PPC_XVCPSGNSP, 484, 1 },
    {PPC_XXPERMDI, 485, 5 },
    {PPC_XXPERMDIs, 490, 3 },
    {PPC_gBC, 493, 10 },
    {PPC_gBCA, 503, 10 },
    {PPC_gBCAat, 513, 2 },
    {PPC_gBCCTR, 515, 7 },
    {PPC_gBCCTRL, 522, 7 },
    {PPC_gBCL, 529, 10 },
    {PPC_gBCLA, 539, 10 },
    {PPC_gBCLAat, 549, 2 },
    {PPC_gBCLR, 551, 11 },
    {PPC_gBCLRL, 562, 11 },
    {PPC_gBCLat, 573, 2 },
    {PPC_gBCat, 575, 2 },
  {0},  };

  static const AliasPattern Patterns[] = {
    // PPC_ADDI - 0
    {0, 0, 3, 2 },
    // PPC_ADDI8 - 1
    {0, 2, 3, 2 },
    // PPC_ADDIS - 2
    {12, 4, 3, 2 },
    // PPC_ADDIS8 - 3
    {12, 6, 3, 2 },
    // PPC_ADDPCIS - 4
    {25, 8, 2, 2 },
    // PPC_BCC - 5
    {33, 10, 3, 2 },
    {46, 12, 3, 2 },
    {55, 14, 3, 2 },
    {69, 16, 3, 2 },
    {79, 18, 3, 2 },
    {93, 20, 3, 2 },
    {103, 22, 3, 2 },
    {116, 24, 3, 2 },
    {125, 26, 3, 2 },
    {139, 28, 3, 2 },
    {149, 30, 3, 2 },
    {163, 32, 3, 2 },
    {173, 34, 3, 2 },
    {186, 36, 3, 2 },
    {195, 38, 3, 2 },
    {209, 40, 3, 2 },
    {219, 42, 3, 2 },
    {233, 44, 3, 2 },
    {243, 46, 3, 2 },
    {256, 48, 3, 2 },
    {265, 50, 3, 2 },
    {279, 52, 3, 2 },
    {289, 54, 3, 2 },
    {303, 56, 3, 2 },
    // PPC_BCCA - 29
    {313, 58, 3, 2 },
    {327, 60, 3, 2 },
    {337, 62, 3, 2 },
    {352, 64, 3, 2 },
    {363, 66, 3, 2 },
    {378, 68, 3, 2 },
    {389, 70, 3, 2 },
    {403, 72, 3, 2 },
    {413, 74, 3, 2 },
    {428, 76, 3, 2 },
    {439, 78, 3, 2 },
    {454, 80, 3, 2 },
    {465, 82, 3, 2 },
    {479, 84, 3, 2 },
    {489, 86, 3, 2 },
    {504, 88, 3, 2 },
    {515, 90, 3, 2 },
    {530, 92, 3, 2 },
    {541, 94, 3, 2 },
    {555, 96, 3, 2 },
    {565, 98, 3, 2 },
    {580, 100, 3, 2 },
    {591, 102, 3, 2 },
    {606, 104, 3, 2 },
    // PPC_BCCCTR - 53
    {617, 106, 2, 2 },
    {627, 108, 2, 2 },
    {634, 110, 2, 2 },
    {645, 112, 2, 2 },
    {653, 114, 2, 2 },
    {664, 116, 2, 2 },
    {672, 118, 2, 2 },
    {682, 120, 2, 2 },
    {689, 122, 2, 2 },
    {700, 124, 2, 2 },
    {708, 126, 2, 2 },
    {719, 128, 2, 2 },
    {727, 130, 2, 2 },
    {737, 132, 2, 2 },
    {744, 134, 2, 2 },
    {755, 136, 2, 2 },
    {763, 138, 2, 2 },
    {774, 140, 2, 2 },
    {782, 142, 2, 2 },
    {792, 144, 2, 2 },
    {799, 146, 2, 2 },
    {810, 148, 2, 2 },
    {818, 150, 2, 2 },
    {829, 152, 2, 2 },
    // PPC_BCCCTRL - 77
    {837, 154, 2, 2 },
    {848, 156, 2, 2 },
    {856, 158, 2, 2 },
    {868, 160, 2, 2 },
    {877, 162, 2, 2 },
    {889, 164, 2, 2 },
    {898, 166, 2, 2 },
    {909, 168, 2, 2 },
    {917, 170, 2, 2 },
    {929, 172, 2, 2 },
    {938, 174, 2, 2 },
    {950, 176, 2, 2 },
    {959, 178, 2, 2 },
    {970, 180, 2, 2 },
    {978, 182, 2, 2 },
    {990, 184, 2, 2 },
    {999, 186, 2, 2 },
    {1011, 188, 2, 2 },
    {1020, 190, 2, 2 },
    {1031, 192, 2, 2 },
    {1039, 194, 2, 2 },
    {1051, 196, 2, 2 },
    {1060, 198, 2, 2 },
    {1072, 200, 2, 2 },
    // PPC_BCCL - 101
    {1081, 202, 3, 2 },
    {1095, 204, 3, 2 },
    {1105, 206, 3, 2 },
    {1120, 208, 3, 2 },
    {1131, 210, 3, 2 },
    {1146, 212, 3, 2 },
    {1157, 214, 3, 2 },
    {1171, 216, 3, 2 },
    {1181, 218, 3, 2 },
    {1196, 220, 3, 2 },
    {1207, 222, 3, 2 },
    {1222, 224, 3, 2 },
    {1233, 226, 3, 2 },
    {1247, 228, 3, 2 },
    {1257, 230, 3, 2 },
    {1272, 232, 3, 2 },
    {1283, 234, 3, 2 },
    {1298, 236, 3, 2 },
    {1309, 238, 3, 2 },
    {1323, 240, 3, 2 },
    {1333, 242, 3, 2 },
    {1348, 244, 3, 2 },
    {1359, 246, 3, 2 },
    {1374, 248, 3, 2 },
    // PPC_BCCLA - 125
    {1385, 250, 3, 2 },
    {1400, 252, 3, 2 },
    {1411, 254, 3, 2 },
    {1427, 256, 3, 2 },
    {1439, 258, 3, 2 },
    {1455, 260, 3, 2 },
    {1467, 262, 3, 2 },
    {1482, 264, 3, 2 },
    {1493, 266, 3, 2 },
    {1509, 268, 3, 2 },
    {1521, 270, 3, 2 },
    {1537, 272, 3, 2 },
    {1549, 274, 3, 2 },
    {1564, 276, 3, 2 },
    {1575, 278, 3, 2 },
    {1591, 280, 3, 2 },
    {1603, 282, 3, 2 },
    {1619, 284, 3, 2 },
    {1631, 286, 3, 2 },
    {1646, 288, 3, 2 },
    {1657, 290, 3, 2 },
    {1673, 292, 3, 2 },
    {1685, 294, 3, 2 },
    {1701, 296, 3, 2 },
    // PPC_BCCLR - 149
    {1713, 298, 2, 2 },
    {1722, 300, 2, 2 },
    {1728, 302, 2, 2 },
    {1738, 304, 2, 2 },
    {1745, 306, 2, 2 },
    {1755, 308, 2, 2 },
    {1762, 310, 2, 2 },
    {1771, 312, 2, 2 },
    {1777, 314, 2, 2 },
    {1787, 316, 2, 2 },
    {1794, 318, 2, 2 },
    {1804, 320, 2, 2 },
    {1811, 322, 2, 2 },
    {1820, 324, 2, 2 },
    {1826, 326, 2, 2 },
    {1836, 328, 2, 2 },
    {1843, 330, 2, 2 },
    {1853, 332, 2, 2 },
    {1860, 334, 2, 2 },
    {1869, 336, 2, 2 },
    {1875, 338, 2, 2 },
    {1885, 340, 2, 2 },
    {1892, 342, 2, 2 },
    {1902, 344, 2, 2 },
    // PPC_BCCLRL - 173
    {1909, 346, 2, 2 },
    {1919, 348, 2, 2 },
    {1926, 350, 2, 2 },
    {1937, 352, 2, 2 },
    {1945, 354, 2, 2 },
    {1956, 356, 2, 2 },
    {1964, 358, 2, 2 },
    {1974, 360, 2, 2 },
    {1981, 362, 2, 2 },
    {1992, 364, 2, 2 },
    {2000, 366, 2, 2 },
    {2011, 368, 2, 2 },
    {2019, 370, 2, 2 },
    {2029, 372, 2, 2 },
    {2036, 374, 2, 2 },
    {2047, 376, 2, 2 },
    {2055, 378, 2, 2 },
    {2066, 380, 2, 2 },
    {2074, 382, 2, 2 },
    {2084, 384, 2, 2 },
    {2091, 386, 2, 2 },
    {2102, 388, 2, 2 },
    {2110, 390, 2, 2 },
    {2121, 392, 2, 2 },
    // PPC_CMPD - 197
    {2129, 394, 3, 3 },
    // PPC_CMPDI - 198
    {2141, 397, 3, 2 },
    // PPC_CMPLD - 199
    {2156, 399, 3, 3 },
    // PPC_CMPLDI - 200
    {2169, 402, 3, 2 },
    // PPC_CMPLW - 201
    {2185, 404, 3, 3 },
    // PPC_CMPLWI - 202
    {2198, 407, 3, 2 },
    // PPC_CMPW - 203
    {2214, 409, 3, 3 },
    // PPC_CMPWI - 204
    {2226, 412, 3, 2 },
    // PPC_CNTLZW - 205
    {2241, 414, 2, 2 },
    // PPC_CNTLZW8 - 206
    {2241, 416, 2, 2 },
    // PPC_CNTLZW8_rec - 207
    {2255, 418, 2, 2 },
    // PPC_CNTLZW_rec - 208
    {2255, 420, 2, 2 },
    // PPC_CP_PASTE_rec - 209
    {2270, 422, 3, 3 },
    // PPC_CREQV - 210
    {2284, 425, 3, 3 },
    // PPC_CRNOR - 211
    {2293, 428, 3, 3 },
    // PPC_CROR - 212
    {2306, 431, 3, 3 },
    // PPC_CRXOR - 213
    {2320, 434, 3, 3 },
    // PPC_ISEL - 214
    {2329, 437, 4, 4 },
    {2347, 441, 4, 4 },
    {2365, 445, 4, 4 },
    // PPC_ISEL8 - 217
    {2329, 449, 4, 4 },
    {2347, 453, 4, 4 },
    {2365, 457, 4, 4 },
    // PPC_MBAR - 220
    {2383, 461, 1, 1 },
    // PPC_MFDCR - 221
    {2388, 462, 2, 5 },
    {2397, 467, 2, 5 },
    {2406, 472, 2, 5 },
    {2415, 477, 2, 5 },
    {2424, 482, 2, 5 },
    {2433, 487, 2, 5 },
    {2442, 492, 2, 5 },
    {2451, 497, 2, 5 },
    // PPC_MFSPR - 229
    {2460, 502, 2, 2 },
    {2469, 504, 2, 5 },
    {2480, 509, 2, 5 },
    {2490, 514, 2, 5 },
    {2500, 519, 2, 5 },
    {2508, 524, 2, 5 },
    {2517, 529, 2, 5 },
    {2527, 534, 2, 5 },
    {2537, 539, 2, 5 },
    {2548, 544, 2, 5 },
    {2557, 549, 2, 5 },
    {2566, 554, 2, 5 },
    {2576, 559, 2, 5 },
    {2586, 564, 2, 5 },
    {2596, 569, 2, 5 },
    {2606, 574, 2, 5 },
    {2615, 579, 2, 5 },
    {2624, 584, 2, 5 },
    {2633, 589, 2, 5 },
    {2642, 594, 2, 5 },
    {2655, 599, 2, 5 },
    {2669, 604, 2, 5 },
    {2683, 609, 2, 5 },
    {2697, 614, 2, 5 },
    {2711, 619, 2, 5 },
    {2725, 624, 2, 5 },
    {2739, 629, 2, 5 },
    {2753, 634, 2, 5 },
    {2767, 639, 2, 5 },
    {2781, 644, 2, 5 },
    {2795, 649, 2, 5 },
    {2809, 654, 2, 5 },
    {2823, 659, 2, 5 },
    {2837, 664, 2, 5 },
    {2851, 669, 2, 5 },
    {2865, 674, 2, 5 },
    {2879, 679, 2, 5 },
    {2888, 684, 2, 5 },
    {2897, 689, 2, 5 },
    {2907, 694, 2, 5 },
    {2916, 699, 2, 5 },
    {2926, 704, 2, 5 },
    {2936, 709, 2, 5 },
    {2946, 714, 2, 5 },
    {2956, 719, 2, 5 },
    {2966, 724, 2, 5 },
    // PPC_MFSPR8 - 275
    {2460, 729, 2, 2 },
    {2469, 731, 2, 5 },
    {2480, 736, 2, 5 },
    {2490, 741, 2, 5 },
    {2500, 746, 2, 5 },
    {2508, 751, 2, 5 },
    {2517, 756, 2, 5 },
    {2527, 761, 2, 5 },
    {2537, 766, 2, 5 },
    {2548, 771, 2, 5 },
    {2557, 776, 2, 5 },
    {2566, 781, 2, 5 },
    {2576, 786, 2, 5 },
    {2586, 791, 2, 5 },
    {2596, 796, 2, 5 },
    {2606, 801, 2, 5 },
    {2624, 806, 2, 5 },
    {2633, 811, 2, 5 },
    {2642, 816, 2, 5 },
    // PPC_MFTB - 294
    {2976, 821, 2, 2 },
    // PPC_MFUDSCR - 295
    {2469, 823, 1, 4 },
    // PPC_MFVRSAVE - 296
    {2985, 827, 1, 1 },
    // PPC_MFVSRD - 297
    {2997, 828, 2, 2 },
    // PPC_MFVSRWZ - 298
    {3011, 830, 2, 2 },
    // PPC_MTCRF - 299
    {3026, 832, 2, 2 },
    // PPC_MTCRF8 - 300
    {3026, 834, 2, 2 },
    // PPC_MTDCR - 301
    {3034, 836, 2, 5 },
    {3043, 841, 2, 5 },
    {3052, 846, 2, 5 },
    {3061, 851, 2, 5 },
    {3070, 856, 2, 5 },
    {3079, 861, 2, 5 },
    {3088, 866, 2, 5 },
    {3097, 871, 2, 5 },
    // PPC_MTFSF - 309
    {3106, 876, 4, 4 },
    // PPC_MTFSFI - 310
    {3119, 880, 3, 3 },
    // PPC_MTFSFI_rec - 311
    {3137, 883, 3, 3 },
    // PPC_MTFSF_rec - 312
    {3156, 886, 4, 4 },
    // PPC_MTMSR - 313
    {3170, 890, 2, 5 },
    // PPC_MTMSRD - 314
    {3179, 895, 2, 5 },
    // PPC_MTSPR - 315
    {3189, 900, 2, 2 },
    {3198, 902, 2, 5 },
    {3209, 907, 2, 5 },
    {3217, 912, 2, 5 },
    {3226, 917, 2, 5 },
    {3236, 922, 2, 5 },
    {3246, 927, 2, 5 },
    {3257, 932, 2, 5 },
    {3266, 937, 2, 5 },
    {3275, 942, 2, 5 },
    {3285, 947, 2, 5 },
    {3295, 952, 2, 5 },
    {3305, 957, 2, 5 },
    {3315, 962, 2, 5 },
    {3324, 967, 2, 5 },
    {3333, 972, 2, 5 },
    {3342, 977, 2, 5 },
    {3351, 982, 2, 5 },
    {3360, 987, 2, 5 },
    {3373, 992, 2, 5 },
    {3387, 997, 2, 5 },
    {3401, 1002, 2, 5 },
    {3415, 1007, 2, 5 },
    {3429, 1012, 2, 5 },
    {3443, 1017, 2, 5 },
    {3457, 1022, 2, 5 },
    {3471, 1027, 2, 5 },
    {3485, 1032, 2, 5 },
    {3499, 1037, 2, 5 },
    {3513, 1042, 2, 5 },
    {3527, 1047, 2, 5 },
    {3541, 1052, 2, 5 },
    {3555, 1057, 2, 5 },
    {3569, 1062, 2, 5 },
    {3583, 1067, 2, 5 },
    {3597, 1072, 2, 5 },
    {3606, 1077, 2, 5 },
    {3615, 1082, 2, 5 },
    {3625, 1087, 2, 5 },
    {3634, 1092, 2, 5 },
    {3644, 1097, 2, 5 },
    {3654, 1102, 2, 5 },
    {3664, 1107, 2, 5 },
    {3674, 1112, 2, 5 },
    {3684, 1117, 2, 5 },
    // PPC_MTSPR8 - 360
    {3189, 1122, 2, 2 },
    {3198, 1124, 2, 5 },
    {3209, 1129, 2, 5 },
    {3217, 1134, 2, 5 },
    {3226, 1139, 2, 5 },
    {3236, 1144, 2, 5 },
    {3246, 1149, 2, 5 },
    {3257, 1154, 2, 5 },
    {3266, 1159, 2, 5 },
    {3275, 1164, 2, 5 },
    {3285, 1169, 2, 5 },
    {3295, 1174, 2, 5 },
    {3305, 1179, 2, 5 },
    {3315, 1184, 2, 5 },
    {3333, 1189, 2, 5 },
    {3342, 1194, 2, 5 },
    {3351, 1199, 2, 5 },
    {3360, 1204, 2, 5 },
    // PPC_MTUDSCR - 378
    {3694, 1209, 1, 4 },
    // PPC_MTVRSAVE - 379
    {3705, 1213, 1, 1 },
    // PPC_MTVSRD - 380
    {3717, 1214, 2, 2 },
    // PPC_MTVSRWA - 381
    {3731, 1216, 2, 2 },
    // PPC_MTVSRWZ - 382
    {3746, 1218, 2, 2 },
    // PPC_NOR - 383
    {3761, 1220, 3, 3 },
    // PPC_NOR8 - 384
    {3761, 1223, 3, 3 },
    // PPC_NOR8_rec - 385
    {3772, 1226, 3, 3 },
    // PPC_NOR_rec - 386
    {3772, 1229, 3, 3 },
    // PPC_OR - 387
    {3784, 1232, 3, 3 },
    // PPC_OR8 - 388
    {3784, 1235, 3, 3 },
    // PPC_OR8_rec - 389
    {3794, 1238, 3, 3 },
    // PPC_ORI - 390
    {3805, 1241, 3, 3 },
    // PPC_ORI8 - 391
    {3805, 1244, 3, 3 },
    // PPC_OR_rec - 392
    {3794, 1247, 3, 3 },
    // PPC_QVFLOGICALb - 393
    {3809, 1250, 4, 4 },
    {3819, 1254, 4, 4 },
    {3837, 1258, 4, 4 },
    {3856, 1262, 4, 4 },
    {3871, 1266, 4, 4 },
    {3889, 1270, 4, 4 },
    {3906, 1274, 4, 4 },
    {3924, 1278, 4, 4 },
    {3942, 1282, 4, 4 },
    {3956, 1286, 4, 4 },
    {3974, 1290, 4, 4 },
    {3993, 1294, 4, 4 },
    // PPC_RFEBB - 405
    {4003, 1298, 1, 1 },
    // PPC_RLDCL - 406
    {4009, 1299, 4, 4 },
    // PPC_RLDCL_rec - 407
    {4026, 1303, 4, 4 },
    // PPC_RLDICL - 408
    {4044, 1307, 4, 4 },
    {4064, 1311, 4, 3 },
    // PPC_RLDICL_32_64 - 410
    {4044, 1314, 4, 4 },
    {4064, 1318, 4, 3 },
    // PPC_RLDICL_rec - 412
    {4084, 1321, 4, 4 },
    {4105, 1325, 4, 3 },
    // PPC_RLWINM - 414
    {4126, 1328, 5, 5 },
    {4146, 1333, 5, 5 },
    // PPC_RLWINM8 - 416
    {4126, 1338, 5, 5 },
    {4146, 1343, 5, 5 },
    // PPC_RLWINM8_rec - 418
    {4166, 1348, 5, 5 },
    {4187, 1353, 5, 5 },
    // PPC_RLWINM_rec - 420
    {4166, 1358, 5, 5 },
    {4187, 1363, 5, 5 },
    // PPC_RLWNM - 422
    {4208, 1368, 5, 5 },
    // PPC_RLWNM8 - 423
    {4208, 1373, 5, 5 },
    // PPC_RLWNM8_rec - 424
    {4225, 1378, 5, 5 },
    // PPC_RLWNM_rec - 425
    {4225, 1383, 5, 5 },
    // PPC_SC - 426
    {4243, 1388, 1, 1 },
    // PPC_SUBF - 427
    {4246, 1389, 3, 3 },
    // PPC_SUBF8 - 428
    {4246, 1392, 3, 3 },
    // PPC_SUBF8_rec - 429
    {4261, 1395, 3, 3 },
    // PPC_SUBFC - 430
    {4277, 1398, 3, 3 },
    // PPC_SUBFC8 - 431
    {4277, 1401, 3, 3 },
    // PPC_SUBFC8_rec - 432
    {4293, 1404, 3, 3 },
    // PPC_SUBFC_rec - 433
    {4293, 1407, 3, 3 },
    // PPC_SUBF_rec - 434
    {4261, 1410, 3, 3 },
    // PPC_SYNC - 435
    {4310, 1413, 1, 1 },
    {4315, 1414, 1, 1 },
    {4322, 1415, 1, 1 },
    // PPC_TD - 438
    {4330, 1416, 3, 3 },
    {4342, 1419, 3, 3 },
    {4354, 1422, 3, 3 },
    {4366, 1425, 3, 3 },
    {4378, 1428, 3, 3 },
    {4391, 1431, 3, 3 },
    {4404, 1434, 3, 3 },
    // PPC_TDI - 445
    {4415, 1437, 3, 2 },
    {4430, 1439, 3, 2 },
    {4445, 1441, 3, 2 },
    {4460, 1443, 3, 2 },
    {4475, 1445, 3, 2 },
    {4491, 1447, 3, 2 },
    {4507, 1449, 3, 2 },
    // PPC_TEND - 452
    {4521, 1451, 1, 1 },
    {4527, 1452, 1, 1 },
    // PPC_TLBIE - 454
    {4536, 1453, 2, 2 },
    // PPC_TLBRE2 - 455
    {4545, 1455, 3, 3 },
    {4560, 1458, 3, 3 },
    // PPC_TLBWE2 - 457
    {4575, 1461, 3, 3 },
    {4590, 1464, 3, 3 },
    // PPC_TSR - 459
    {4605, 1467, 1, 1 },
    {4615, 1468, 1, 1 },
    // PPC_TW - 461
    {4624, 1469, 3, 3 },
    {4629, 1472, 3, 3 },
    {4641, 1475, 3, 3 },
    {4653, 1478, 3, 3 },
    {4665, 1481, 3, 3 },
    {4677, 1484, 3, 3 },
    {4690, 1487, 3, 3 },
    {4703, 1490, 3, 3 },
    // PPC_TWI - 469
    {4714, 1493, 3, 2 },
    {4729, 1495, 3, 2 },
    {4744, 1497, 3, 2 },
    {4759, 1499, 3, 2 },
    {4774, 1501, 3, 2 },
    {4790, 1503, 3, 2 },
    {4806, 1505, 3, 2 },
    // PPC_VNOR - 476
    {4820, 1507, 3, 3 },
    // PPC_VOR - 477
    {4832, 1510, 3, 3 },
    // PPC_WAIT - 478
    {4843, 1513, 1, 1 },
    {4848, 1514, 1, 1 },
    {4856, 1515, 1, 1 },
    // PPC_XORI - 481
    {4865, 1516, 3, 3 },
    // PPC_XORI8 - 482
    {4865, 1519, 3, 3 },
    // PPC_XVCPSGNDP - 483
    {4870, 1522, 3, 3 },
    // PPC_XVCPSGNSP - 484
    {4885, 1525, 3, 3 },
    // PPC_XXPERMDI - 485
    {4900, 1528, 4, 7 },
    {4918, 1535, 4, 7 },
    {4936, 1542, 4, 4 },
    {4955, 1546, 4, 4 },
    {4974, 1550, 4, 4 },
    // PPC_XXPERMDIs - 490
    {4900, 1554, 3, 6 },
    {4918, 1560, 3, 6 },
    {4974, 1566, 3, 3 },
    // PPC_gBC - 493
    {4989, 1569, 3, 2 },
    {5001, 1571, 3, 2 },
    {5013, 1573, 3, 2 },
    {5026, 1575, 3, 2 },
    {5039, 1577, 3, 2 },
    {5052, 1579, 3, 2 },
    {5065, 1581, 3, 2 },
    {5080, 1583, 3, 2 },
    {5095, 1585, 3, 2 },
    {5109, 1587, 3, 2 },
    // PPC_gBCA - 503
    {5123, 1589, 3, 2 },
    {5136, 1591, 3, 2 },
    {5149, 1593, 3, 2 },
    {5163, 1595, 3, 2 },
    {5177, 1597, 3, 2 },
    {5191, 1599, 3, 2 },
    {5205, 1601, 3, 2 },
    {5221, 1603, 3, 2 },
    {5237, 1605, 3, 2 },
    {5252, 1607, 3, 2 },
    // PPC_gBCAat - 513
    {5267, 1609, 4, 3 },
    {5287, 1612, 4, 3 },
    // PPC_gBCCTR - 515
    {5307, 1615, 3, 3 },
    {5322, 1618, 3, 3 },
    {5331, 1621, 3, 3 },
    {5340, 1624, 3, 3 },
    {5350, 1627, 3, 3 },
    {5360, 1630, 3, 3 },
    {5370, 1633, 3, 3 },
    // PPC_gBCCTRL - 522
    {5380, 1636, 3, 3 },
    {5396, 1639, 3, 3 },
    {5406, 1642, 3, 3 },
    {5416, 1645, 3, 3 },
    {5427, 1648, 3, 3 },
    {5438, 1651, 3, 3 },
    {5449, 1654, 3, 3 },
    // PPC_gBCL - 529
    {5460, 1657, 3, 2 },
    {5473, 1659, 3, 2 },
    {5486, 1661, 3, 2 },
    {5500, 1663, 3, 2 },
    {5514, 1665, 3, 2 },
    {5528, 1667, 3, 2 },
    {5542, 1669, 3, 2 },
    {5558, 1671, 3, 2 },
    {5574, 1673, 3, 2 },
    {5589, 1675, 3, 2 },
    // PPC_gBCLA - 539
    {5604, 1677, 3, 2 },
    {5618, 1679, 3, 2 },
    {5632, 1681, 3, 2 },
    {5647, 1683, 3, 2 },
    {5662, 1685, 3, 2 },
    {5677, 1687, 3, 2 },
    {5692, 1689, 3, 2 },
    {5709, 1691, 3, 2 },
    {5726, 1693, 3, 2 },
    {5742, 1695, 3, 2 },
    // PPC_gBCLAat - 549
    {5758, 1697, 4, 3 },
    {5779, 1700, 4, 3 },
    // PPC_gBCLR - 551
    {5800, 1703, 3, 3 },
    {5814, 1706, 3, 3 },
    {5822, 1709, 3, 3 },
    {5830, 1712, 3, 3 },
    {5839, 1715, 3, 3 },
    {5848, 1718, 3, 3 },
    {5857, 1721, 3, 3 },
    {5866, 1724, 3, 3 },
    {5877, 1727, 3, 3 },
    {5888, 1730, 3, 3 },
    {5898, 1733, 3, 3 },
    // PPC_gBCLRL - 562
    {5908, 1736, 3, 3 },
    {5923, 1739, 3, 3 },
    {5932, 1742, 3, 3 },
    {5941, 1745, 3, 3 },
    {5951, 1748, 3, 3 },
    {5961, 1751, 3, 3 },
    {5971, 1754, 3, 3 },
    {5981, 1757, 3, 3 },
    {5993, 1760, 3, 3 },
    {6005, 1763, 3, 3 },
    {6016, 1766, 3, 3 },
    // PPC_gBCLat - 573
    {6027, 1769, 4, 3 },
    {6047, 1772, 4, 3 },
    // PPC_gBCat - 575
    {6067, 1775, 4, 3 },
    {6086, 1778, 4, 3 },
  {0},  };

  static const AliasPatternCond Conds[] = {
    // (ADDI gprc:$rD, ZERO, s16imm:$imm) - 0
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO},
    // (ADDI8 g8rc:$rD, ZERO8, s16imm64:$imm) - 2
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO8},
    // (ADDIS gprc:$rD, ZERO, s17imm:$imm) - 4
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO},
    // (ADDIS8 g8rc:$rD, ZERO8, s17imm64:$imm) - 6
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO8},
    // (ADDPCIS g8rc:$RT, 0) - 8
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (BCC 12, crrc:$cc, condbrtarget:$dst) - 10
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 12, CR0, condbrtarget:$dst) - 12
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 14, crrc:$cc, condbrtarget:$dst) - 14
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 14, CR0, condbrtarget:$dst) - 16
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 15, crrc:$cc, condbrtarget:$dst) - 18
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 15, CR0, condbrtarget:$dst) - 20
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 44, crrc:$cc, condbrtarget:$dst) - 22
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 44, CR0, condbrtarget:$dst) - 24
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 46, crrc:$cc, condbrtarget:$dst) - 26
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 46, CR0, condbrtarget:$dst) - 28
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 47, crrc:$cc, condbrtarget:$dst) - 30
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 47, CR0, condbrtarget:$dst) - 32
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 76, crrc:$cc, condbrtarget:$dst) - 34
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 76, CR0, condbrtarget:$dst) - 36
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 78, crrc:$cc, condbrtarget:$dst) - 38
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 78, CR0, condbrtarget:$dst) - 40
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 79, crrc:$cc, condbrtarget:$dst) - 42
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 79, CR0, condbrtarget:$dst) - 44
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 68, crrc:$cc, condbrtarget:$dst) - 46
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 68, CR0, condbrtarget:$dst) - 48
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 70, crrc:$cc, condbrtarget:$dst) - 50
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 70, CR0, condbrtarget:$dst) - 52
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 71, crrc:$cc, condbrtarget:$dst) - 54
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 71, CR0, condbrtarget:$dst) - 56
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 12, crrc:$cc, abscondbrtarget:$dst) - 58
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 12, CR0, abscondbrtarget:$dst) - 60
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 14, crrc:$cc, abscondbrtarget:$dst) - 62
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 14, CR0, abscondbrtarget:$dst) - 64
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 15, crrc:$cc, abscondbrtarget:$dst) - 66
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 15, CR0, abscondbrtarget:$dst) - 68
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 44, crrc:$cc, abscondbrtarget:$dst) - 70
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 44, CR0, abscondbrtarget:$dst) - 72
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 46, crrc:$cc, abscondbrtarget:$dst) - 74
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 46, CR0, abscondbrtarget:$dst) - 76
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 47, crrc:$cc, abscondbrtarget:$dst) - 78
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 47, CR0, abscondbrtarget:$dst) - 80
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 76, crrc:$cc, abscondbrtarget:$dst) - 82
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 76, CR0, abscondbrtarget:$dst) - 84
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 78, crrc:$cc, abscondbrtarget:$dst) - 86
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 78, CR0, abscondbrtarget:$dst) - 88
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 79, crrc:$cc, abscondbrtarget:$dst) - 90
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 79, CR0, abscondbrtarget:$dst) - 92
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 68, crrc:$cc, abscondbrtarget:$dst) - 94
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 68, CR0, abscondbrtarget:$dst) - 96
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 70, crrc:$cc, abscondbrtarget:$dst) - 98
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 70, CR0, abscondbrtarget:$dst) - 100
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 71, crrc:$cc, abscondbrtarget:$dst) - 102
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 71, CR0, abscondbrtarget:$dst) - 104
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 12, crrc:$cc) - 106
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 12, CR0) - 108
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 14, crrc:$cc) - 110
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 14, CR0) - 112
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 15, crrc:$cc) - 114
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 15, CR0) - 116
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 44, crrc:$cc) - 118
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 44, CR0) - 120
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 46, crrc:$cc) - 122
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 46, CR0) - 124
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 47, crrc:$cc) - 126
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 47, CR0) - 128
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 76, crrc:$cc) - 130
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 76, CR0) - 132
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 78, crrc:$cc) - 134
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 78, CR0) - 136
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 79, crrc:$cc) - 138
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 79, CR0) - 140
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 68, crrc:$cc) - 142
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 68, CR0) - 144
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 70, crrc:$cc) - 146
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 70, CR0) - 148
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 71, crrc:$cc) - 150
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 71, CR0) - 152
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 12, crrc:$cc) - 154
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 12, CR0) - 156
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 14, crrc:$cc) - 158
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 14, CR0) - 160
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 15, crrc:$cc) - 162
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 15, CR0) - 164
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 44, crrc:$cc) - 166
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 44, CR0) - 168
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 46, crrc:$cc) - 170
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 46, CR0) - 172
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 47, crrc:$cc) - 174
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 47, CR0) - 176
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 76, crrc:$cc) - 178
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 76, CR0) - 180
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 78, crrc:$cc) - 182
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 78, CR0) - 184
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 79, crrc:$cc) - 186
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 79, CR0) - 188
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 68, crrc:$cc) - 190
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 68, CR0) - 192
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 70, crrc:$cc) - 194
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 70, CR0) - 196
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 71, crrc:$cc) - 198
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 71, CR0) - 200
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 12, crrc:$cc, condbrtarget:$dst) - 202
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 12, CR0, condbrtarget:$dst) - 204
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 14, crrc:$cc, condbrtarget:$dst) - 206
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 14, CR0, condbrtarget:$dst) - 208
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 15, crrc:$cc, condbrtarget:$dst) - 210
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 15, CR0, condbrtarget:$dst) - 212
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 44, crrc:$cc, condbrtarget:$dst) - 214
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 44, CR0, condbrtarget:$dst) - 216
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 46, crrc:$cc, condbrtarget:$dst) - 218
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 46, CR0, condbrtarget:$dst) - 220
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 47, crrc:$cc, condbrtarget:$dst) - 222
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 47, CR0, condbrtarget:$dst) - 224
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 76, crrc:$cc, condbrtarget:$dst) - 226
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 76, CR0, condbrtarget:$dst) - 228
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 78, crrc:$cc, condbrtarget:$dst) - 230
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 78, CR0, condbrtarget:$dst) - 232
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 79, crrc:$cc, condbrtarget:$dst) - 234
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 79, CR0, condbrtarget:$dst) - 236
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 68, crrc:$cc, condbrtarget:$dst) - 238
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 68, CR0, condbrtarget:$dst) - 240
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 70, crrc:$cc, condbrtarget:$dst) - 242
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 70, CR0, condbrtarget:$dst) - 244
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 71, crrc:$cc, condbrtarget:$dst) - 246
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 71, CR0, condbrtarget:$dst) - 248
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 12, crrc:$cc, abscondbrtarget:$dst) - 250
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 12, CR0, abscondbrtarget:$dst) - 252
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 14, crrc:$cc, abscondbrtarget:$dst) - 254
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 14, CR0, abscondbrtarget:$dst) - 256
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 15, crrc:$cc, abscondbrtarget:$dst) - 258
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 15, CR0, abscondbrtarget:$dst) - 260
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 44, crrc:$cc, abscondbrtarget:$dst) - 262
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 44, CR0, abscondbrtarget:$dst) - 264
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 46, crrc:$cc, abscondbrtarget:$dst) - 266
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 46, CR0, abscondbrtarget:$dst) - 268
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 47, crrc:$cc, abscondbrtarget:$dst) - 270
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 47, CR0, abscondbrtarget:$dst) - 272
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 76, crrc:$cc, abscondbrtarget:$dst) - 274
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 76, CR0, abscondbrtarget:$dst) - 276
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 78, crrc:$cc, abscondbrtarget:$dst) - 278
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 78, CR0, abscondbrtarget:$dst) - 280
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 79, crrc:$cc, abscondbrtarget:$dst) - 282
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 79, CR0, abscondbrtarget:$dst) - 284
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 68, crrc:$cc, abscondbrtarget:$dst) - 286
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 68, CR0, abscondbrtarget:$dst) - 288
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 70, crrc:$cc, abscondbrtarget:$dst) - 290
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 70, CR0, abscondbrtarget:$dst) - 292
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 71, crrc:$cc, abscondbrtarget:$dst) - 294
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 71, CR0, abscondbrtarget:$dst) - 296
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 12, crrc:$cc) - 298
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 12, CR0) - 300
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 14, crrc:$cc) - 302
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 14, CR0) - 304
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 15, crrc:$cc) - 306
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 15, CR0) - 308
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 44, crrc:$cc) - 310
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 44, CR0) - 312
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 46, crrc:$cc) - 314
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 46, CR0) - 316
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 47, crrc:$cc) - 318
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 47, CR0) - 320
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 76, crrc:$cc) - 322
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 76, CR0) - 324
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 78, crrc:$cc) - 326
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 78, CR0) - 328
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 79, crrc:$cc) - 330
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 79, CR0) - 332
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 68, crrc:$cc) - 334
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 68, CR0) - 336
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 70, crrc:$cc) - 338
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 70, CR0) - 340
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 71, crrc:$cc) - 342
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 71, CR0) - 344
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 12, crrc:$cc) - 346
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 12, CR0) - 348
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 14, crrc:$cc) - 350
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 14, CR0) - 352
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 15, crrc:$cc) - 354
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 15, CR0) - 356
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 44, crrc:$cc) - 358
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 44, CR0) - 360
    {AliasPatternCond_K_Imm, (uint32_t)44},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 46, crrc:$cc) - 362
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 46, CR0) - 364
    {AliasPatternCond_K_Imm, (uint32_t)46},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 47, crrc:$cc) - 366
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 47, CR0) - 368
    {AliasPatternCond_K_Imm, (uint32_t)47},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 76, crrc:$cc) - 370
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 76, CR0) - 372
    {AliasPatternCond_K_Imm, (uint32_t)76},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 78, crrc:$cc) - 374
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 78, CR0) - 376
    {AliasPatternCond_K_Imm, (uint32_t)78},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 79, crrc:$cc) - 378
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 79, CR0) - 380
    {AliasPatternCond_K_Imm, (uint32_t)79},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 68, crrc:$cc) - 382
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 68, CR0) - 384
    {AliasPatternCond_K_Imm, (uint32_t)68},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 70, crrc:$cc) - 386
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 70, CR0) - 388
    {AliasPatternCond_K_Imm, (uint32_t)70},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 71, crrc:$cc) - 390
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 71, CR0) - 392
    {AliasPatternCond_K_Imm, (uint32_t)71},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (CMPD CR0, g8rc:$rA, g8rc:$rB) - 394
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPDI CR0, g8rc:$rA, s16imm64:$imm) - 397
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPLD CR0, g8rc:$rA, g8rc:$rB) - 399
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPLDI CR0, g8rc:$rA, u16imm64:$imm) - 402
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPLW CR0, gprc:$rA, gprc:$rB) - 404
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CMPLWI CR0, gprc:$rA, u16imm:$imm) - 407
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CMPW CR0, gprc:$rA, gprc:$rB) - 409
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CMPWI CR0, gprc:$rA, s16imm:$imm) - 412
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CNTLZW gprc:$rA, gprc:$rS) - 414
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CNTLZW8 g8rc:$rA, g8rc:$rS) - 416
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CNTLZW8_rec g8rc:$rA, g8rc:$rS) - 418
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CNTLZW_rec gprc:$rA, gprc:$rS) - 420
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CP_PASTE_rec gprc:$RA, gprc:$RB, 1) - 422
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (CREQV crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 425
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_TiedReg, 0},
    // (CRNOR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 428
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (CROR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 431
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (CRXOR crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 434
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_TiedReg, 0},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0LT) - 437
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRC_NOR0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0LT},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0GT) - 441
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRC_NOR0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0GT},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0EQ) - 445
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRC_NOR0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0EQ},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0LT) - 449
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RC_NOX0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0LT},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0GT) - 453
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RC_NOX0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0GT},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0EQ) - 457
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RC_NOX0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0EQ},
    // (MBAR 0) - 461
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (MFDCR gprc:$Rx, 128) - 462
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)128},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 129) - 467
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)129},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 130) - 472
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)130},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 131) - 477
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)131},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 132) - 482
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)132},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 133) - 487
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)133},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 134) - 492
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)134},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 135) - 497
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)135},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 1) - 502
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (MFSPR gprc:$Rx, 3) - 504
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 4) - 509
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 5) - 514
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)5},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 8) - 519
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 9) - 524
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)9},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 13) - 529
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)13},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 17) - 534
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)17},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 18) - 539
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)18},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 19) - 544
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)19},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 22) - 549
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)22},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 25) - 554
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)25},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 26) - 559
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)26},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 27) - 564
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)27},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 28) - 569
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)28},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 29) - 574
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)29},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 48) - 579
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)48},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$RT, 280) - 584
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)280},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$RT, 287) - 589
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)287},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 512) - 594
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)512},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 536) - 599
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)536},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 537) - 604
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)537},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 528) - 609
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)528},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 529) - 614
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)529},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 538) - 619
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)538},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 539) - 624
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)539},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 530) - 629
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)530},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 531) - 634
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)531},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 540) - 639
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)540},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 541) - 644
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)541},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 532) - 649
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)532},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 533) - 654
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)533},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 542) - 659
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)542},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 543) - 664
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)543},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 534) - 669
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)534},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 535) - 674
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)535},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$RT, 896) - 679
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)896},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 980) - 684
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)980},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 981) - 689
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)981},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 986) - 694
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)986},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 988) - 699
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)988},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 989) - 704
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)989},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 990) - 709
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)990},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 991) - 714
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)991},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 1018) - 719
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1018},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 1019) - 724
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1019},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 1) - 729
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (MFSPR8 g8rc:$Rx, 3) - 731
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 4) - 736
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 5) - 741
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)5},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 8) - 746
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 9) - 751
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)9},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 13) - 756
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)13},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 17) - 761
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)17},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 18) - 766
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)18},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 19) - 771
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)19},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 22) - 776
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)22},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 25) - 781
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)25},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 26) - 786
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)26},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 27) - 791
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)27},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 28) - 796
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)28},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 29) - 801
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)29},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$RT, 280) - 806
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)280},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$RT, 287) - 811
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)287},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 512) - 816
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)512},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFTB gprc:$Rx, 269) - 821
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)269},
    // (MFUDSCR gprc:$Rx) - 823
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MFVRSAVE gprc:$rS) - 827
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MFVSRD g8rc:$rA, f8rc:$src) - 828
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    // (MFVSRWZ gprc:$rA, f8rc:$src) - 830
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    // (MTCRF 255, gprc:$rA) - 832
    {AliasPatternCond_K_Imm, (uint32_t)255},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTCRF8 255, g8rc:$rA) - 834
    {AliasPatternCond_K_Imm, (uint32_t)255},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTDCR gprc:$Rx, 128) - 836
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)128},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 129) - 841
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)129},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 130) - 846
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)130},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 131) - 851
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)131},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 132) - 856
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)132},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 133) - 861
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)133},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 134) - 866
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)134},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 135) - 871
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)135},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTFSF i32imm:$FLM, f8rc:$FRB, 0, 0) - 876
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (MTFSFI u3imm:$BF, u4imm:$U, 0) - 880
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (MTFSFI_rec u3imm:$BF, u4imm:$U, 0) - 883
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (MTFSF_rec i32imm:$FLM, f8rc:$FRB, 0, 0) - 886
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (MTMSR gprc:$RS, 0) - 890
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTMSRD gprc:$RS, 0) - 895
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 1, gprc:$Rx) - 900
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 3, gprc:$Rx) - 902
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 8, gprc:$Rx) - 907
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 9, gprc:$Rx) - 912
    {AliasPatternCond_K_Imm, (uint32_t)9},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 13, gprc:$Rx) - 917
    {AliasPatternCond_K_Imm, (uint32_t)13},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 17, gprc:$Rx) - 922
    {AliasPatternCond_K_Imm, (uint32_t)17},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 18, gprc:$Rx) - 927
    {AliasPatternCond_K_Imm, (uint32_t)18},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 19, gprc:$Rx) - 932
    {AliasPatternCond_K_Imm, (uint32_t)19},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 22, gprc:$Rx) - 937
    {AliasPatternCond_K_Imm, (uint32_t)22},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 25, gprc:$Rx) - 942
    {AliasPatternCond_K_Imm, (uint32_t)25},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 26, gprc:$Rx) - 947
    {AliasPatternCond_K_Imm, (uint32_t)26},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 27, gprc:$Rx) - 952
    {AliasPatternCond_K_Imm, (uint32_t)27},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 28, gprc:$Rx) - 957
    {AliasPatternCond_K_Imm, (uint32_t)28},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 29, gprc:$Rx) - 962
    {AliasPatternCond_K_Imm, (uint32_t)29},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 48, gprc:$Rx) - 967
    {AliasPatternCond_K_Imm, (uint32_t)48},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 280, gprc:$RT) - 972
    {AliasPatternCond_K_Imm, (uint32_t)280},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 284, gprc:$Rx) - 977
    {AliasPatternCond_K_Imm, (uint32_t)284},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 285, gprc:$Rx) - 982
    {AliasPatternCond_K_Imm, (uint32_t)285},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 512, gprc:$Rx) - 987
    {AliasPatternCond_K_Imm, (uint32_t)512},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 536, gprc:$Rx) - 992
    {AliasPatternCond_K_Imm, (uint32_t)536},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 537, gprc:$Rx) - 997
    {AliasPatternCond_K_Imm, (uint32_t)537},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 528, gprc:$Rx) - 1002
    {AliasPatternCond_K_Imm, (uint32_t)528},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 529, gprc:$Rx) - 1007
    {AliasPatternCond_K_Imm, (uint32_t)529},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 538, gprc:$Rx) - 1012
    {AliasPatternCond_K_Imm, (uint32_t)538},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 539, gprc:$Rx) - 1017
    {AliasPatternCond_K_Imm, (uint32_t)539},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 530, gprc:$Rx) - 1022
    {AliasPatternCond_K_Imm, (uint32_t)530},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 531, gprc:$Rx) - 1027
    {AliasPatternCond_K_Imm, (uint32_t)531},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 540, gprc:$Rx) - 1032
    {AliasPatternCond_K_Imm, (uint32_t)540},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 541, gprc:$Rx) - 1037
    {AliasPatternCond_K_Imm, (uint32_t)541},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 532, gprc:$Rx) - 1042
    {AliasPatternCond_K_Imm, (uint32_t)532},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 533, gprc:$Rx) - 1047
    {AliasPatternCond_K_Imm, (uint32_t)533},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 542, gprc:$Rx) - 1052
    {AliasPatternCond_K_Imm, (uint32_t)542},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 543, gprc:$Rx) - 1057
    {AliasPatternCond_K_Imm, (uint32_t)543},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 534, gprc:$Rx) - 1062
    {AliasPatternCond_K_Imm, (uint32_t)534},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 535, gprc:$Rx) - 1067
    {AliasPatternCond_K_Imm, (uint32_t)535},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 896, gprc:$RT) - 1072
    {AliasPatternCond_K_Imm, (uint32_t)896},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 980, gprc:$Rx) - 1077
    {AliasPatternCond_K_Imm, (uint32_t)980},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 981, gprc:$Rx) - 1082
    {AliasPatternCond_K_Imm, (uint32_t)981},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 986, gprc:$Rx) - 1087
    {AliasPatternCond_K_Imm, (uint32_t)986},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 988, gprc:$Rx) - 1092
    {AliasPatternCond_K_Imm, (uint32_t)988},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 989, gprc:$Rx) - 1097
    {AliasPatternCond_K_Imm, (uint32_t)989},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 990, gprc:$Rx) - 1102
    {AliasPatternCond_K_Imm, (uint32_t)990},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 991, gprc:$Rx) - 1107
    {AliasPatternCond_K_Imm, (uint32_t)991},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 1018, gprc:$Rx) - 1112
    {AliasPatternCond_K_Imm, (uint32_t)1018},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR 1019, gprc:$Rx) - 1117
    {AliasPatternCond_K_Imm, (uint32_t)1019},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 1, g8rc:$Rx) - 1122
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 3, g8rc:$Rx) - 1124
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 8, g8rc:$Rx) - 1129
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 9, g8rc:$Rx) - 1134
    {AliasPatternCond_K_Imm, (uint32_t)9},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 13, g8rc:$Rx) - 1139
    {AliasPatternCond_K_Imm, (uint32_t)13},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 17, g8rc:$Rx) - 1144
    {AliasPatternCond_K_Imm, (uint32_t)17},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 18, g8rc:$Rx) - 1149
    {AliasPatternCond_K_Imm, (uint32_t)18},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 19, g8rc:$Rx) - 1154
    {AliasPatternCond_K_Imm, (uint32_t)19},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 22, g8rc:$Rx) - 1159
    {AliasPatternCond_K_Imm, (uint32_t)22},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 25, g8rc:$Rx) - 1164
    {AliasPatternCond_K_Imm, (uint32_t)25},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 26, g8rc:$Rx) - 1169
    {AliasPatternCond_K_Imm, (uint32_t)26},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 27, g8rc:$Rx) - 1174
    {AliasPatternCond_K_Imm, (uint32_t)27},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 28, g8rc:$Rx) - 1179
    {AliasPatternCond_K_Imm, (uint32_t)28},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 29, g8rc:$Rx) - 1184
    {AliasPatternCond_K_Imm, (uint32_t)29},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 280, g8rc:$RT) - 1189
    {AliasPatternCond_K_Imm, (uint32_t)280},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 284, g8rc:$Rx) - 1194
    {AliasPatternCond_K_Imm, (uint32_t)284},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 285, g8rc:$Rx) - 1199
    {AliasPatternCond_K_Imm, (uint32_t)285},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTSPR8 512, g8rc:$Rx) - 1204
    {AliasPatternCond_K_Imm, (uint32_t)512},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTUDSCR gprc:$Rx) - 1209
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (MTVRSAVE gprc:$rS) - 1213
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTVSRD f8rc:$dst, g8rc:$rA) - 1214
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTVSRWA f8rc:$dst, gprc:$rA) - 1216
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTVSRWZ f8rc:$dst, gprc:$rA) - 1218
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (NOR gprc:$rA, gprc:$rS, gprc:$rS) - 1220
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (NOR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1223
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (NOR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1226
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (NOR_rec gprc:$rA, gprc:$rS, gprc:$rS) - 1229
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (OR gprc:$rA, gprc:$rB, gprc:$rB) - 1232
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (OR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1235
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (OR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1238
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (ORI R0, R0, 0) - 1241
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (ORI8 X0, X0, 0) - 1244
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (OR_rec gprc:$rA, gprc:$rB, gprc:$rB) - 1247
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRT, qbrc:$FRT, 0) - 1250
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 1) - 1254
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 4) - 1258
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)4},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRA, 5) - 1262
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, (uint32_t)5},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 6) - 1266
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)6},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 7) - 1270
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)7},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 8) - 1274
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)8},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 9) - 1278
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)9},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRA, 10) - 1282
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, (uint32_t)10},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 13) - 1286
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)13},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 14) - 1290
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)14},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRT, qbrc:$FRT, 15) - 1294
    {AliasPatternCond_K_RegClass, PPC_QBRCRegClassID},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_Imm, (uint32_t)15},
    // (RFEBB 1) - 1298
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (RLDCL g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 1299
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDCL_rec g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 1303
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDICL g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 1307
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDICL g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 1311
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, u6imm:$n, 0) - 1314
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, 0, u6imm:$n) - 1318
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 1321
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 1325
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (RLWINM gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 1328
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 1333
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM8 g8rc:$rA, g8rc:$rS, u5imm:$n, 0, 31) - 1338
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM8 g8rc:$rA, g8rc:$rS, 0, u5imm:$n, 31) - 1343
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM8_rec g8rc:$rA, g8rc:$rS, u5imm:$n, 0, 31) - 1348
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM8_rec g8rc:$rA, g8rc:$rS, 0, u5imm:$n, 31) - 1353
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM_rec gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 1358
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWINM_rec gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 1363
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWNM gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 1368
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWNM8 g8rc:$rA, g8rc:$rS, g8rc:$rB, 0, 31) - 1373
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWNM8_rec g8rc:$rA, g8rc:$rS, g8rc:$rB, 0, 31) - 1378
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (RLWNM_rec gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 1383
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)31},
    // (SC 0) - 1388
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (SUBF gprc:$rA, gprc:$rC, gprc:$rB) - 1389
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SUBF8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1392
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBF8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1395
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBFC gprc:$rA, gprc:$rC, gprc:$rB) - 1398
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SUBFC8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1401
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBFC8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1404
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBFC_rec gprc:$rA, gprc:$rC, gprc:$rB) - 1407
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SUBF_rec gprc:$rA, gprc:$rC, gprc:$rB) - 1410
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SYNC 0) - 1413
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (SYNC 1) - 1414
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (SYNC 2) - 1415
    {AliasPatternCond_K_Imm, (uint32_t)2},
    // (TD 16, g8rc:$rA, g8rc:$rB) - 1416
    {AliasPatternCond_K_Imm, (uint32_t)16},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 4, g8rc:$rA, g8rc:$rB) - 1419
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 8, g8rc:$rA, g8rc:$rB) - 1422
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 24, g8rc:$rA, g8rc:$rB) - 1425
    {AliasPatternCond_K_Imm, (uint32_t)24},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 2, g8rc:$rA, g8rc:$rB) - 1428
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 1, g8rc:$rA, g8rc:$rB) - 1431
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 31, g8rc:$rA, g8rc:$rB) - 1434
    {AliasPatternCond_K_Imm, (uint32_t)31},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 16, g8rc:$rA, s16imm:$imm) - 1437
    {AliasPatternCond_K_Imm, (uint32_t)16},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 4, g8rc:$rA, s16imm:$imm) - 1439
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 8, g8rc:$rA, s16imm:$imm) - 1441
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 24, g8rc:$rA, s16imm:$imm) - 1443
    {AliasPatternCond_K_Imm, (uint32_t)24},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 2, g8rc:$rA, s16imm:$imm) - 1445
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 1, g8rc:$rA, s16imm:$imm) - 1447
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 31, g8rc:$rA, s16imm:$imm) - 1449
    {AliasPatternCond_K_Imm, (uint32_t)31},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TEND 0) - 1451
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (TEND 1) - 1452
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (TLBIE R0, gprc:$RB) - 1453
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TLBRE2 gprc:$RS, gprc:$A, 0) - 1455
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (TLBRE2 gprc:$RS, gprc:$A, 1) - 1458
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (TLBWE2 gprc:$RS, gprc:$A, 0) - 1461
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (TLBWE2 gprc:$RS, gprc:$A, 1) - 1464
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (TSR 0) - 1467
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (TSR 1) - 1468
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (TW 31, R0, R0) - 1469
    {AliasPatternCond_K_Imm, (uint32_t)31},
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Reg, PPC_R0},
    // (TW 16, gprc:$rA, gprc:$rB) - 1472
    {AliasPatternCond_K_Imm, (uint32_t)16},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 4, gprc:$rA, gprc:$rB) - 1475
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 8, gprc:$rA, gprc:$rB) - 1478
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 24, gprc:$rA, gprc:$rB) - 1481
    {AliasPatternCond_K_Imm, (uint32_t)24},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 2, gprc:$rA, gprc:$rB) - 1484
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 1, gprc:$rA, gprc:$rB) - 1487
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 31, gprc:$rA, gprc:$rB) - 1490
    {AliasPatternCond_K_Imm, (uint32_t)31},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 16, gprc:$rA, s16imm:$imm) - 1493
    {AliasPatternCond_K_Imm, (uint32_t)16},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 4, gprc:$rA, s16imm:$imm) - 1495
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 8, gprc:$rA, s16imm:$imm) - 1497
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 24, gprc:$rA, s16imm:$imm) - 1499
    {AliasPatternCond_K_Imm, (uint32_t)24},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 2, gprc:$rA, s16imm:$imm) - 1501
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 1, gprc:$rA, s16imm:$imm) - 1503
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 31, gprc:$rA, s16imm:$imm) - 1505
    {AliasPatternCond_K_Imm, (uint32_t)31},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (VNOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 1507
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (VOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 1510
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (WAIT 0) - 1513
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (WAIT 1) - 1514
    {AliasPatternCond_K_Imm, (uint32_t)1},
    // (WAIT 2) - 1515
    {AliasPatternCond_K_Imm, (uint32_t)2},
    // (XORI R0, R0, 0) - 1516
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (XORI8 X0, X0, 0) - 1519
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (XVCPSGNDP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 1522
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (XVCPSGNSP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 1525
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 0) - 1528
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 3) - 1535
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 0) - 1542
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 3) - 1546
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 2) - 1550
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, (uint32_t)2},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 0) - 1554
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSFRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 3) - 1560
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSFRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_OrNegFeature, PPC_AIXOS},
    {AliasPatternCond_K_OrFeature, PPC_FeatureModernAIXAs},
    {AliasPatternCond_K_EndOrFeatures, 0},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 2) - 1566
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSFRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)2},
    // (gBC 12, crbitrc:$bi, condbrtarget:$dst) - 1569
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 4, crbitrc:$bi, condbrtarget:$dst) - 1571
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 14, crbitrc:$bi, condbrtarget:$dst) - 1573
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 6, crbitrc:$bi, condbrtarget:$dst) - 1575
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 15, crbitrc:$bi, condbrtarget:$dst) - 1577
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 7, crbitrc:$bi, condbrtarget:$dst) - 1579
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 8, crbitrc:$bi, condbrtarget:$dst) - 1581
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 0, crbitrc:$bi, condbrtarget:$dst) - 1583
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 10, crbitrc:$bi, condbrtarget:$dst) - 1585
    {AliasPatternCond_K_Imm, (uint32_t)10},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 2, crbitrc:$bi, condbrtarget:$dst) - 1587
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1589
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1591
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1593
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1595
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1597
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1599
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1601
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1603
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1605
    {AliasPatternCond_K_Imm, (uint32_t)10},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1607
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1609
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1612
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCCTR u5imm:$bo, crbitrc:$bi, 0) - 1615
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTR 12, crbitrc:$bi, 0) - 1618
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTR 4, crbitrc:$bi, 0) - 1621
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTR 14, crbitrc:$bi, 0) - 1624
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTR 6, crbitrc:$bi, 0) - 1627
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTR 15, crbitrc:$bi, 0) - 1630
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTR 7, crbitrc:$bi, 0) - 1633
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL u5imm:$bo, crbitrc:$bi, 0) - 1636
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL 12, crbitrc:$bi, 0) - 1639
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL 4, crbitrc:$bi, 0) - 1642
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL 14, crbitrc:$bi, 0) - 1645
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL 6, crbitrc:$bi, 0) - 1648
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL 15, crbitrc:$bi, 0) - 1651
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCCTRL 7, crbitrc:$bi, 0) - 1654
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCL 12, crbitrc:$bi, condbrtarget:$dst) - 1657
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 4, crbitrc:$bi, condbrtarget:$dst) - 1659
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 14, crbitrc:$bi, condbrtarget:$dst) - 1661
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 6, crbitrc:$bi, condbrtarget:$dst) - 1663
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 15, crbitrc:$bi, condbrtarget:$dst) - 1665
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 7, crbitrc:$bi, condbrtarget:$dst) - 1667
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 8, crbitrc:$bi, condbrtarget:$dst) - 1669
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 0, crbitrc:$bi, condbrtarget:$dst) - 1671
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 10, crbitrc:$bi, condbrtarget:$dst) - 1673
    {AliasPatternCond_K_Imm, (uint32_t)10},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 2, crbitrc:$bi, condbrtarget:$dst) - 1675
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1677
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1679
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1681
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1683
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1685
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1687
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1689
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1691
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1693
    {AliasPatternCond_K_Imm, (uint32_t)10},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1695
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1697
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1700
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLR u5imm:$bo, crbitrc:$bi, 0) - 1703
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 12, crbitrc:$bi, 0) - 1706
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 4, crbitrc:$bi, 0) - 1709
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 14, crbitrc:$bi, 0) - 1712
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 6, crbitrc:$bi, 0) - 1715
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 15, crbitrc:$bi, 0) - 1718
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 7, crbitrc:$bi, 0) - 1721
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 8, crbitrc:$bi, 0) - 1724
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 0, crbitrc:$bi, 0) - 1727
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 10, crbitrc:$bi, 0) - 1730
    {AliasPatternCond_K_Imm, (uint32_t)10},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLR 2, crbitrc:$bi, 0) - 1733
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL u5imm:$bo, crbitrc:$bi, 0) - 1736
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 12, crbitrc:$bi, 0) - 1739
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 4, crbitrc:$bi, 0) - 1742
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 14, crbitrc:$bi, 0) - 1745
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 6, crbitrc:$bi, 0) - 1748
    {AliasPatternCond_K_Imm, (uint32_t)6},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 15, crbitrc:$bi, 0) - 1751
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 7, crbitrc:$bi, 0) - 1754
    {AliasPatternCond_K_Imm, (uint32_t)7},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 8, crbitrc:$bi, 0) - 1757
    {AliasPatternCond_K_Imm, (uint32_t)8},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 0, crbitrc:$bi, 0) - 1760
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 10, crbitrc:$bi, 0) - 1763
    {AliasPatternCond_K_Imm, (uint32_t)10},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLRL 2, crbitrc:$bi, 0) - 1766
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    // (gBCLat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1769
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1772
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1775
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1778
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
  {0},  };

  static const char AsmStrings[] =
    /* 0 */ "li $\x01, $\xFF\x03\x01\0"
    /* 12 */ "lis $\x01, $\xFF\x03\x01\0"
    /* 25 */ "lnia $\x01\0"
    /* 33 */ "blt $\x02, $\xFF\x03\x02\0"
    /* 46 */ "blt $\xFF\x03\x02\0"
    /* 55 */ "blt- $\x02, $\xFF\x03\x02\0"
    /* 69 */ "blt- $\xFF\x03\x02\0"
    /* 79 */ "blt+ $\x02, $\xFF\x03\x02\0"
    /* 93 */ "blt+ $\xFF\x03\x02\0"
    /* 103 */ "bgt $\x02, $\xFF\x03\x02\0"
    /* 116 */ "bgt $\xFF\x03\x02\0"
    /* 125 */ "bgt- $\x02, $\xFF\x03\x02\0"
    /* 139 */ "bgt- $\xFF\x03\x02\0"
    /* 149 */ "bgt+ $\x02, $\xFF\x03\x02\0"
    /* 163 */ "bgt+ $\xFF\x03\x02\0"
    /* 173 */ "beq $\x02, $\xFF\x03\x02\0"
    /* 186 */ "beq $\xFF\x03\x02\0"
    /* 195 */ "beq- $\x02, $\xFF\x03\x02\0"
    /* 209 */ "beq- $\xFF\x03\x02\0"
    /* 219 */ "beq+ $\x02, $\xFF\x03\x02\0"
    /* 233 */ "beq+ $\xFF\x03\x02\0"
    /* 243 */ "bne $\x02, $\xFF\x03\x02\0"
    /* 256 */ "bne $\xFF\x03\x02\0"
    /* 265 */ "bne- $\x02, $\xFF\x03\x02\0"
    /* 279 */ "bne- $\xFF\x03\x02\0"
    /* 289 */ "bne+ $\x02, $\xFF\x03\x02\0"
    /* 303 */ "bne+ $\xFF\x03\x02\0"
    /* 313 */ "blta $\x02, $\xFF\x03\x03\0"
    /* 327 */ "blta $\xFF\x03\x03\0"
    /* 337 */ "blta- $\x02, $\xFF\x03\x03\0"
    /* 352 */ "blta- $\xFF\x03\x03\0"
    /* 363 */ "blta+ $\x02, $\xFF\x03\x03\0"
    /* 378 */ "blta+ $\xFF\x03\x03\0"
    /* 389 */ "bgta $\x02, $\xFF\x03\x03\0"
    /* 403 */ "bgta $\xFF\x03\x03\0"
    /* 413 */ "bgta- $\x02, $\xFF\x03\x03\0"
    /* 428 */ "bgta- $\xFF\x03\x03\0"
    /* 439 */ "bgta+ $\x02, $\xFF\x03\x03\0"
    /* 454 */ "bgta+ $\xFF\x03\x03\0"
    /* 465 */ "beqa $\x02, $\xFF\x03\x03\0"
    /* 479 */ "beqa $\xFF\x03\x03\0"
    /* 489 */ "beqa- $\x02, $\xFF\x03\x03\0"
    /* 504 */ "beqa- $\xFF\x03\x03\0"
    /* 515 */ "beqa+ $\x02, $\xFF\x03\x03\0"
    /* 530 */ "beqa+ $\xFF\x03\x03\0"
    /* 541 */ "bnea $\x02, $\xFF\x03\x03\0"
    /* 555 */ "bnea $\xFF\x03\x03\0"
    /* 565 */ "bnea- $\x02, $\xFF\x03\x03\0"
    /* 580 */ "bnea- $\xFF\x03\x03\0"
    /* 591 */ "bnea+ $\x02, $\xFF\x03\x03\0"
    /* 606 */ "bnea+ $\xFF\x03\x03\0"
    /* 617 */ "bltctr $\x02\0"
    /* 627 */ "bltctr\0"
    /* 634 */ "bltctr- $\x02\0"
    /* 645 */ "bltctr-\0"
    /* 653 */ "bltctr+ $\x02\0"
    /* 664 */ "bltctr+\0"
    /* 672 */ "bgtctr $\x02\0"
    /* 682 */ "bgtctr\0"
    /* 689 */ "bgtctr- $\x02\0"
    /* 700 */ "bgtctr-\0"
    /* 708 */ "bgtctr+ $\x02\0"
    /* 719 */ "bgtctr+\0"
    /* 727 */ "beqctr $\x02\0"
    /* 737 */ "beqctr\0"
    /* 744 */ "beqctr- $\x02\0"
    /* 755 */ "beqctr-\0"
    /* 763 */ "beqctr+ $\x02\0"
    /* 774 */ "beqctr+\0"
    /* 782 */ "bnectr $\x02\0"
    /* 792 */ "bnectr\0"
    /* 799 */ "bnectr- $\x02\0"
    /* 810 */ "bnectr-\0"
    /* 818 */ "bnectr+ $\x02\0"
    /* 829 */ "bnectr+\0"
    /* 837 */ "bltctrl $\x02\0"
    /* 848 */ "bltctrl\0"
    /* 856 */ "bltctrl- $\x02\0"
    /* 868 */ "bltctrl-\0"
    /* 877 */ "bltctrl+ $\x02\0"
    /* 889 */ "bltctrl+\0"
    /* 898 */ "bgtctrl $\x02\0"
    /* 909 */ "bgtctrl\0"
    /* 917 */ "bgtctrl- $\x02\0"
    /* 929 */ "bgtctrl-\0"
    /* 938 */ "bgtctrl+ $\x02\0"
    /* 950 */ "bgtctrl+\0"
    /* 959 */ "beqctrl $\x02\0"
    /* 970 */ "beqctrl\0"
    /* 978 */ "beqctrl- $\x02\0"
    /* 990 */ "beqctrl-\0"
    /* 999 */ "beqctrl+ $\x02\0"
    /* 1011 */ "beqctrl+\0"
    /* 1020 */ "bnectrl $\x02\0"
    /* 1031 */ "bnectrl\0"
    /* 1039 */ "bnectrl- $\x02\0"
    /* 1051 */ "bnectrl-\0"
    /* 1060 */ "bnectrl+ $\x02\0"
    /* 1072 */ "bnectrl+\0"
    /* 1081 */ "bltl $\x02, $\xFF\x03\x02\0"
    /* 1095 */ "bltl $\xFF\x03\x02\0"
    /* 1105 */ "bltl- $\x02, $\xFF\x03\x02\0"
    /* 1120 */ "bltl- $\xFF\x03\x02\0"
    /* 1131 */ "bltl+ $\x02, $\xFF\x03\x02\0"
    /* 1146 */ "bltl+ $\xFF\x03\x02\0"
    /* 1157 */ "bgtl $\x02, $\xFF\x03\x02\0"
    /* 1171 */ "bgtl $\xFF\x03\x02\0"
    /* 1181 */ "bgtl- $\x02, $\xFF\x03\x02\0"
    /* 1196 */ "bgtl- $\xFF\x03\x02\0"
    /* 1207 */ "bgtl+ $\x02, $\xFF\x03\x02\0"
    /* 1222 */ "bgtl+ $\xFF\x03\x02\0"
    /* 1233 */ "beql $\x02, $\xFF\x03\x02\0"
    /* 1247 */ "beql $\xFF\x03\x02\0"
    /* 1257 */ "beql- $\x02, $\xFF\x03\x02\0"
    /* 1272 */ "beql- $\xFF\x03\x02\0"
    /* 1283 */ "beql+ $\x02, $\xFF\x03\x02\0"
    /* 1298 */ "beql+ $\xFF\x03\x02\0"
    /* 1309 */ "bnel $\x02, $\xFF\x03\x02\0"
    /* 1323 */ "bnel $\xFF\x03\x02\0"
    /* 1333 */ "bnel- $\x02, $\xFF\x03\x02\0"
    /* 1348 */ "bnel- $\xFF\x03\x02\0"
    /* 1359 */ "bnel+ $\x02, $\xFF\x03\x02\0"
    /* 1374 */ "bnel+ $\xFF\x03\x02\0"
    /* 1385 */ "bltla $\x02, $\xFF\x03\x03\0"
    /* 1400 */ "bltla $\xFF\x03\x03\0"
    /* 1411 */ "bltla- $\x02, $\xFF\x03\x03\0"
    /* 1427 */ "bltla- $\xFF\x03\x03\0"
    /* 1439 */ "bltla+ $\x02, $\xFF\x03\x03\0"
    /* 1455 */ "bltla+ $\xFF\x03\x03\0"
    /* 1467 */ "bgtla $\x02, $\xFF\x03\x03\0"
    /* 1482 */ "bgtla $\xFF\x03\x03\0"
    /* 1493 */ "bgtla- $\x02, $\xFF\x03\x03\0"
    /* 1509 */ "bgtla- $\xFF\x03\x03\0"
    /* 1521 */ "bgtla+ $\x02, $\xFF\x03\x03\0"
    /* 1537 */ "bgtla+ $\xFF\x03\x03\0"
    /* 1549 */ "beqla $\x02, $\xFF\x03\x03\0"
    /* 1564 */ "beqla $\xFF\x03\x03\0"
    /* 1575 */ "beqla- $\x02, $\xFF\x03\x03\0"
    /* 1591 */ "beqla- $\xFF\x03\x03\0"
    /* 1603 */ "beqla+ $\x02, $\xFF\x03\x03\0"
    /* 1619 */ "beqla+ $\xFF\x03\x03\0"
    /* 1631 */ "bnela $\x02, $\xFF\x03\x03\0"
    /* 1646 */ "bnela $\xFF\x03\x03\0"
    /* 1657 */ "bnela- $\x02, $\xFF\x03\x03\0"
    /* 1673 */ "bnela- $\xFF\x03\x03\0"
    /* 1685 */ "bnela+ $\x02, $\xFF\x03\x03\0"
    /* 1701 */ "bnela+ $\xFF\x03\x03\0"
    /* 1713 */ "bltlr $\x02\0"
    /* 1722 */ "bltlr\0"
    /* 1728 */ "bltlr- $\x02\0"
    /* 1738 */ "bltlr-\0"
    /* 1745 */ "bltlr+ $\x02\0"
    /* 1755 */ "bltlr+\0"
    /* 1762 */ "bgtlr $\x02\0"
    /* 1771 */ "bgtlr\0"
    /* 1777 */ "bgtlr- $\x02\0"
    /* 1787 */ "bgtlr-\0"
    /* 1794 */ "bgtlr+ $\x02\0"
    /* 1804 */ "bgtlr+\0"
    /* 1811 */ "beqlr $\x02\0"
    /* 1820 */ "beqlr\0"
    /* 1826 */ "beqlr- $\x02\0"
    /* 1836 */ "beqlr-\0"
    /* 1843 */ "beqlr+ $\x02\0"
    /* 1853 */ "beqlr+\0"
    /* 1860 */ "bnelr $\x02\0"
    /* 1869 */ "bnelr\0"
    /* 1875 */ "bnelr- $\x02\0"
    /* 1885 */ "bnelr-\0"
    /* 1892 */ "bnelr+ $\x02\0"
    /* 1902 */ "bnelr+\0"
    /* 1909 */ "bltlrl $\x02\0"
    /* 1919 */ "bltlrl\0"
    /* 1926 */ "bltlrl- $\x02\0"
    /* 1937 */ "bltlrl-\0"
    /* 1945 */ "bltlrl+ $\x02\0"
    /* 1956 */ "bltlrl+\0"
    /* 1964 */ "bgtlrl $\x02\0"
    /* 1974 */ "bgtlrl\0"
    /* 1981 */ "bgtlrl- $\x02\0"
    /* 1992 */ "bgtlrl-\0"
    /* 2000 */ "bgtlrl+ $\x02\0"
    /* 2011 */ "bgtlrl+\0"
    /* 2019 */ "beqlrl $\x02\0"
    /* 2029 */ "beqlrl\0"
    /* 2036 */ "beqlrl- $\x02\0"
    /* 2047 */ "beqlrl-\0"
    /* 2055 */ "beqlrl+ $\x02\0"
    /* 2066 */ "beqlrl+\0"
    /* 2074 */ "bnelrl $\x02\0"
    /* 2084 */ "bnelrl\0"
    /* 2091 */ "bnelrl- $\x02\0"
    /* 2102 */ "bnelrl-\0"
    /* 2110 */ "bnelrl+ $\x02\0"
    /* 2121 */ "bnelrl+\0"
    /* 2129 */ "cmpd $\x02, $\x03\0"
    /* 2141 */ "cmpdi $\x02, $\xFF\x03\x01\0"
    /* 2156 */ "cmpld $\x02, $\x03\0"
    /* 2169 */ "cmpldi $\x02, $\xFF\x03\x04\0"
    /* 2185 */ "cmplw $\x02, $\x03\0"
    /* 2198 */ "cmplwi $\x02, $\xFF\x03\x04\0"
    /* 2214 */ "cmpw $\x02, $\x03\0"
    /* 2226 */ "cmpwi $\x02, $\xFF\x03\x01\0"
    /* 2241 */ "cntlzw $\x01, $\x02\0"
    /* 2255 */ "cntlzw. $\x01, $\x02\0"
    /* 2270 */ "paste. $\x01, $\x02\0"
    /* 2284 */ "crset $\x01\0"
    /* 2293 */ "crnot $\x01, $\x02\0"
    /* 2306 */ "crmove $\x01, $\x02\0"
    /* 2320 */ "crclr $\x01\0"
    /* 2329 */ "isellt $\x01, $\x02, $\x03\0"
    /* 2347 */ "iselgt $\x01, $\x02, $\x03\0"
    /* 2365 */ "iseleq $\x01, $\x02, $\x03\0"
    /* 2383 */ "mbar\0"
    /* 2388 */ "mfbr0 $\x01\0"
    /* 2397 */ "mfbr1 $\x01\0"
    /* 2406 */ "mfbr2 $\x01\0"
    /* 2415 */ "mfbr3 $\x01\0"
    /* 2424 */ "mfbr4 $\x01\0"
    /* 2433 */ "mfbr5 $\x01\0"
    /* 2442 */ "mfbr6 $\x01\0"
    /* 2451 */ "mfbr7 $\x01\0"
    /* 2460 */ "mfxer $\x01\0"
    /* 2469 */ "mfudscr $\x01\0"
    /* 2480 */ "mfrtcu $\x01\0"
    /* 2490 */ "mfrtcl $\x01\0"
    /* 2500 */ "mflr $\x01\0"
    /* 2508 */ "mfctr $\x01\0"
    /* 2517 */ "mfuamr $\x01\0"
    /* 2527 */ "mfdscr $\x01\0"
    /* 2537 */ "mfdsisr $\x01\0"
    /* 2548 */ "mfdar $\x01\0"
    /* 2557 */ "mfdec $\x01\0"
    /* 2566 */ "mfsdr1 $\x01\0"
    /* 2576 */ "mfsrr0 $\x01\0"
    /* 2586 */ "mfsrr1 $\x01\0"
    /* 2596 */ "mfcfar $\x01\0"
    /* 2606 */ "mfamr $\x01\0"
    /* 2615 */ "mfpid $\x01\0"
    /* 2624 */ "mfasr $\x01\0"
    /* 2633 */ "mfpvr $\x01\0"
    /* 2642 */ "mfspefscr $\x01\0"
    /* 2655 */ "mfdbatu $\x01, 0\0"
    /* 2669 */ "mfdbatl $\x01, 0\0"
    /* 2683 */ "mfibatu $\x01, 0\0"
    /* 2697 */ "mfibatl $\x01, 0\0"
    /* 2711 */ "mfdbatu $\x01, 1\0"
    /* 2725 */ "mfdbatl $\x01, 1\0"
    /* 2739 */ "mfibatu $\x01, 1\0"
    /* 2753 */ "mfibatl $\x01, 1\0"
    /* 2767 */ "mfdbatu $\x01, 2\0"
    /* 2781 */ "mfdbatl $\x01, 2\0"
    /* 2795 */ "mfibatu $\x01, 2\0"
    /* 2809 */ "mfibatl $\x01, 2\0"
    /* 2823 */ "mfdbatu $\x01, 3\0"
    /* 2837 */ "mfdbatl $\x01, 3\0"
    /* 2851 */ "mfibatu $\x01, 3\0"
    /* 2865 */ "mfibatl $\x01, 3\0"
    /* 2879 */ "mfppr $\x01\0"
    /* 2888 */ "mfesr $\x01\0"
    /* 2897 */ "mfdear $\x01\0"
    /* 2907 */ "mftcr $\x01\0"
    /* 2916 */ "mftbhi $\x01\0"
    /* 2926 */ "mftblo $\x01\0"
    /* 2936 */ "mfsrr2 $\x01\0"
    /* 2946 */ "mfsrr3 $\x01\0"
    /* 2956 */ "mfdccr $\x01\0"
    /* 2966 */ "mficcr $\x01\0"
    /* 2976 */ "mftbu $\x01\0"
    /* 2985 */ "mfvrsave $\x01\0"
    /* 2997 */ "mffprd $\x01, $\x02\0"
    /* 3011 */ "mffprwz $\x01, $\x02\0"
    /* 3026 */ "mtcr $\x02\0"
    /* 3034 */ "mtbr0 $\x01\0"
    /* 3043 */ "mtbr1 $\x01\0"
    /* 3052 */ "mtbr2 $\x01\0"
    /* 3061 */ "mtbr3 $\x01\0"
    /* 3070 */ "mtbr4 $\x01\0"
    /* 3079 */ "mtbr5 $\x01\0"
    /* 3088 */ "mtbr6 $\x01\0"
    /* 3097 */ "mtbr7 $\x01\0"
    /* 3106 */ "mtfsf $\x01, $\x02\0"
    /* 3119 */ "mtfsfi $\xFF\x01\x05, $\xFF\x02\x06\0"
    /* 3137 */ "mtfsfi. $\xFF\x01\x05, $\xFF\x02\x06\0"
    /* 3156 */ "mtfsf. $\x01, $\x02\0"
    /* 3170 */ "mtmsr $\x01\0"
    /* 3179 */ "mtmsrd $\x01\0"
    /* 3189 */ "mtxer $\x02\0"
    /* 3198 */ "mtudscr $\x02\0"
    /* 3209 */ "mtlr $\x02\0"
    /* 3217 */ "mtctr $\x02\0"
    /* 3226 */ "mtuamr $\x02\0"
    /* 3236 */ "mtdscr $\x02\0"
    /* 3246 */ "mtdsisr $\x02\0"
    /* 3257 */ "mtdar $\x02\0"
    /* 3266 */ "mtdec $\x02\0"
    /* 3275 */ "mtsdr1 $\x02\0"
    /* 3285 */ "mtsrr0 $\x02\0"
    /* 3295 */ "mtsrr1 $\x02\0"
    /* 3305 */ "mtcfar $\x02\0"
    /* 3315 */ "mtamr $\x02\0"
    /* 3324 */ "mtpid $\x02\0"
    /* 3333 */ "mtasr $\x02\0"
    /* 3342 */ "mttbl $\x02\0"
    /* 3351 */ "mttbu $\x02\0"
    /* 3360 */ "mtspefscr $\x02\0"
    /* 3373 */ "mtdbatu 0, $\x02\0"
    /* 3387 */ "mtdbatl 0, $\x02\0"
    /* 3401 */ "mtibatu 0, $\x02\0"
    /* 3415 */ "mtibatl 0, $\x02\0"
    /* 3429 */ "mtdbatu 1, $\x02\0"
    /* 3443 */ "mtdbatl 1, $\x02\0"
    /* 3457 */ "mtibatu 1, $\x02\0"
    /* 3471 */ "mtibatl 1, $\x02\0"
    /* 3485 */ "mtdbatu 2, $\x02\0"
    /* 3499 */ "mtdbatl 2, $\x02\0"
    /* 3513 */ "mtibatu 2, $\x02\0"
    /* 3527 */ "mtibatl 2, $\x02\0"
    /* 3541 */ "mtdbatu 3, $\x02\0"
    /* 3555 */ "mtdbatl 3, $\x02\0"
    /* 3569 */ "mtibatu 3, $\x02\0"
    /* 3583 */ "mtibatl 3, $\x02\0"
    /* 3597 */ "mtppr $\x02\0"
    /* 3606 */ "mtesr $\x02\0"
    /* 3615 */ "mtdear $\x02\0"
    /* 3625 */ "mttcr $\x02\0"
    /* 3634 */ "mttbhi $\x02\0"
    /* 3644 */ "mttblo $\x02\0"
    /* 3654 */ "mtsrr2 $\x02\0"
    /* 3664 */ "mtsrr3 $\x02\0"
    /* 3674 */ "mtdccr $\x02\0"
    /* 3684 */ "mticcr $\x02\0"
    /* 3694 */ "mtudscr $\x01\0"
    /* 3705 */ "mtvrsave $\x01\0"
    /* 3717 */ "mtfprd $\x01, $\x02\0"
    /* 3731 */ "mtfprwa $\x01, $\x02\0"
    /* 3746 */ "mtfprwz $\x01, $\x02\0"
    /* 3761 */ "not $\x01, $\x02\0"
    /* 3772 */ "not. $\x01, $\x02\0"
    /* 3784 */ "mr $\x01, $\x02\0"
    /* 3794 */ "mr. $\x01, $\x02\0"
    /* 3805 */ "nop\0"
    /* 3809 */ "qvfclr $\x01\0"
    /* 3819 */ "qvfand $\x01, $\x02, $\x03\0"
    /* 3837 */ "qvfandc $\x01, $\x02, $\x03\0"
    /* 3856 */ "qvfctfb $\x01, $\x02\0"
    /* 3871 */ "qvfxor $\x01, $\x02, $\x03\0"
    /* 3889 */ "qvfor $\x01, $\x02, $\x03\0"
    /* 3906 */ "qvfnor $\x01, $\x02, $\x03\0"
    /* 3924 */ "qvfequ $\x01, $\x02, $\x03\0"
    /* 3942 */ "qvfnot $\x01, $\x02\0"
    /* 3956 */ "qvforc $\x01, $\x02, $\x03\0"
    /* 3974 */ "qvfnand $\x01, $\x02, $\x03\0"
    /* 3993 */ "qvfset $\x01\0"
    /* 4003 */ "rfebb\0"
    /* 4009 */ "rotld $\x01, $\x02, $\x03\0"
    /* 4026 */ "rotld. $\x01, $\x02, $\x03\0"
    /* 4044 */ "rotldi $\x01, $\x02, $\xFF\x03\x07\0"
    /* 4064 */ "clrldi $\x01, $\x02, $\xFF\x04\x07\0"
    /* 4084 */ "rotldi. $\x01, $\x02, $\xFF\x03\x07\0"
    /* 4105 */ "clrldi. $\x01, $\x02, $\xFF\x04\x07\0"
    /* 4126 */ "rotlwi $\x01, $\x02, $\xFF\x03\x08\0"
    /* 4146 */ "clrlwi $\x01, $\x02, $\xFF\x04\x08\0"
    /* 4166 */ "rotlwi. $\x01, $\x02, $\xFF\x03\x08\0"
    /* 4187 */ "clrlwi. $\x01, $\x02, $\xFF\x04\x08\0"
    /* 4208 */ "rotlw $\x01, $\x02, $\x03\0"
    /* 4225 */ "rotlw. $\x01, $\x02, $\x03\0"
    /* 4243 */ "sc\0"
    /* 4246 */ "sub $\x01, $\x03, $\x02\0"
    /* 4261 */ "sub. $\x01, $\x03, $\x02\0"
    /* 4277 */ "subc $\x01, $\x03, $\x02\0"
    /* 4293 */ "subc. $\x01, $\x03, $\x02\0"
    /* 4310 */ "sync\0"
    /* 4315 */ "lwsync\0"
    /* 4322 */ "ptesync\0"
    /* 4330 */ "tdlt $\x02, $\x03\0"
    /* 4342 */ "tdeq $\x02, $\x03\0"
    /* 4354 */ "tdgt $\x02, $\x03\0"
    /* 4366 */ "tdne $\x02, $\x03\0"
    /* 4378 */ "tdllt $\x02, $\x03\0"
    /* 4391 */ "tdlgt $\x02, $\x03\0"
    /* 4404 */ "tdu $\x02, $\x03\0"
    /* 4415 */ "tdlti $\x02, $\xFF\x03\x01\0"
    /* 4430 */ "tdeqi $\x02, $\xFF\x03\x01\0"
    /* 4445 */ "tdgti $\x02, $\xFF\x03\x01\0"
    /* 4460 */ "tdnei $\x02, $\xFF\x03\x01\0"
    /* 4475 */ "tdllti $\x02, $\xFF\x03\x01\0"
    /* 4491 */ "tdlgti $\x02, $\xFF\x03\x01\0"
    /* 4507 */ "tdui $\x02, $\xFF\x03\x01\0"
    /* 4521 */ "tend.\0"
    /* 4527 */ "tendall.\0"
    /* 4536 */ "tlbie $\x02\0"
    /* 4545 */ "tlbrehi $\x01, $\x02\0"
    /* 4560 */ "tlbrelo $\x01, $\x02\0"
    /* 4575 */ "tlbwehi $\x01, $\x02\0"
    /* 4590 */ "tlbwelo $\x01, $\x02\0"
    /* 4605 */ "tsuspend.\0"
    /* 4615 */ "tresume.\0"
    /* 4624 */ "trap\0"
    /* 4629 */ "twlt $\x02, $\x03\0"
    /* 4641 */ "tweq $\x02, $\x03\0"
    /* 4653 */ "twgt $\x02, $\x03\0"
    /* 4665 */ "twne $\x02, $\x03\0"
    /* 4677 */ "twllt $\x02, $\x03\0"
    /* 4690 */ "twlgt $\x02, $\x03\0"
    /* 4703 */ "twu $\x02, $\x03\0"
    /* 4714 */ "twlti $\x02, $\xFF\x03\x01\0"
    /* 4729 */ "tweqi $\x02, $\xFF\x03\x01\0"
    /* 4744 */ "twgti $\x02, $\xFF\x03\x01\0"
    /* 4759 */ "twnei $\x02, $\xFF\x03\x01\0"
    /* 4774 */ "twllti $\x02, $\xFF\x03\x01\0"
    /* 4790 */ "twlgti $\x02, $\xFF\x03\x01\0"
    /* 4806 */ "twui $\x02, $\xFF\x03\x01\0"
    /* 4820 */ "vnot $\x01, $\x02\0"
    /* 4832 */ "vmr $\x01, $\x02\0"
    /* 4843 */ "wait\0"
    /* 4848 */ "waitrsv\0"
    /* 4856 */ "waitimpl\0"
    /* 4865 */ "xnop\0"
    /* 4870 */ "xvmovdp $\x01, $\x02\0"
    /* 4885 */ "xvmovsp $\x01, $\x02\0"
    /* 4900 */ "xxspltd $\x01, $\x02, 0\0"
    /* 4918 */ "xxspltd $\x01, $\x02, 1\0"
    /* 4936 */ "xxmrghd $\x01, $\x02, $\x03\0"
    /* 4955 */ "xxmrgld $\x01, $\x02, $\x03\0"
    /* 4974 */ "xxswapd $\x01, $\x02\0"
    /* 4989 */ "bt $\x02, $\xFF\x03\x02\0"
    /* 5001 */ "bf $\x02, $\xFF\x03\x02\0"
    /* 5013 */ "bt- $\x02, $\xFF\x03\x02\0"
    /* 5026 */ "bf- $\x02, $\xFF\x03\x02\0"
    /* 5039 */ "bt+ $\x02, $\xFF\x03\x02\0"
    /* 5052 */ "bf+ $\x02, $\xFF\x03\x02\0"
    /* 5065 */ "bdnzt $\x02, $\xFF\x03\x02\0"
    /* 5080 */ "bdnzf $\x02, $\xFF\x03\x02\0"
    /* 5095 */ "bdzt $\x02, $\xFF\x03\x02\0"
    /* 5109 */ "bdzf $\x02, $\xFF\x03\x02\0"
    /* 5123 */ "bta $\x02, $\xFF\x03\x03\0"
    /* 5136 */ "bfa $\x02, $\xFF\x03\x03\0"
    /* 5149 */ "bta- $\x02, $\xFF\x03\x03\0"
    /* 5163 */ "bfa- $\x02, $\xFF\x03\x03\0"
    /* 5177 */ "bta+ $\x02, $\xFF\x03\x03\0"
    /* 5191 */ "bfa+ $\x02, $\xFF\x03\x03\0"
    /* 5205 */ "bdnzta $\x02, $\xFF\x03\x03\0"
    /* 5221 */ "bdnzfa $\x02, $\xFF\x03\x03\0"
    /* 5237 */ "bdzta $\x02, $\xFF\x03\x03\0"
    /* 5252 */ "bdzfa $\x02, $\xFF\x03\x03\0"
    /* 5267 */ "bca+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5287 */ "bca- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5307 */ "bcctr $\xFF\x01\x08, $\x02\0"
    /* 5322 */ "btctr $\x02\0"
    /* 5331 */ "bfctr $\x02\0"
    /* 5340 */ "btctr- $\x02\0"
    /* 5350 */ "bfctr- $\x02\0"
    /* 5360 */ "btctr+ $\x02\0"
    /* 5370 */ "bfctr+ $\x02\0"
    /* 5380 */ "bcctrl $\xFF\x01\x08, $\x02\0"
    /* 5396 */ "btctrl $\x02\0"
    /* 5406 */ "bfctrl $\x02\0"
    /* 5416 */ "btctrl- $\x02\0"
    /* 5427 */ "bfctrl- $\x02\0"
    /* 5438 */ "btctrl+ $\x02\0"
    /* 5449 */ "bfctrl+ $\x02\0"
    /* 5460 */ "btl $\x02, $\xFF\x03\x02\0"
    /* 5473 */ "bfl $\x02, $\xFF\x03\x02\0"
    /* 5486 */ "btl- $\x02, $\xFF\x03\x02\0"
    /* 5500 */ "bfl- $\x02, $\xFF\x03\x02\0"
    /* 5514 */ "btl+ $\x02, $\xFF\x03\x02\0"
    /* 5528 */ "bfl+ $\x02, $\xFF\x03\x02\0"
    /* 5542 */ "bdnztl $\x02, $\xFF\x03\x02\0"
    /* 5558 */ "bdnzfl $\x02, $\xFF\x03\x02\0"
    /* 5574 */ "bdztl $\x02, $\xFF\x03\x02\0"
    /* 5589 */ "bdzfl $\x02, $\xFF\x03\x02\0"
    /* 5604 */ "btla $\x02, $\xFF\x03\x03\0"
    /* 5618 */ "bfla $\x02, $\xFF\x03\x03\0"
    /* 5632 */ "btla- $\x02, $\xFF\x03\x03\0"
    /* 5647 */ "bfla- $\x02, $\xFF\x03\x03\0"
    /* 5662 */ "btla+ $\x02, $\xFF\x03\x03\0"
    /* 5677 */ "bfla+ $\x02, $\xFF\x03\x03\0"
    /* 5692 */ "bdnztla $\x02, $\xFF\x03\x03\0"
    /* 5709 */ "bdnzfla $\x02, $\xFF\x03\x03\0"
    /* 5726 */ "bdztla $\x02, $\xFF\x03\x03\0"
    /* 5742 */ "bdzfla $\x02, $\xFF\x03\x03\0"
    /* 5758 */ "bcla+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5779 */ "bcla- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5800 */ "bclr $\xFF\x01\x08, $\x02\0"
    /* 5814 */ "btlr $\x02\0"
    /* 5822 */ "bflr $\x02\0"
    /* 5830 */ "btlr- $\x02\0"
    /* 5839 */ "bflr- $\x02\0"
    /* 5848 */ "btlr+ $\x02\0"
    /* 5857 */ "bflr+ $\x02\0"
    /* 5866 */ "bdnztlr $\x02\0"
    /* 5877 */ "bdnzflr $\x02\0"
    /* 5888 */ "bdztlr $\x02\0"
    /* 5898 */ "bdzflr $\x02\0"
    /* 5908 */ "bclrl $\xFF\x01\x08, $\x02\0"
    /* 5923 */ "btlrl $\x02\0"
    /* 5932 */ "bflrl $\x02\0"
    /* 5941 */ "btlrl- $\x02\0"
    /* 5951 */ "bflrl- $\x02\0"
    /* 5961 */ "btlrl+ $\x02\0"
    /* 5971 */ "bflrl+ $\x02\0"
    /* 5981 */ "bdnztlrl $\x02\0"
    /* 5993 */ "bdnzflrl $\x02\0"
    /* 6005 */ "bdztlrl $\x02\0"
    /* 6016 */ "bdzflrl $\x02\0"
    /* 6027 */ "bcl+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 6047 */ "bcl- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 6067 */ "bc+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 6086 */ "bc- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
  ;

#ifndef NDEBUG
  //static struct SortCheck {
  //  SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
  //    assert(std::is_sorted(
  //               OpToPatterns.begin(), OpToPatterns.end(),
  //               [](const PatternsForOpcode &L, const //PatternsForOpcode &R) {
  //                 return L.Opcode < R.Opcode;
  //               }) &&
  //           "tablegen failed to sort opcode patterns");
  //  }
  //} sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M = {
    OpToPatterns,
    Patterns,
    Conds,
    AsmStrings,
  };
  const char *AsmString = matchAliasPatterns(MI, &M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  SStream_concat1(OS, '\t');
  char *substr = malloc(I+1);
  memcpy(substr, AsmString, I);
  substr[I] = '\0';
  SStream_concat0(OS, substr);
  free(substr);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      SStream_concat1(OS, '\t');
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, ((unsigned)AsmString[I++]) - 1, OS);
      } else {
        SStream_concat1(OS, AsmString[I++]);
      }
    } while (AsmString[I] != '\0');
  }

  return true;
#else
  return false;
#endif // CAPSTONE_DIET
}

static void printCustomAliasOperand(
         MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         SStream *OS) {
#ifndef CAPSTONE_DIET
  switch (PrintMethodIdx) {
  default:
    assert(0 && "Unknown PrintMethod kind");
    break;
  case 0:
    printS16ImmOperand(MI, OpIdx, OS);
    break;
  case 1:
    printBranchOperand(MI, Address, OpIdx, OS);
    break;
  case 2:
    printAbsBranchOperand(MI, OpIdx, OS);
    break;
  case 3:
    printU16ImmOperand(MI, OpIdx, OS);
    break;
  case 4:
    printU3ImmOperand(MI, OpIdx, OS);
    break;
  case 5:
    printU4ImmOperand(MI, OpIdx, OS);
    break;
  case 6:
    printU6ImmOperand(MI, OpIdx, OS);
    break;
  case 7:
    printU5ImmOperand(MI, OpIdx, OS);
    break;
  }
#endif // CAPSTONE_DIET
}

#endif // PRINT_ALIAS_INSTR
